{"version":3,"sources":["types/wallet.ts","router/index.js","redux/useTypedSelector.ts","config.ts","utills/toPrettyCoin.ts","cosmos/keplr/index.ts","cosmos/index.ts","redux/action-creator/wallet.ts","hooks/useAccountConnection.ts","types/reviewChanges.ts","components/Loader/Spinner.tsx","components/SideBar/SidebarBottom/SidebarBottom.tsx","components/SideBar/SideBar.tsx","components/SideBar/RouteWrapper.tsx","components/Home/index.tsx","redux/action-creator/reviewChanges.ts","types/proposal.ts","components/ReviewState/ModuleSection.tsx","components/ReviewState/ReviewState.tsx","utills/toPrettyDate.ts","components/Proposals/ProposalItem.tsx","redux/action-creator/proposal.ts","types/adminList.ts","components/Proposals/index.tsx","redux/action-creator/adminList.ts","types/submitProposal.ts","components/AdminModule/AdminList/AdminDetail.tsx","components/AdminModule/AdminList/AdminForm.tsx","components/AdminModule/AdminList/AdminList.tsx","redux/action-creator/submitProposal.ts","components/AdminModule/SubmitProposal/TextProposal.tsx","cosmos/codec/cosmos/params/v1beta1/params.ts","components/AdminModule/SubmitProposal/ParameterChangeProposal/ParamChange/ChangeForm.tsx","components/AdminModule/SubmitProposal/ParameterChangeProposal/ParamChange/ChangeItem.tsx","components/AdminModule/SubmitProposal/ParameterChangeProposal/ParameterChangeProposal.tsx","components/AdminModule/SubmitProposal/Coins/CoinsForm.tsx","components/AdminModule/SubmitProposal/Coins/CoinItem.tsx","components/AdminModule/SubmitProposal/CommunityPoolSpendProposal.tsx","components/AdminModule/SubmitProposal/index.tsx","components/AdminModule/AdminModule.tsx","components/NotFound/index.tsx","components/ScrollToTopOnMount/index.tsx","components/Proposals/ProposalDetail.tsx","App.tsx","reportWebVitals.ts","redux/reducers/adminList.ts","redux/reducers/proposal.ts","redux/reducers/wallet.ts","redux/reducers/reviewChanges.ts","redux/reducers/submitProposal.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx","cosmos/codec/cosmos/adminmodule/adminmodule/tx.js","cosmos/codec/cosmos/adminmodule/google/protobuf/timestamp.js","cosmos/codec/cosmos/adminmodule/adminmodule/adminmodule.js","cosmos/codec/cosmos/adminmodule/google/protobuf/any.js"],"names":["WalletActionTypes","routes","useTypedSelector","useSelector","chainInfo","rpc","rest","chainId","chainName","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","bip44","coinType","bech32Config","Bech32Address","defaultBech32Config","currencies","feeCurrencies","features","toPrettyCoin","amount","CoinPretty","Dec","toString","getKeplr","getKeplrFromWindow","getAccountName","keplr","a","getKey","key","name","getWalletAddress","bech32Address","getBalance","walletAddress","lcdClient","bank","balances","then","data","result","coins","res","find","c","denom","trim","LcdClient","withExtensions","apiUrl","setupAuthExtension","setupBankExtension","setupDistributionExtension","setupGovExtension","setupMintExtension","setupSlashingExtension","setupStakingExtension","setupSupplyExtension","connectWallet","dispatch","type","WALLET_CONNECT","Error","experimentalSuggestChain","enable","registry","Registry","register","MsgSubmitProposal","MsgAddAdmin","MsgDeleteAdmin","defaultRegistryTypes","forEach","v","offlineSigner","getOfflineSigner","SigningStargateClient","connectWithSigner","stargateClient","WALLET_SUCCESS","payload","WALLET_ERROR","message","KeyAccountAutoConnect","useAccountConnection","useDispatch","isConnected","state","wallet","shouldAutoConnectAccount","localStorage","getItem","disconnectAccount","useCallback","removeItem","WALLET_DISCONNECT","connectAccount","setItem","useEffect","useMemo","ReviewChangesActionTypes","Spinner","size","SidebarBottom","error","useState","coin","setCoin","setName","setData","className","onClick","active","fontWeight","boxShadow","borderLeft","color","Sidebar","withRouter","to","activeStyle","RouteWrapper","children","Home","ProposalActionTypes","sendErrorNotification","errMessage","ERROR","setTimeout","CLEAR_ERROR","fetchParamsList","SET_LOADING","loading","get","console","log","distribution","govVoting","govDeposit","govTally","slashing","staking","SET_PARAMS","params","gov","voting_params","deposit_params","tally_params","ModuleSection","title","ReviewState","reviewChanges","modules","default_send_enabled","send_enabled","base_proposer_reward","bonus_proposer_reward","community_tax","withdraw_addr_enabled","min_deposit","map","d","max_deposit_period","voting_period","quorum","threshold","veto_threshold","downtime_jail_duration","min_signed_per_window","signed_blocks_window","slash_fraction_double_sign","slash_fraction_downtime","bond_denom","historical_entries","max_entries","max_validators","unbonding_time","toPrettyDate","date","dateString","Date","toUTCString","indexDayOfWeek","indexOf","substr","ProposalItem","proposal","proposal_id","submit_time","content","length","chainIdAndType","split","typeShort","isAParameterChangeProposalContent","isACommunityPoolSpendProposalContent","AdminListActionTypes","fetchProposals","PROPOSAL_CALL","archivedProposals","PROPOSAL_SUCCESS","proposals","reverse","PROPOSAL_ERROR","ProposalsPage","isFetchingProposals","p","SubmitProposalTypes","AdminDetail","accountAddress","orderNum","deleteAdmin","address","window","confirm","adminAddress","kepler","sender","msgAny","typeUrl","value","msgDeleteAdminRequest","admin","creator","fee","gas","signAndBroadcast","broadcastRes","isBroadcastTxSuccess","adminsResp","SET_LIST","admins","deleteAdminAction","disabled","AdminForm","setAddress","addAdmin","resp","Bech32","decode","msgAddAdminRequest","saveAdminAction","htmlFor","onChange","target","placeholder","id","AdminList","adm","i","submitProposal","getState","SUBMIT_PROPOSAL_CALL","setSubmitProposalError","proposer","SUBMIT_PROPOSAL_SUCCESS","rawLog","SUBMIT_PROPOSAL_ERROR","TextProposal","description","TextProposalProc","encode","finish","ParameterChangeProposal","writer","_m0","Writer","create","uint32","string","changes","ParamChange","fork","ldelim","baseParamChange","subspace","input","reader","Reader","end","undefined","len","pos","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","util","Long","configure","subspaceKeys","auth","crisis","mint","evidence","ChangeForm","addChange","setSubspace","setKey","setValue","subOptions","Object","keys","label","keyOptions","menuPlacement","options","e","defaultValue","elm","ChangeItem","change","deleteChange","btnDeleteShow","setBtnDeleteShow","onMouseEnter","onMouseLeave","setChanges","slice","ParameterChangeProposalProc","CoinsForm","addCoin","setAmount","setDenom","CoinItem","deposit","deleteDeposit","CommunityPoolSpendProposal","recipient","setRecipient","CPSProposalProc","SubmitProposal","s","broadcastResponse","fetching","setTitle","setDescription","SUBMIT_PROPOSAL_RESET","forceRender","AdminModule","NotFoundPage","ScrollToTopOnMount","scrollTo","ChangesTable","ProposalDetail","history","useHistory","useRouteMatch","isFetchingItem","push","markdown","am","App","exact","path","Proposals","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","baseMsgDeleteAdmin","Uint8Array","baseMsgAddAdmin","baseMsgSubmitProposal","Any","globalThis","self","global","baseTimestamp","seconds","nanos","Timestamp","int64","int32","longToNumber","Number","long","gt","MAX_SAFE_INTEGER","toNumber","baseTextProposal","baseAny","bytes","b64","bin","atob","arr","charCodeAt","bytesFromBase64","byteLength","fromCharCode","btoa","join","base64FromBytes","Buffer","from"],"mappings":"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","file":"static/js/main.55533039.chunk.js","sourcesContent":["import { Keplr } from \"@keplr-wallet/types\";\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\n\nexport interface WalletState {\n    keplr: Keplr | null;\n    isConnected: boolean;\n    stargateClient: SigningStargateClient | null;\n    error: string | null;\n}\n\nexport enum WalletActionTypes {\n    WALLET_CONNECT = \"WALLET_CONNECT\",\n    WALLET_DISCONNECT = \"WALLET_DISCONNECT\",\n    WALLET_SUCCESS = \"WALLET_SUCCESS\",\n    WALLET_ERROR = \"WALLET_ERROR\"\n}\n\ninterface WalletConnectAction {\n    type: WalletActionTypes.WALLET_CONNECT;\n}\n\ninterface WalletDisconnectAction {\n    type: WalletActionTypes.WALLET_DISCONNECT;\n}\n\ninterface WalletSuccessAction {\n    type: WalletActionTypes.WALLET_SUCCESS;\n    payload: { keplr: Keplr; stargateClient: SigningStargateClient };\n}\n\ninterface WalletErrorAction {\n    type: WalletActionTypes.WALLET_ERROR;\n    payload: string;\n}\n\nexport type WalletAction =\n    | WalletConnectAction\n    | WalletDisconnectAction\n    | WalletSuccessAction\n    | WalletErrorAction;\n","const routes = {\n    home: \"/home\",\n    reviewState: \"/reviewState\",\n    proposals: \"/proposals\",\n    proposalItem: \"/proposals/:id\",\n    adminModule: \"/adminModule\"\n};\n\nexport { routes };\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"./reducers\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ChainInfo } from \"@keplr-wallet/types\";\nimport { Bech32Address } from \"@keplr-wallet/cosmos\";\n\n//testnet\nconst chainInfo: ChainInfo = {\n    rpc: \"https://cosmos.adoriasoft.link:26658/\",\n    rest: \"https://cosmos.adoriasoft.link:1318/\",\n    chainId: \"adminmodule\",\n    chainName: \"TESTNET\",\n    stakeCurrency: {\n        coinDenom: \"STAKE\",\n        coinMinimalDenom: \"stake\",\n        coinDecimals: 6\n    },\n    bip44: {\n        coinType: 118\n    },\n    bech32Config: Bech32Address.defaultBech32Config(\"cosmos\"),\n    currencies: [\n        {\n            coinDenom: \"STAKE\",\n            coinMinimalDenom: \"stake\",\n            coinDecimals: 6\n        }\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: \"STAKE\",\n            coinMinimalDenom: \"stake\",\n            coinDecimals: 6\n        }\n    ],\n    features: [\"stargate\", \"ibc-transfer\"]\n};\n\n// mainnet\n// const chainInfo: ChainInfo = {\n//     rpc: \"https://rpc-cosmoshub.keplr.app\",\n//     rest: \"https://lcd-cosmoshub.keplr.app\",\n//     chainId: \"cosmoshub-4\",\n//     chainName: \"Cosmos Hub\",\n//     stakeCurrency: {\n//         coinDenom: \"ATOM\",\n//         coinMinimalDenom: \"uatom\",\n//         coinDecimals: 6,\n//         coinGeckoId: \"cosmos\",\n//         coinImageUrl: window.location.origin + \"/public/assets/tokens/cosmos.svg\"\n//     },\n//     bip44: {\n//         coinType: 118\n//     },\n//     bech32Config: Bech32Address.defaultBech32Config(\"cosmos\"),\n//     currencies: [\n//         {\n//             coinDenom: \"ATOM\",\n//             coinMinimalDenom: \"uatom\",\n//             coinDecimals: 6,\n//             coinGeckoId: \"cosmos\",\n//             coinImageUrl: window.location.origin + \"/public/assets/tokens/cosmos.svg\"\n//         }\n//     ],\n//     feeCurrencies: [\n//         {\n//             coinDenom: \"ATOM\",\n//             coinMinimalDenom: \"uatom\",\n//             coinDecimals: 6,\n//             coinGeckoId: \"cosmos\",\n//             coinImageUrl: window.location.origin + \"/public/assets/tokens/cosmos.svg\"\n//         }\n//     ],\n//     coinType: 118,\n//     features: [\"stargate\", \"ibc-transfer\"]\n// };\n\nexport { chainInfo };\n","import { CoinPretty, Dec } from \"@keplr-wallet/unit\";\nimport { chainInfo } from \"../config\";\n\nexport const toPrettyCoin = (\n    amount: string | Dec,\n    denom: string = chainInfo.currencies[0].coinMinimalDenom\n): CoinPretty => {\n    return new CoinPretty(chainInfo.currencies[0], new Dec(amount.toString()));\n};\n","import { getKeplrFromWindow } from \"@keplr-wallet/stores\";\nimport { Keplr } from \"@keplr-wallet/types\";\nimport { chainInfo } from \"../../config\";\nimport { lcdClient } from \"../index\";\nimport { toPrettyCoin } from \"../../utills/toPrettyCoin\";\n\nexport const getKeplr = getKeplrFromWindow;\n\nexport const getAccountName = async (keplr: Keplr): Promise<string> => {\n    const key = await keplr.getKey(chainInfo.chainId);\n    return key.name;\n};\n\nexport const getWalletAddress = async (keplr: Keplr): Promise<string> => {\n    const key = await keplr.getKey(chainInfo.chainId);\n    return key.bech32Address;\n};\n\nexport const getBalance = async (keplr: Keplr, walletAddress: string): Promise<string> => {\n    const coins = await lcdClient.bank.balances(walletAddress).then((data) => data.result);\n    const res = coins.find((c) => c.denom === chainInfo.stakeCurrency.coinMinimalDenom);\n    return toPrettyCoin(res?.amount || \"0\")\n        .trim(true)\n        .toString();\n};\n","import { getKeplr } from \"./keplr\";\nimport { chainInfo } from \"../config\";\nimport {\n    LcdClient,\n    setupAuthExtension,\n    setupBankExtension,\n    setupDistributionExtension,\n    setupGovExtension,\n    setupMintExtension,\n    setupSlashingExtension,\n    setupStakingExtension,\n    setupSupplyExtension\n} from \"@cosmjs/launchpad\";\n\nconst lcdClient = LcdClient.withExtensions(\n    { apiUrl: chainInfo.rest },\n    setupAuthExtension,\n    setupBankExtension,\n    setupDistributionExtension,\n    setupGovExtension,\n    setupMintExtension,\n    setupSlashingExtension,\n    setupStakingExtension,\n    setupSupplyExtension\n);\n\nexport { lcdClient, getKeplr };\n","import { Dispatch } from \"redux\";\nimport { WalletAction, WalletActionTypes } from \"../../types/wallet\";\nimport { chainInfo } from \"../../config\";\nimport { getKeplr } from \"../../cosmos\";\nimport { defaultRegistryTypes, SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport {\n    MsgAddAdmin,\n    MsgDeleteAdmin,\n    MsgSubmitProposal\n} from \"../../cosmos/codec/cosmos/adminmodule/adminmodule/tx\";\n\nexport const connectWallet = () => {\n    return async (dispatch: Dispatch<WalletAction>) => {\n        try {\n            dispatch({ type: WalletActionTypes.WALLET_CONNECT });\n\n            const keplr = await getKeplr();\n            if (!keplr) {\n                throw new Error(\"Keplr extension not found\");\n            }\n            await keplr.experimentalSuggestChain(chainInfo);\n            await keplr.enable(chainInfo.chainId);\n\n            const registry = new Registry();\n\n            registry.register(\n                \"/cosmos.adminmodule.adminmodule.MsgSubmitProposal\",\n                MsgSubmitProposal\n            );\n            registry.register(\"/cosmos.adminmodule.adminmodule.MsgAddAdmin\", MsgAddAdmin);\n            registry.register(\"/cosmos.adminmodule.adminmodule.MsgDeleteAdmin\", MsgDeleteAdmin);\n\n            defaultRegistryTypes.forEach((v) => {\n                registry.register(v[0], v[1]);\n            });\n\n            const offlineSigner = keplr.getOfflineSigner(chainInfo.chainId);\n\n            const stargateClient = await SigningStargateClient.connectWithSigner(\n                chainInfo.rpc,\n                offlineSigner,\n                {\n                    registry: registry\n                }\n            );\n\n            dispatch({\n                type: WalletActionTypes.WALLET_SUCCESS,\n                payload: { keplr, stargateClient }\n            });\n        } catch (e) {\n            dispatch({ type: WalletActionTypes.WALLET_ERROR, payload: e.message || \"error\" });\n        }\n    };\n};\n\nexport const disconnectWallet = () => {\n    return { type: WalletActionTypes.WALLET_DISCONNECT };\n};\n","import { useCallback, useEffect, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../redux/useTypedSelector\";\nimport { connectWallet, disconnectWallet } from \"../redux/action-creator/wallet\";\n\nexport const KeyAccountAutoConnect = \"account_auto_connect\";\n\nexport function useAccountConnection() {\n    const dispatch = useDispatch();\n    const { isConnected } = useTypedSelector((state) => state.wallet);\n\n    const shouldAutoConnectAccount = localStorage?.getItem(KeyAccountAutoConnect) != null;\n\n    const disconnectAccount = useCallback(() => {\n        localStorage?.removeItem(KeyAccountAutoConnect);\n        dispatch(disconnectWallet());\n    }, [dispatch]);\n\n    const connectAccount = useCallback(() => {\n        localStorage?.setItem(KeyAccountAutoConnect, \"true\");\n        dispatch(connectWallet());\n    }, [dispatch]);\n\n    useEffect(() => {\n        // Log in automatically if you have not logged out after logging in earlier.\n        if (shouldAutoConnectAccount && !isConnected) {\n            dispatch(connectWallet());\n        }\n    }, [dispatch, isConnected]);\n\n    return useMemo(() => {\n        return {\n            isConnected,\n            disconnectAccount,\n            connectAccount\n        };\n    }, [connectAccount, disconnectAccount, isConnected]);\n}\n","export interface ReviewChangesState {\n    loading: boolean;\n    error: string | null;\n    modules: IModules;\n}\n\nexport enum ReviewChangesActionTypes {\n    SET_PARAMS = \"SET_PARAMS\",\n    SET_LOADING = \"SET_LOADING\",\n    ERROR = \"ERROR\",\n    CLEAR_ERROR = \"CLEAR_ERROR\"\n}\n\nexport type ReviewChangesActions = FetchAction | SetLoadingAction | ErrorAction | ClearErrorAction;\n\nexport interface FetchAction {\n    type: ReviewChangesActionTypes.SET_PARAMS;\n    payload: {\n        bank: BankParams;\n        distribution: DistributionParams;\n        gov: GovParams;\n        slashing: SlashingParams;\n        staking: StakingParams;\n    };\n}\n\nexport interface SetLoadingAction {\n    type: ReviewChangesActionTypes.SET_LOADING;\n    payload: { loading: boolean };\n}\n\nexport interface ErrorAction {\n    type: ReviewChangesActionTypes.ERROR;\n    payload: { error: string };\n}\n\nexport interface ClearErrorAction {\n    type: ReviewChangesActionTypes.CLEAR_ERROR;\n}\n\nexport interface IModules {\n    bank: BankParams;\n    distribution: DistributionParams;\n    gov: GovParams;\n    slashing: SlashingParams;\n    staking: StakingParams;\n}\n\nexport interface BankParams {\n    send_enabled: {\n        denom: string;\n        enabled: boolean;\n    }[];\n    default_send_enabled: boolean;\n}\n\nexport interface DistributionParams {\n    community_tax: string;\n    base_proposer_reward: string;\n    bonus_proposer_reward: string;\n    withdraw_addr_enabled: boolean;\n}\n\nexport interface GovParams {\n    voting_params: {\n        voting_period: string;\n    };\n    deposit_params: {\n        min_deposit: {\n            denom: string;\n            amount: string;\n        }[];\n        max_deposit_period: string;\n    };\n    tally_params: {\n        quorum: string;\n        threshold: string;\n        veto_threshold: string;\n    };\n}\n\nexport interface SlashingParams {\n    signed_blocks_window: string;\n    min_signed_per_window: string;\n    downtime_jail_duration: string;\n    slash_fraction_double_sign: string;\n    slash_fraction_downtime: string;\n}\n\nexport interface StakingParams {\n    unbonding_time: string;\n    max_validators: number;\n    max_entries: number;\n    historical_entries: number;\n    bond_denom: string;\n}\n","import React from \"react\";\nimport { PulseLoader } from \"react-spinners\";\n\nconst Spinner = () => {\n    return <PulseLoader size={7} />;\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from \"react\";\nimport { useAccountConnection } from \"../../../hooks/useAccountConnection\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\nimport { getAccountName, getBalance, getWalletAddress } from \"../../../cosmos/keplr\";\nimport Spinner from \"../../Loader/Spinner\";\n\nconst SidebarBottom = () => {\n    const { isConnected, connectAccount, disconnectAccount } = useAccountConnection();\n    const { keplr, error } = useTypedSelector((state) => state.wallet);\n\n    const [coin, setCoin] = useState<string | null>(null);\n    const [name, setName] = useState<string | null>(null);\n    useEffect(() => {\n        async function setData() {\n            if (isConnected && keplr) {\n                setName(await getAccountName(keplr));\n                setCoin(await getBalance(keplr, await getWalletAddress(keplr)));\n            }\n        }\n\n        setData();\n\n        return () => {\n            setCoin(null);\n            setName(null);\n        };\n    }, [keplr, isConnected]);\n\n    return (\n        <div className=\"sidebar-bottom\">\n            <div className=\"container\">\n                {isConnected ? (\n                    <div>\n                        <div className=\"account-data\">\n                            <p className=\"account-name\">{name || <Spinner />}</p>\n                            <p className=\"amount\">{coin || <Spinner />}</p>\n                        </div>\n\n                        <button className=\"btn-disconnect\" onClick={disconnectAccount}>\n                            <p>Sign Out</p>\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <p className=\"connect-error\">{error}</p>\n                        <button className=\"btn-connect\" onClick={connectAccount}>\n                            <p>Connect Wallet</p>\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SidebarBottom;\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { routes } from \"../../router\";\nimport SidebarBottom from \"./SidebarBottom/SidebarBottom\";\n\nconst active = {\n    // color: '#ff0000',\n    fontWeight: 700,\n    boxShadow: \"0 0 20px rgba(29, 29, 29, 0.13)\",\n    borderLeft: \"3px solid #56CCF2\",\n    color: \"black\"\n};\n\nconst SideBar: React.FC = () => {\n    return (\n        <div className=\"sidebar\">\n            <ul className=\"sidebar-list\">\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.reviewState} activeStyle={active}>\n                        ReviewState\n                    </NavLink>\n                </li>\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.proposals} activeStyle={active}>\n                        Proposals\n                    </NavLink>\n                </li>\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.adminModule} activeStyle={active}>\n                        Admin Module\n                    </NavLink>\n                </li>\n            </ul>\n            <SidebarBottom />\n        </div>\n    );\n};\n\nexport const Sidebar = withRouter(SideBar);\n","import React, { FunctionComponent } from \"react\";\nimport { Sidebar } from \"./SideBar\";\n\nconst RouteWrapper: FunctionComponent = ({ children }) => {\n    return (\n        <div className=\"router-wrapper\">\n            <Sidebar />\n            {children}\n        </div>\n    );\n};\n\nexport default RouteWrapper;\n","import React from \"react\";\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>Home Page</h1>\n        </div>\n    );\n};\n\nexport default Home;\n","import { Dispatch } from \"redux\";\nimport { lcdClient, getKeplr } from \"../../cosmos\";\nimport { Bech32 } from \"@cosmjs/encoding\";\nimport { getWalletAddress } from \"../../cosmos/keplr\";\nimport {\n    ReviewChangesActions,\n    ReviewChangesActionTypes,\n    ClearErrorAction,\n    ErrorAction\n} from \"../../types/reviewChanges\";\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { chainInfo } from \"../../config\";\nimport { coins } from \"@cosmjs/launchpad\";\n// import { Registry } from \"@cosmjs/proto-signing\";\n\nexport const sendErrorNotification = (\n    errMessage: string,\n    dispatch: Dispatch<ErrorAction | ClearErrorAction>\n): void => {\n    dispatch({\n        type: ReviewChangesActionTypes.ERROR,\n        payload: { error: errMessage }\n    });\n    setTimeout(() => {\n        dispatch({\n            type: ReviewChangesActionTypes.CLEAR_ERROR\n        });\n    }, 5000);\n};\n\nexport const fetchParamsList = () => {\n    return async (dispatch: Dispatch<ReviewChangesActions>): Promise<void> => {\n        try {\n            dispatch({ type: ReviewChangesActionTypes.SET_LOADING, payload: { loading: true } });\n\n            const bank = await lcdClient.get(\"/cosmos/bank/v1beta1/params\");\n            console.log(\"bank\", bank);\n\n            const distribution = await lcdClient.get(\"/cosmos/distribution/v1beta1/params\");\n            console.log(\"distrib\", distribution);\n\n            const govVoting = await lcdClient.get(\"/cosmos/gov/v1beta1/params/voting\");\n            const govDeposit = await lcdClient.get(\"/cosmos/gov/v1beta1/params/deposit\");\n            const govTally = await lcdClient.get(\"/cosmos/gov/v1beta1/params/tallying\");\n            console.log(\"gov\", govVoting, govDeposit, govTally);\n\n            const slashing = await lcdClient.get(\"/cosmos/slashing/v1beta1/params\");\n            console.log(\"slashing\", slashing);\n\n            const staking = await lcdClient.get(\"/cosmos/staking/v1beta1/params\");\n            console.log(\"staking\", staking);\n\n            dispatch({\n                type: ReviewChangesActionTypes.SET_PARAMS,\n                payload: {\n                    bank: bank.params,\n                    distribution: distribution.params,\n                    gov: {\n                        voting_params: govVoting.voting_params,\n                        deposit_params: govDeposit.deposit_params,\n                        tally_params: govTally.tally_params\n                    },\n                    slashing: slashing.params,\n                    staking: staking.params\n                }\n            });\n\n            dispatch({ type: ReviewChangesActionTypes.SET_LOADING, payload: { loading: false } });\n        } catch (error) {\n            console.log(\"[Admin fetching error]\", error);\n            sendErrorNotification(\"Error fetching admins: \" + error.message, dispatch);\n        }\n    };\n};\n","import { Deposit, Proposal as ProposalCosmJS } from \"@cosmjs/launchpad/build/lcdapi/gov\";\nimport { Coin } from \"@cosmjs/stargate\";\nimport { ParamChange } from \"../cosmos/codec/cosmos/params/v1beta1/params\";\n\nexport interface ArchivedProposal {\n    proposal_id: string;\n    content: AContent;\n    submit_time: string;\n}\n\ninterface AContent {\n    \"@type\": string;\n    title: string;\n    description: string;\n    changes?: { key: string; subspace: string; value: string }[];\n}\n\nexport interface ATextProposalContent extends AContent {\n    \"@type\": \"/cosmos.adminmodule.adminmodule.TextProposal\";\n}\nexport interface AParameterChangeProposalContent extends AContent {\n    \"@type\": \"/cosmos.adminmodule.adminmodule.ParameterChangeProposal\";\n    changes: ParamChange[];\n}\nexport interface ACommunityPoolSpendProposalContent extends AContent {\n    \"@type\": \"/cosmos.adminmodule.adminmodule.CommunityPoolSpendProposal\";\n    recipient: string;\n    amount: Coin[];\n}\n\nexport function isATextProposalContent(proposal: AContent): proposal is ATextProposalContent {\n    return proposal[\"@type\"] === \"/cosmos.gov.v1beta1.TextProposal\";\n}\nexport function isAParameterChangeProposalContent(\n    proposal: AContent\n): proposal is AParameterChangeProposalContent {\n    return proposal[\"@type\"] === \"/cosmos.params.v1beta1.ParameterChangeProposal\";\n}\nexport function isACommunityPoolSpendProposalContent(\n    proposal: AContent\n): proposal is ACommunityPoolSpendProposalContent {\n    return proposal[\"@type\"] === \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal\";\n}\n\n// export interface Proposal extends ProposalCosmJS {\n//     readonly status: string;\n//     readonly content: {\n//         readonly type: string;\n//         readonly value: {\n//             readonly title: string;\n//             readonly description: string;\n//\n//             //only ParameterChangeProposal\n//             readonly changes?: ParamChange[];\n//\n//             //only CommunityPoolSpendProposal\n//             readonly recipient?: string;\n//             readonly amount?: Coin[];\n//         };\n//     };\n// }\n//\n// interface IProposalDetail {\n//     proposer: string | null;\n//     deposits: readonly Deposit[] | null;\n// }\n\nexport interface ProposalState {\n    proposals: ArchivedProposal[] | null;\n    // proposalDetail: IProposalDetail | null;\n    isFetchingProposals: boolean;\n    isFetchingItem: boolean;\n    error: null | string;\n}\n\nexport enum ProposalActionTypes {\n    PROPOSAL_CALL = \"PROPOSAL_CALL\",\n    PROPOSAL_SUCCESS = \"PROPOSAL_SUCCESS\",\n    PROPOSAL_ERROR = \"PROPOSAL_ERROR\"\n\n    // PROPOSAL_DETAIL_CALL = \"PROPOSAL_DETAIL_CALL\",\n    // PROPOSAL_DETAIL_SUCCESS = \"PROPOSAL_DETAIL_SUCCESS\",\n    // PROPOSAL_DETAIL_ERROR = \"PROPOSAL_DETAIL_ERROR\",\n    // PROPOSAL_DETAIL_RESET = \"PROPOSAL_DETAIL_RESET\"\n}\n\ninterface ProposalCallAction {\n    type: ProposalActionTypes.PROPOSAL_CALL;\n}\n\ninterface ProposalSuccessAction {\n    type: ProposalActionTypes.PROPOSAL_SUCCESS;\n    payload: ArchivedProposal[];\n}\n\ninterface ProposalErrorAction {\n    type: ProposalActionTypes.PROPOSAL_ERROR;\n    payload: string;\n}\n\n// interface ProposalDetailCallAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_CALL;\n// }\n//\n// interface ProposalDetailSuccessAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_SUCCESS;\n//     payload: IProposalDetail;\n// }\n//\n// interface ProposalDetailErrorAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_ERROR;\n//     payload: string;\n// }\n//\n// interface ProposalDetailResetAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_RESET;\n// }\n\nexport type ProposalAction = ProposalCallAction | ProposalSuccessAction | ProposalErrorAction;\n// | ProposalDetailCallAction\n// | ProposalDetailSuccessAction\n// | ProposalDetailErrorAction\n// | ProposalDetailResetAction;\n","import React from \"react\";\n\ninterface ModuleSectionProps {\n    title: string;\n    children: JSX.Element[] | JSX.Element;\n}\n\nconst ModuleSection = ({ title, children }: ModuleSectionProps): JSX.Element => {\n    return (\n        <div className=\"review-changes__module-container\">\n            <div className=\"review-changes__module-container__title\">{title}</div>\n            {children}\n        </div>\n    );\n};\n\nexport default ModuleSection;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchParamsList } from \"../../redux/action-creator/reviewChanges\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport Spinner from \"../Loader/Spinner\";\nimport ModuleSection from \"./ModuleSection\";\n\nconst ReviewState = () => {\n    const dispatch = useDispatch();\n    const { bank, distribution, gov, slashing, staking } = useTypedSelector(\n        (state) => state.reviewChanges.modules\n    );\n    const { error, loading } = useTypedSelector((state) => state.reviewChanges);\n    useEffect(() => {\n        dispatch(fetchParamsList());\n    }, []);\n    return (\n        <div className=\"review-changes\">\n            <h4 className=\"review-changes__title\">Review State Changes {loading && <Spinner />}</h4>\n            {error}\n            <div className=\"review-changes__list\">\n                <ModuleSection title=\"Bank\">\n                    <ul>\n                        <li>Default Send Enabled: {bank?.default_send_enabled.toString()}</li>\n                        <li>Send Enabled(array): {bank?.send_enabled?.toString()}</li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Distribution\">\n                    <ul>\n                        <li>Base Proposer Reward: {distribution?.base_proposer_reward}</li>\n                        <li>Bonus Proposer Reward: {distribution?.bonus_proposer_reward}</li>\n                        <li>Community Tax: {distribution?.community_tax}</li>\n                        <li>\n                            Withdraw Addr Enabled: {distribution?.withdraw_addr_enabled?.toString()}\n                        </li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Governance\">\n                    <ul>\n                        <li>\n                            Deposit Params:\n                            <ul>\n                                <li>\n                                    Min Deposit:{\" \"}\n                                    <ul>\n                                        {gov?.deposit_params?.min_deposit?.map((d) => (\n                                            <>\n                                                <li>Amount: {d.amount}</li>\n                                                <li>Denom: {d.denom}</li>\n                                            </>\n                                        ))}\n                                    </ul>{\" \"}\n                                </li>\n                                <li>\n                                    Max Deposit Period: {gov?.deposit_params?.max_deposit_period}\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            Voting Params:\n                            <ul>\n                                <li>Voting Period: {gov?.voting_params?.voting_period}</li>\n                            </ul>\n                        </li>\n                        <li>\n                            Tallying Params:\n                            <ul>\n                                <li>Quorum: {gov?.tally_params?.quorum}</li>\n                                <li>Threshold: {gov?.tally_params?.threshold}</li>\n                                <li>Veto Theshold: {gov?.tally_params?.veto_threshold}</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Slashing\">\n                    <ul>\n                        <li>Downtime Jail Duration: {slashing?.downtime_jail_duration}</li>\n                        <li>Min Signed Per Window: {slashing?.min_signed_per_window}</li>\n                        <li>Signed Blocks Window: {slashing?.signed_blocks_window}</li>\n                        <li>Slash Fraction Double Sign: {slashing?.slash_fraction_double_sign}</li>\n                        <li>Slash Fraction Downtime: {slashing?.slash_fraction_downtime}</li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Staking\">\n                    <ul>\n                        <li>Bond Denom: {staking?.bond_denom}</li>\n                        <li>Historical Entries: {staking?.historical_entries}</li>\n                        <li>Max Entries: {staking?.max_entries}</li>\n                        <li>Max Validators: {staking?.max_validators}</li>\n                        <li>Unbonding Time: {staking?.unbonding_time}</li>\n                    </ul>\n                </ModuleSection>\n            </div>\n        </div>\n    );\n};\n\nexport default ReviewState;\n","export const toPrettyDate = (date: string): string => {\n    const dateString = new Date(date).toUTCString();\n    const indexDayOfWeek = dateString.indexOf(\", \");\n    return dateString.substr(indexDayOfWeek + 2);\n};\n","import React from \"react\";\nimport { Proposal } from \"@cosmjs/launchpad/build/lcdapi/gov\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../router\";\nimport { toPrettyDate } from \"../../utills/toPrettyDate\";\nimport { ArchivedProposal } from \"../../types/proposal\";\n\ninterface ProposalItemProps {\n    proposal: ArchivedProposal;\n}\n\nconst ProposalItem: React.FC<ProposalItemProps> = ({\n    proposal: { proposal_id, submit_time, content }\n}) => {\n    const typeShort = (type: string): string => {\n        const chainIdAndType = type.split(\".\");\n        return chainIdAndType[chainIdAndType.length - 1] || type;\n    };\n    const titleShort = (title: string): string => {\n        return title.length > 70 ? `${title.substr(0, 70)}...` : title;\n    };\n\n    return (\n        <tr>\n            <td>{proposal_id}</td>\n            <td>\n                <NavLink to={`${routes.proposals}/${proposal_id}`}>\n                    {titleShort(content.title)}\n                </NavLink>\n            </td>\n            <td>{typeShort(content[\"@type\"])}</td>\n            <td>{toPrettyDate(submit_time)}</td>\n        </tr>\n    );\n};\n\nexport default ProposalItem;\n","import { Dispatch } from \"redux\";\nimport { ProposalAction, ProposalActionTypes, ArchivedProposal } from \"../../types/proposal\";\nimport { lcdClient } from \"../../cosmos\";\n\nexport const fetchProposals = () => {\n    return async (dispatch: Dispatch<ProposalAction>) => {\n        try {\n            dispatch({ type: ProposalActionTypes.PROPOSAL_CALL });\n            const archivedProposals: { proposals: ArchivedProposal[] } = await lcdClient.get(\n                \"/cosmos/adminmodule/adminmodule/archivedproposals\"\n            );\n            dispatch({\n                type: ProposalActionTypes.PROPOSAL_SUCCESS,\n                payload: archivedProposals.proposals.reverse()\n            });\n        } catch (e) {\n            dispatch({ type: ProposalActionTypes.PROPOSAL_ERROR, payload: e.message || \"error\" });\n        }\n    };\n};\n\n// export const fetchProposalDetail = (id: string) => {\n//     return async (dispatch: Dispatch<ProposalAction>) => {\n//         try {\n//             dispatch({ type: ProposalActionTypes.PROPOSAL_DETAIL_CALL });\n//\n//             const proposer = await lcdClient.gov\n//                 .proposer(id)\n//                 .then((data) => data.result.proposer)\n//                 .catch((e) => null);\n//\n//             const deposits = await lcdClient.gov\n//                 .deposits(id)\n//                 .then((data) => data.result)\n//                 .catch((e) => null);\n//\n//             dispatch({\n//                 type: ProposalActionTypes.PROPOSAL_DETAIL_SUCCESS,\n//                 payload: { proposer, deposits }\n//             });\n//         } catch (e) {\n//             dispatch({\n//                 type: ProposalActionTypes.PROPOSAL_DETAIL_ERROR,\n//                 payload: e.message || \"error\"\n//             });\n//         }\n//     };\n// };\n//\n// export const proposalDetailReset = () => {\n//     return { type: ProposalActionTypes.PROPOSAL_DETAIL_RESET };\n// };\n","export interface FetchAction {\n    type: AdminListActionTypes.SET_LIST;\n    payload: { admins: string[] };\n}\n\nexport interface SetLoadingAction {\n    type: AdminListActionTypes.SET_LOADING;\n    payload: { loading: boolean };\n}\n\nexport interface ErrorAction {\n    type: AdminListActionTypes.ERROR;\n    payload: { error: string };\n}\n\nexport interface ClearErrorAction {\n    type: AdminListActionTypes.CLEAR_ERROR;\n}\n\nexport type AdminActions = FetchAction | SetLoadingAction | ErrorAction | ClearErrorAction;\n\nexport enum AdminListActionTypes {\n    SET_LIST = \"SET_LIST\",\n    SET_LOADING = \"SET_LOADING\",\n    ERROR = \"ERROR\",\n    CLEAR_ERROR = \"CLEAR_ERROR\"\n}\n\nexport interface AdminListState {\n    admins: string[];\n    loading: boolean;\n    error: string | null;\n}\n","import React, { useEffect } from \"react\";\nimport ProposalItem from \"./ProposalItem\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchProposals } from \"../../redux/action-creator/proposal\";\nimport Spinner from \"../Loader/Spinner\";\n\nconst ProposalsPage: React.FC = () => {\n    const { isFetchingProposals, proposals, error } = useTypedSelector((state) => state.proposal);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchProposals());\n    }, [dispatch]);\n\n    return (\n        <div className=\"proposals\">\n            <h4 className=\"title\">\n                Proposals\n                {isFetchingProposals && <Spinner />}\n            </h4>\n\n            <div className=\"container\">\n                {error ? error : null}\n                {proposals && (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Proposal ID</th>\n                                <th>Title</th>\n                                <th>Proposal Type</th>\n                                <th>Submit Time</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {proposals.map((p) => (\n                                <ProposalItem proposal={p} key={p.proposal_id} />\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ProposalsPage;\n","import { Dispatch } from \"redux\";\nimport { lcdClient, getKeplr } from \"../../cosmos\";\nimport { Bech32 } from \"@cosmjs/encoding\";\nimport { getWalletAddress } from \"../../cosmos/keplr\";\nimport {\n    AdminActions,\n    AdminListActionTypes,\n    ClearErrorAction,\n    ErrorAction\n} from \"../../types/adminList\";\nimport { isBroadcastTxSuccess, SigningStargateClient } from \"@cosmjs/stargate\";\nimport { chainInfo } from \"../../config\";\nimport { coins } from \"@cosmjs/launchpad\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Keplr } from \"@keplr-wallet/types\";\n\nexport const sendErrorNotification = (\n    errMessage: string,\n    dispatch: Dispatch<ErrorAction | ClearErrorAction>\n): void => {\n    dispatch({\n        type: AdminListActionTypes.ERROR,\n        payload: { error: errMessage }\n    });\n    setTimeout(() => {\n        dispatch({\n            type: AdminListActionTypes.CLEAR_ERROR\n        });\n    }, 5000);\n};\n\nexport const fetchAdminList = () => {\n    return async (dispatch: Dispatch<AdminActions>): Promise<void> => {\n        try {\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: true } });\n\n            const adminsResp: { admins: string[] } = await lcdClient.get(\n                \"/cosmos/adminmodule/adminmodule/admins\"\n            );\n            console.log(\"fetched admins\", adminsResp.admins);\n\n            dispatch({\n                type: AdminListActionTypes.SET_LIST,\n                payload: { admins: adminsResp.admins }\n            });\n\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n        } catch (error) {\n            console.log(\"[Admin fetching error]\", error);\n            sendErrorNotification(\"Error fetching admins: \" + error.message, dispatch);\n        }\n    };\n};\n\nexport const deleteAdminAction = (\n    adminAddress: string,\n    stargateClient: SigningStargateClient,\n    kepler: Keplr\n) => {\n    return async (dispatch: Dispatch<AdminActions>): Promise<void> => {\n        try {\n            const sender = await getWalletAddress(kepler);\n\n            const msgDeleteAdminRequest = {\n                admin: adminAddress,\n                creator: sender\n            };\n            const msgAny = {\n                typeUrl: \"/cosmos.adminmodule.adminmodule.MsgDeleteAdmin\",\n                value: msgDeleteAdminRequest\n            };\n\n            const fee = {\n                amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                gas: \"2000000\"\n            };\n\n            console.log(\"sending\", msgDeleteAdminRequest);\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: true } });\n            const broadcastRes = await stargateClient.signAndBroadcast(sender, [msgAny], fee);\n\n            if (isBroadcastTxSuccess(broadcastRes)) {\n                const adminsResp: { admins: string[] } = await lcdClient.get(\n                    \"/cosmos/adminmodule/adminmodule/admins\"\n                );\n                dispatch({\n                    type: AdminListActionTypes.SET_LIST,\n                    payload: { admins: adminsResp.admins }\n                });\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            } else {\n                sendErrorNotification(\"Error during transaction broadcast\", dispatch);\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            }\n        } catch (error) {\n            console.log(\"[Admin deletion error]\", error);\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            sendErrorNotification(\"Error saving new admin: \" + error.message, dispatch);\n        }\n    };\n};\n\nexport const saveAdminAction = (\n    adminAddress: string,\n    stargateClient: SigningStargateClient,\n    kepler: Keplr\n) => {\n    return async (dispatch: Dispatch<AdminActions>): Promise<void> => {\n        try {\n            console.log(\"in saving action\", adminAddress);\n            // Address validation\n            const resp = Bech32.decode(adminAddress);\n            console.log(\"decoding\", resp);\n            if (kepler) {\n                const sender = await getWalletAddress(kepler);\n\n                const msgAddAdminRequest = {\n                    admin: adminAddress,\n                    creator: sender\n                };\n                const msgAny = {\n                    typeUrl: \"/cosmos.adminmodule.adminmodule.MsgAddAdmin\",\n                    value: msgAddAdminRequest\n                };\n\n                const fee = {\n                    amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                    gas: \"2000000\"\n                };\n\n                console.log(\"sending\", msgAddAdminRequest);\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: true } });\n                const broadcastRes = await stargateClient.signAndBroadcast(sender, [msgAny], fee);\n\n                console.log(\"broadcast res\", broadcastRes);\n\n                if (isBroadcastTxSuccess(broadcastRes)) {\n                    const adminsResp: { admins: string[] } = await lcdClient.get(\n                        \"/cosmos/adminmodule/adminmodule/admins\"\n                    );\n                    dispatch({\n                        type: AdminListActionTypes.SET_LIST,\n                        payload: { admins: adminsResp.admins }\n                    });\n                } else {\n                    sendErrorNotification(\"Error during transaction broadcast\", dispatch);\n                    dispatch({\n                        type: AdminListActionTypes.SET_LOADING,\n                        payload: { loading: false }\n                    });\n                }\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            } else {\n                sendErrorNotification(\"No Keplr wallet logged in\", dispatch);\n            }\n        } catch (error) {\n            console.log(\"[Admin saving error]\", error);\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            sendErrorNotification(\"Error saving new admin: \" + error.message, dispatch);\n        }\n    };\n};\n","import { BroadcastTxSuccess } from \"@cosmjs/stargate/build/stargateclient\";\n\nexport type TBaseSPMsg = { title: string; description: string };\n\nexport interface SubmitProposalState {\n    broadcastResponse: BroadcastTxSuccess | null;\n    error: string | null;\n    fetching: boolean;\n}\n\nexport enum SubmitProposalTypes {\n    SUBMIT_PROPOSAL_CALL = \"SUBMIT_PROPOSAL_CALL\",\n    SUBMIT_PROPOSAL_SUCCESS = \"SUBMIT_PROPOSAL_SUCCESS\",\n    SUBMIT_PROPOSAL_ERROR = \"SUBMIT_PROPOSAL_ERROR\",\n    SUBMIT_PROPOSAL_RESET = \"SUBMIT_PROPOSAL_RESET\"\n}\n\ninterface SubmitProposalCallAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_CALL;\n}\ninterface SubmitProposalSuccessAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_SUCCESS;\n    payload: BroadcastTxSuccess;\n}\ninterface SubmitProposalErrorAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_ERROR;\n    payload: string;\n}\ninterface SubmitProposalResetAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_RESET;\n}\n\nexport type SubmitProposalAction =\n    | SubmitProposalCallAction\n    | SubmitProposalSuccessAction\n    | SubmitProposalErrorAction\n    | SubmitProposalResetAction;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteAdminAction } from \"../../../redux/action-creator/adminList\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\n\ninterface AdminDetailProps {\n    accountAddress: string;\n    orderNum: number;\n}\n\nconst AdminDetail = ({ accountAddress, orderNum }: AdminDetailProps) => {\n    const { isConnected, keplr } = useTypedSelector((state) => state.wallet);\n    const dispatch = useDispatch();\n    const { stargateClient } = useTypedSelector((state) => state.wallet);\n\n    function deleteAdmin(address: string) {\n        const res = window.confirm(`Delete \"${address}\"?`);\n        if (res && stargateClient && keplr) {\n            console.log(\"delete\", address);\n            dispatch(deleteAdminAction(address, stargateClient, keplr));\n        }\n    }\n\n    return (\n        <div className=\"admin-card\">\n            {orderNum}. {accountAddress}\n            <div className=\"admin-card__buttons\">\n                <button\n                    disabled={!isConnected}\n                    className=\"admin-card__delete-btn\"\n                    onClick={() => deleteAdmin(accountAddress)}>\n                    Delete\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminDetail;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { saveAdminAction } from \"../../../redux/action-creator/adminList\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\n\nconst AdminForm = () => {\n    const [address, setAddress] = useState(\"\");\n    const dispatch = useDispatch();\n    const { isConnected, keplr } = useTypedSelector((state) => state.wallet);\n    const { stargateClient } = useTypedSelector((state) => state.wallet);\n\n    function addAdmin(adminAddress: string) {\n        if (stargateClient && isConnected && keplr) {\n            dispatch(saveAdminAction(adminAddress, stargateClient, keplr));\n            setAddress(\"\");\n        }\n    }\n\n    return (\n        <div className=\"admin-page__form\">\n            <label className=\"admin-page__form__label\" htmlFor=\"new-admin\">\n                Add new admin{\" \"}\n                <input\n                    value={address}\n                    onChange={({ target }) => setAddress(target.value)}\n                    className=\"admin-page__form__address-input\"\n                    disabled={!isConnected}\n                    placeholder=\"Address\"\n                    type=\"text\"\n                    name=\"new-admin\"\n                    id=\"new-admin\"\n                />\n            </label>{\" \"}\n            <button\n                onClick={() => addAdmin(address)}\n                className=\"admin-page__form__save-btn\"\n                disabled={!isConnected}>\n                Save\n            </button>\n        </div>\n    );\n};\n\nexport default AdminForm;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAdminList } from \"../../../redux/action-creator/adminList\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\nimport Spinner from \"../../Loader/Spinner\";\nimport AdminDetail from \"./AdminDetail\";\nimport AdminForm from \"./AdminForm\";\n\nconst AdminList = () => {\n    const dispatch = useDispatch();\n    const { admins, error, loading } = useTypedSelector((state) => state.admin);\n\n    useEffect(() => {\n        dispatch(fetchAdminList());\n    }, []);\n\n    return (\n        <div className=\"admin-page\">\n            <h4 className=\"title\">Admin List {loading && <Spinner />}</h4>\n            <AdminForm />\n            {error}\n            <div className=\"admin-page__list\">\n                {admins?.map((adm, i) => (\n                    <AdminDetail key={i} accountAddress={adm} orderNum={i + 1} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default AdminList;\n","import { Dispatch } from \"redux\";\nimport { RootState } from \"../reducers\";\nimport { chainInfo } from \"../../config\";\nimport { coins, isBroadcastTxSuccess } from \"@cosmjs/stargate\";\nimport { getWalletAddress } from \"../../cosmos/keplr\";\nimport { SubmitProposalAction, SubmitProposalTypes } from \"../../types/submitProposal\";\nimport { EncodeObject } from \"@cosmjs/proto-signing\";\n\nexport const submitProposal = (content: EncodeObject) => {\n    return async (dispatch: Dispatch<SubmitProposalAction>, getState: () => RootState) => {\n        try {\n            dispatch({ type: SubmitProposalTypes.SUBMIT_PROPOSAL_CALL });\n            const {\n                wallet: { stargateClient, isConnected, keplr }\n            } = getState();\n\n            if (!isConnected || !stargateClient || !keplr) {\n                return dispatch(setSubmitProposalError(\"Wallet is not connected\"));\n            }\n            const address = await getWalletAddress(keplr);\n            const msg = {\n                content,\n                proposer: address\n            };\n            const msgAny = {\n                typeUrl: \"/cosmos.adminmodule.adminmodule.MsgSubmitProposal\",\n                value: msg\n            };\n            const fee = {\n                amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                gas: \"2000000\"\n            };\n\n            const broadcastRes = await stargateClient.signAndBroadcast(address, [msgAny], fee);\n\n            if (isBroadcastTxSuccess(broadcastRes)) {\n                dispatch({\n                    type: SubmitProposalTypes.SUBMIT_PROPOSAL_SUCCESS,\n                    payload: broadcastRes\n                });\n            } else {\n                dispatch(setSubmitProposalError(broadcastRes.rawLog || \"error\"));\n            }\n        } catch (e) {\n            dispatch(setSubmitProposalError(e.message || \"error\"));\n        }\n    };\n};\n\nconst setSubmitProposalError = (error: string): SubmitProposalAction => {\n    return {\n        type: SubmitProposalTypes.SUBMIT_PROPOSAL_ERROR,\n        payload: error\n    };\n};\n\nexport const submitProposalReset = (): SubmitProposalAction => {\n    return {\n        type: SubmitProposalTypes.SUBMIT_PROPOSAL_RESET\n    };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { submitProposal } from \"../../../redux/action-creator/submitProposal\";\nimport { TextProposal as TextProposalProc } from \"../../../cosmos/codec/cosmos/adminmodule/adminmodule/adminmodule\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\n\nconst TextProposal: React.FC<TBaseSPMsg> = ({ title, description }) => {\n    const dispatch = useDispatch();\n    const submitTextProposal = () => {\n        dispatch(\n            submitProposal({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: TextProposalProc.encode({\n                    title,\n                    description\n                }).finish()\n            })\n        );\n    };\n    return (\n        <div>\n            <button className={\"btn-submit-proposal\"} onClick={submitTextProposal}>\n                Submit\n            </button>\n        </div>\n    );\n};\n\nexport default TextProposal;\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"cosmos.params.v1beta1\";\n\n/** ParameterChangeProposal defines a proposal to change one or more parameters. */\nexport interface ParameterChangeProposal {\n    title: string;\n    description: string;\n    changes: ParamChange[];\n}\n\n/**\n * ParamChange defines an individual parameter change, for use in\n * ParameterChangeProposal.\n */\nexport interface ParamChange {\n    subspace: string;\n    key: string;\n    value: string;\n}\n\nconst baseParameterChangeProposal: object = { title: \"\", description: \"\" };\n\nexport const ParameterChangeProposal = {\n    encode(message: ParameterChangeProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        for (const v of message.changes) {\n            ParamChange.encode(v!, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): ParameterChangeProposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseParameterChangeProposal\n        } as ParameterChangeProposal;\n        message.changes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.changes.push(ParamChange.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): ParameterChangeProposal {\n        const message = {\n            ...baseParameterChangeProposal\n        } as ParameterChangeProposal;\n        message.changes = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        if (object.changes !== undefined && object.changes !== null) {\n            for (const e of object.changes) {\n                message.changes.push(ParamChange.fromJSON(e));\n            }\n        }\n        return message;\n    },\n\n    toJSON(message: ParameterChangeProposal): unknown {\n        const obj: any = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        if (message.changes) {\n            obj.changes = message.changes.map((e) => (e ? ParamChange.toJSON(e) : undefined));\n        } else {\n            obj.changes = [];\n        }\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<ParameterChangeProposal>): ParameterChangeProposal {\n        const message = {\n            ...baseParameterChangeProposal\n        } as ParameterChangeProposal;\n        message.changes = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        if (object.changes !== undefined && object.changes !== null) {\n            for (const e of object.changes) {\n                message.changes.push(ParamChange.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n\nconst baseParamChange: object = { subspace: \"\", key: \"\", value: \"\" };\n\nexport const ParamChange = {\n    encode(message: ParamChange, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.subspace !== \"\") {\n            writer.uint32(10).string(message.subspace);\n        }\n        if (message.key !== \"\") {\n            writer.uint32(18).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(26).string(message.value);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): ParamChange {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParamChange } as ParamChange;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subspace = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.string();\n                    break;\n                case 3:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): ParamChange {\n        const message = { ...baseParamChange } as ParamChange;\n        if (object.subspace !== undefined && object.subspace !== null) {\n            message.subspace = String(object.subspace);\n        } else {\n            message.subspace = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        } else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        } else {\n            message.value = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: ParamChange): unknown {\n        const obj: any = {};\n        message.subspace !== undefined && (obj.subspace = message.subspace);\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<ParamChange>): ParamChange {\n        const message = { ...baseParamChange } as ParamChange;\n        if (object.subspace !== undefined && object.subspace !== null) {\n            message.subspace = object.subspace;\n        } else {\n            message.subspace = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        } else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        } else {\n            message.value = \"\";\n        }\n        return message;\n    }\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import React, { useEffect, useState } from \"react\";\nimport { ParamChange } from \"../../../../../cosmos/codec/cosmos/params/v1beta1/params\";\nimport Select from \"react-select\";\nimport { useTypedSelector } from \"../../../../../redux/useTypedSelector\";\nimport { IModules } from \"../../../../../types/reviewChanges\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchParamsList } from \"../../../../../redux/action-creator/reviewChanges\";\n\ninterface IChangeFormProps {\n    addChange: (change: ParamChange) => void;\n}\n\ntype KeysOfModules = keyof IModules;\n\nconst ChangeForm: React.FC<IChangeFormProps> = ({ addChange }) => {\n    const [subspace, setSubspace] = useState<KeysOfModules>(\"\" as KeysOfModules);\n    const [key, setKey] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const modules = useTypedSelector((state) => state.reviewChanges.modules);\n\n    const subOptions = Object.keys(modules).map((key) => ({ value: key, label: key }));\n    const keyOptions = subspaceKeys[subspace]\n        ? subspaceKeys[subspace].map((key) => ({ value: key, label: key }))\n        : [];\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchParamsList());\n    }, []);\n    return (\n        <div className=\"parameter-change-form\">\n            <div className={\"input-params\"}>\n                <div className={\"input-param-elem\"}>\n                    <Select\n                        menuPlacement={\"top\"}\n                        options={subOptions}\n                        onChange={(e) => {\n                            const value: KeysOfModules = e?.value\n                                ? (e.value as KeysOfModules)\n                                : subspace;\n                            setSubspace(value);\n                            if (subspaceKeys[value]) setKey(subspaceKeys[value][0]);\n                        }}\n                        placeholder={\"Subspace\"}\n                    />\n                </div>\n\n                <div className={\"input-param-elem\"}>\n                    <Select\n                        menuPlacement={\"top\"}\n                        options={keyOptions}\n                        onChange={(e) => setKey(e?.value || key)}\n                        defaultValue={keyOptions[0]}\n                        value={keyOptions.find((elm) => elm.value === key) || null}\n                        placeholder={\"Key\"}\n                    />\n                </div>\n\n                <div className={\"input-param-elem\"}>\n                    <input\n                        value={value}\n                        onChange={({ target }) => setValue(target.value)}\n                        className=\"value-input\"\n                        placeholder=\"Value\"\n                        type=\"text\"\n                    />\n                </div>\n                <button\n                    className={\"btn-add-param\"}\n                    onClick={() => addChange({ key, value, subspace })}>\n                    Add\n                </button>\n            </div>\n        </div>\n    );\n};\n\ntype tParamOptions = {\n    [key: string]: string[];\n};\n\nconst subspaceKeys: tParamOptions = {\n    auth: [\n        \"MaxMemoCharacters\",\n        \"TxSigLimit\",\n        \"TxSizeCostPerByte\",\n        \"SigVerifyCostED25519\",\n        \"SigVerifyCostSecp256k1\"\n    ],\n    bank: [\"sendenabled\"],\n    gov: [\"depositparams\", \"votingparams\", \"tallyparams\"],\n    staking: [\"UnbondingTime\", \"MaxValidators\", \"KeyMaxEntries\", \"HistoricalEntries\", \"BondDenom\"],\n    slashing: [\n        \"SignedBlocksWindow\",\n        \"MinSignedPerWindow\",\n        \"DowntimeJailDuration\",\n        \"SlashFractionDoubleSign\",\n        \"SlashFractionDowntime\"\n    ],\n    distribution: [\n        \"communitytax\",\n        \"secretfoundationtax\",\n        \"secretfoundationaddress\",\n        \"baseproposerreward\",\n        \"bonusproposerreward\",\n        \"withdrawaddrenabled\"\n    ],\n    crisis: [\"ConstantFee\"],\n    mint: [\n        \"MintDenom\",\n        \"InflationRateChange\",\n        \"InflationMax\",\n        \"InflationMin\",\n        \"GoalBonded\",\n        \"BlocksPerYear\"\n    ],\n    evidence: [\"MaxEvidenceAge\"]\n};\n\nexport default ChangeForm;\n","import React, { useState } from \"react\";\nimport { ParamChange } from \"../../../../../cosmos/codec/cosmos/params/v1beta1/params\";\n\ninterface IChangeItem {\n    change: ParamChange;\n    deleteChange: () => void;\n}\n\nconst ChangeItem: React.FC<IChangeItem> = ({ change, deleteChange }) => {\n    const [btnDeleteShow, setBtnDeleteShow] = useState(false);\n    const onEnter = () => setBtnDeleteShow(true);\n    const onLeave = () => setBtnDeleteShow(false);\n\n    return (\n        <tr onMouseEnter={onEnter} onMouseLeave={onLeave}>\n            <td>{change.subspace}</td>\n            <td>{change.key}</td>\n            <td>{change.value}</td>\n            <td>\n                {btnDeleteShow && (\n                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n                    <div className=\"btn-delete\" onClick={deleteChange}>\n                        x\n                    </div>\n                )}\n            </td>\n        </tr>\n    );\n};\n\nexport default ChangeItem;\n","import React, { useRef, useState } from \"react\";\nimport {\n    ParamChange,\n    ParameterChangeProposal as ParameterChangeProposalProc\n} from \"../../../../cosmos/codec/cosmos/params/v1beta1/params\";\nimport ChangeForm from \"./ParamChange/ChangeForm\";\nimport ChangeItem from \"./ParamChange/ChangeItem\";\nimport { TBaseSPMsg } from \"../../../../types/submitProposal\";\nimport { useDispatch } from \"react-redux\";\nimport { submitProposal } from \"../../../../redux/action-creator/submitProposal\";\n\nconst ParameterChangeProposal: React.FC<TBaseSPMsg> = ({ title, description }) => {\n    const [changes, setChanges] = useState<ParamChange[]>([]);\n    const dispatch = useDispatch();\n    const submitParameterChangeProposal = () =>\n        dispatch(\n            submitProposal({\n                typeUrl: \"/cosmos.params.v1beta1.ParameterChangeProposal\",\n                value: ParameterChangeProposalProc.encode({\n                    title,\n                    description,\n                    changes\n                }).finish()\n            })\n        );\n    return (\n        <div className={\"param-change-proposal\"}>\n            <div>\n                <label htmlFor=\"change-form\">Add ParamChange</label>\n                <div id={\"change-form\"}>\n                    <ChangeForm addChange={(c) => setChanges([...changes, c])} />\n                    <div className=\"change-table-list\">\n                        {!!changes.length && (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Subspace</th>\n                                        <th>Key</th>\n                                        <th>Value</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {changes.map((c, i) => (\n                                        <ChangeItem\n                                            key={i}\n                                            change={c}\n                                            deleteChange={() =>\n                                                setChanges([\n                                                    ...changes.slice(0, i),\n                                                    ...changes.slice(i + 1)\n                                                ])\n                                            }\n                                        />\n                                    ))}\n                                </tbody>\n                            </table>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div>\n                <button className={\"btn-submit-proposal\"} onClick={submitParameterChangeProposal}>\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ParameterChangeProposal;\n","import React, { useState } from \"react\";\nimport { coin, Coin } from \"@cosmjs/stargate\";\n\ninterface ICoinsFormProps {\n    addCoin: (coin: Coin) => void;\n}\n\nconst CoinsForm: React.FC<ICoinsFormProps> = ({ addCoin }) => {\n    const [amount, setAmount] = useState(\"\");\n    const [denom, setDenom] = useState(\"\");\n\n    return (\n        <div className=\"coins-form\">\n            <input\n                value={amount}\n                onChange={({ target }) => setAmount(target.value)}\n                placeholder=\"Amount\"\n                type=\"number\"\n            />\n            <input\n                value={denom}\n                onChange={({ target }) => setDenom(target.value)}\n                placeholder=\"Denom\"\n                type=\"text\"\n            />\n            <button className={\"btn-add-coin\"} onClick={() => addCoin(coin(+amount, denom))}>\n                Add\n            </button>\n        </div>\n    );\n};\n\nexport default CoinsForm;\n","import React from \"react\";\nimport { Coin } from \"@cosmjs/stargate\";\n\ninterface IDepositItemProps {\n    deposit: Coin;\n    deleteDeposit: () => void;\n}\n\nconst CoinItem: React.FC<IDepositItemProps> = ({ deposit, deleteDeposit }) => {\n    return (\n        <div className=\"coin-item\">\n            {`${deposit.amount}${deposit.denom}`}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n            <div className=\"btn-delete\" onClick={deleteDeposit}>\n                x\n            </div>\n        </div>\n    );\n};\n\nexport default CoinItem;\n","import React, { useState } from \"react\";\nimport { Coin } from \"@cosmjs/stargate\";\nimport CoinsForm from \"./Coins/CoinsForm\";\nimport CoinItem from \"./Coins/CoinItem\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\nimport { submitProposal } from \"../../../redux/action-creator/submitProposal\";\nimport { useDispatch } from \"react-redux\";\nimport { CommunityPoolSpendProposal as CPSProposalProc } from \"@cosmjs/stargate/build/codec/cosmos/distribution/v1beta1/distribution\";\n\nconst CommunityPoolSpendProposal: React.FC<TBaseSPMsg> = ({ title, description }) => {\n    const [amount, setAmount] = useState<Coin[]>([]);\n    const [recipient, setRecipient] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const submitCPSProposal = () =>\n        dispatch(\n            submitProposal({\n                typeUrl: \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal\",\n                value: CPSProposalProc.encode({\n                    title,\n                    description,\n                    amount,\n                    recipient\n                }).finish()\n            })\n        );\n    return (\n        <div className={\"cps-proposal\"}>\n            <div>\n                <div>\n                    <label htmlFor={\"recipient\"}>Recipient</label>\n                </div>\n\n                <input\n                    className={\"input-elem\"}\n                    id={\"recipient\"}\n                    value={recipient}\n                    onChange={(e) => setRecipient(e.target.value)}\n                    type={\"text\"}\n                    placeholder={\"cosmosxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}\n                />\n            </div>\n            <div>\n                <div>\n                    <label htmlFor={\"amount\"}>Amount</label>\n                </div>\n                <div id={\"amount\"}>\n                    <CoinsForm addCoin={(d) => setAmount([...amount, d])} />\n                    <div className={\"coin-items\"}>\n                        {amount.map((a, i) => (\n                            <CoinItem\n                                key={i}\n                                deposit={a}\n                                deleteDeposit={() =>\n                                    setAmount([...amount.slice(0, i), ...amount.slice(i + 1)])\n                                }\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <button className={\"btn-submit-proposal\"} onClick={submitCPSProposal}>\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default CommunityPoolSpendProposal;\n","import React, { useEffect, useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport TextProposal from \"./TextProposal\";\nimport ParameterChangeProposal from \"./ParameterChangeProposal/ParameterChangeProposal\";\nimport CommunityPoolSpendProposal from \"./CommunityPoolSpendProposal\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\nimport Spinner from \"../../Loader/Spinner\";\nimport { useDispatch } from \"react-redux\";\nimport { submitProposalReset } from \"../../../redux/action-creator/submitProposal\";\n\nconst SubmitProposal: React.FC = () => {\n    const { broadcastResponse, error, fetching } = useTypedSelector((s) => s.submitProposal);\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const params: TBaseSPMsg = { title, description };\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        return () => {\n            dispatch(submitProposalReset());\n        };\n    }, []);\n    return (\n        <div className=\"submit-proposal\">\n            <h4 className=\"title\">\n                Submit Proposal\n                {fetching && <Spinner />}\n            </h4>\n\n            {error && <div className={\"error-label\"}>Error: {error}</div>}\n            {broadcastResponse && <h1 className={\"success-label\"}>Success</h1>}\n\n            <div className=\"container\">\n                <div>\n                    <div>\n                        <label htmlFor={\"title\"}>Title</label>\n                    </div>\n                    <input\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        type={\"text\"}\n                        placeholder={\"My Cool Proposal\"}\n                        id={\"title\"}\n                        className=\"input-elem\"\n                    />\n                </div>\n\n                <div>\n                    <div>\n                        <label htmlFor={\"description\"}>Description</label>\n                    </div>\n                    <textarea\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        placeholder={\"A description with line breaks and `code formatting`\"}\n                        id={\"description\"}\n                        className=\"input-elem\"\n                    />\n                </div>\n                <div>\n                    <div>\n                        <label htmlFor={\"proposal-tabs\"}>Type Proposal</label>\n                    </div>\n\n                    <Tabs id={\"proposal-tabs\"}>\n                        <TabList>\n                            <Tab>TextProposal</Tab>\n                            <Tab>ParameterChangeProposal</Tab>\n                            <Tab>CommunityPoolSpendProposal</Tab>\n                        </TabList>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <TextProposal {...params} />\n                            </div>\n                        </TabPanel>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <ParameterChangeProposal {...params} />\n                            </div>\n                        </TabPanel>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <CommunityPoolSpendProposal {...params} />\n                            </div>\n                        </TabPanel>\n                    </Tabs>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SubmitProposal;\n","import React from \"react\";\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\nimport TextProposal from \"./SubmitProposal/TextProposal\";\nimport ParameterChangeProposal from \"./SubmitProposal/ParameterChangeProposal/ParameterChangeProposal\";\nimport CommunityPoolSpendProposal from \"./SubmitProposal/CommunityPoolSpendProposal\";\nimport AdminList from \"./AdminList/AdminList\";\nimport SubmitProposal from \"./SubmitProposal\";\n\nconst AdminModule = () => {\n    return (\n        <div className={\"admin-module\"}>\n            <Tabs>\n                <TabList>\n                    <Tab>Admin List</Tab>\n                    <Tab>Submit Proposal</Tab>\n                </TabList>\n\n                <TabPanel forceRender>\n                    <div className={\"tab-panel-content\"}>\n                        <AdminList />\n                    </div>\n                </TabPanel>\n\n                <TabPanel forceRender>\n                    <div className={\"tab-panel-content\"}>\n                        <SubmitProposal />\n                    </div>\n                </TabPanel>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default AdminModule;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../router\";\n\nconst NotFoundPage: React.FC = () => {\n    return (\n        <ul>\n            <h1>Not Found</h1>\n            <NavLink to={routes.home}>Home</NavLink>\n        </ul>\n    );\n};\n\nexport default NotFoundPage;\n","import { useEffect } from \"react\";\n\nexport function ScrollToTopOnMount() {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    return null;\n}\n","import React, { useEffect } from \"react\";\nimport { Markdown } from \"react-showdown\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    // fetchProposalDetail,\n    fetchProposals\n    // proposalDetailReset\n} from \"../../redux/action-creator/proposal\";\nimport { routes } from \"../../router\";\nimport Spinner from \"../Loader/Spinner\";\nimport { Deposit, Tally } from \"@cosmjs/launchpad/build/lcdapi/gov\";\nimport { CoinPretty, Dec } from \"@keplr-wallet/unit\";\nimport { toPrettyDate } from \"../../utills/toPrettyDate\";\nimport { chainInfo } from \"../../config\";\nimport { ScrollToTopOnMount } from \"../ScrollToTopOnMount\";\nimport { toPrettyCoin } from \"../../utills/toPrettyCoin\";\nimport { toProposalStatus } from \"../../utills/toProposalStatus\";\nimport { ParamChange } from \"../../cosmos/codec/cosmos/params/v1beta1/params\";\nimport {\n    isACommunityPoolSpendProposalContent,\n    isAParameterChangeProposalContent\n} from \"../../types/proposal\";\n\nconst ProposalDetail: React.FC = () => {\n    const history = useHistory();\n    const {\n        params: { id }\n    } = useRouteMatch<{ id: string }>();\n\n    const { /*proposalDetail,*/ proposals, isFetchingProposals, isFetchingItem, error } =\n        useTypedSelector((state) => state.proposal);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!proposals) {\n            dispatch(fetchProposals());\n        }\n        // dispatch(fetchProposalDetail(id));\n        // return () => {\n        //     dispatch(proposalDetailReset());\n        // };\n    }, [dispatch, id, proposals]);\n\n    const proposal = proposals?.find((p) => p.proposal_id === id);\n    if (!proposal && !isFetchingProposals && proposals) {\n        history.push(routes.proposals);\n    }\n\n    return (\n        <div className={\"item-content\"}>\n            <ScrollToTopOnMount />\n            {isFetchingProposals && <Spinner />}\n            {error}\n            {proposal && (\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <span> Proposal ID</span>\n                            </td>\n                            <td>{proposal.proposal_id}</td>\n                        </tr>\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Proposer</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>*/}\n                        {/*        {isFetchingItem ? (*/}\n                        {/*            <Spinner />*/}\n                        {/*        ) : (*/}\n                        {/*            proposalDetail?.proposer || \"no data\"*/}\n                        {/*        )}*/}\n                        {/*    </td>*/}\n                        {/*</tr>*/}\n\n                        <tr>\n                            <td>\n                                <span>Title</span>\n                            </td>\n                            <td>{proposal.content.title}</td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                <span>Description</span>\n                            </td>\n                            <td>\n                                <Markdown markdown={proposal.content.description} />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                <span>Proposal Type</span>\n                            </td>\n                            <td>{proposal.content[\"@type\"]}</td>\n                        </tr>\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Proposal Status</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toProposalStatus(proposal.proposal_status || proposal.status)}</td>*/}\n                        {/*</tr>*/}\n\n                        {isACommunityPoolSpendProposalContent(proposal.content) && (\n                            <>\n                                <tr>\n                                    <td>\n                                        <span>Recipient</span>\n                                    </td>\n                                    <td>{proposal.content.recipient}</td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span>Amount</span>\n                                    </td>\n                                    <td>\n                                        {proposal.content.amount.map((am, i) => (\n                                            <li key={i}>\n                                                {toPrettyCoin(am.amount, am.denom).toString()}\n                                            </li>\n                                        ))}\n                                    </td>\n                                </tr>\n                            </>\n                        )}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Deposit</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>*/}\n                        {/*        {isFetchingItem ? (*/}\n                        {/*            <Spinner />*/}\n                        {/*        ) : (*/}\n                        {/*            <Deposits deposits={proposalDetail?.deposits} />*/}\n                        {/*        )}*/}\n                        {/*    </td>*/}\n                        {/*</tr>*/}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Tally Result</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{<TallyResultTable results={proposal.final_tally_result} />}</td>*/}\n                        {/*</tr>*/}\n\n                        {isAParameterChangeProposalContent(proposal.content) && (\n                            <tr>\n                                <td>\n                                    <span>Changes</span>\n                                </td>\n                                <td>\n                                    <ChangesTable changes={proposal.content.changes} />\n                                </td>\n                            </tr>\n                        )}\n\n                        <tr>\n                            <td>\n                                <span>Submit Time</span>\n                            </td>\n                            <td>{toPrettyDate(proposal.submit_time)}</td>\n                        </tr>\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Deposit End Time</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toPrettyDate(proposal.deposit_end_time)}</td>*/}\n                        {/*</tr>*/}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Voting Start Time</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toPrettyDate(proposal.voting_start_time)}</td>*/}\n                        {/*</tr>*/}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>End Voting Time</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toPrettyDate(proposal.deposit_end_time)}</td>*/}\n                        {/*</tr>*/}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n};\nconst TallyResultTable: React.FC<{ results: Tally }> = ({ results }) => {\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>Yes</td>\n                    <td>{results.yes}</td>\n                </tr>\n                <tr>\n                    <td>No</td>\n                    <td>{results.no}</td>\n                </tr>\n                <tr>\n                    <td>Abstain</td>\n                    <td>{results.abstain}</td>\n                </tr>\n                <tr>\n                    <td>No with veto</td>\n                    <td>{results.no_with_veto}</td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\nconst ChangesTable: React.FC<{ changes: ParamChange[] }> = ({ changes }) => {\n    return (\n        <div className=\"change-table\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Subspace</th>\n                        <th>Key</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {changes.map((change, i) => (\n                        <tr key={i}>\n                            <td>{change.subspace}</td>\n                            <td>{change.key}</td>\n                            <td>{change.value}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst Deposits: React.FC<{ deposits: readonly Deposit[] | null | undefined }> = ({ deposits }) => {\n    if (!deposits) {\n        return <>no data</>;\n    }\n    const decToCoin = (amount: Dec): string => {\n        return new CoinPretty(chainInfo.currencies[0], amount).trim(true).toString();\n    };\n    let sum: Dec = new Dec(0);\n    deposits.map((d) => d.amount.map((a) => (sum = sum.add(new Dec(a.amount)))));\n\n    return (\n        <div>\n            {decToCoin(sum)}\n            <ol>\n                {deposits.map((d, i) => {\n                    return (\n                        <li key={i}>\n                            <div>{d.depositor}</div>\n                            {d.amount.map((amount, j) => {\n                                return <div key={j}>{decToCoin(new Dec(amount.amount))}</div>;\n                            })}\n                        </li>\n                    );\n                })}\n            </ol>\n        </div>\n    );\n};\n\nexport default ProposalDetail;\n","import React from \"react\";\nimport RouteWrapper from \"./components/SideBar/RouteWrapper\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport { routes } from \"./router\";\nimport ReviewState from \"./components/ReviewState/ReviewState\";\nimport ProposalsPage from \"./components/Proposals\";\nimport AdminModule from \"./components/AdminModule/AdminModule\";\nimport NotFoundPage from \"./components/NotFound\";\nimport \"./assets/scss/main.scss\";\nimport ProposalDetail from \"./components/Proposals/ProposalDetail\";\nimport AdminList from \"./components/AdminModule/AdminList/AdminList\";\nimport SubmitProposal from \"./components/AdminModule/SubmitProposal\";\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path={routes.home}>\n                    <RouteWrapper>\n                        <Home />\n                    </RouteWrapper>\n                </Route>\n\n                <Route exact path={routes.reviewState}>\n                    <RouteWrapper>\n                        <ReviewState />\n                    </RouteWrapper>\n                </Route>\n                <Route exact path={routes.proposals}>\n                    <RouteWrapper>\n                        <ProposalsPage />\n                    </RouteWrapper>\n                </Route>\n                <Route exact path={routes.proposalItem}>\n                    <RouteWrapper>\n                        <ProposalDetail />\n                    </RouteWrapper>\n                </Route>\n                <Route exact path={routes.adminModule}>\n                    <RouteWrapper>\n                        <AdminModule />\n                    </RouteWrapper>\n                </Route>\n                <Route>\n                    <RouteWrapper>\n                        <NotFoundPage />\n                    </RouteWrapper>\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { AdminActions, AdminListActionTypes, AdminListState } from \"../../types/adminList\";\n\nconst initialState: AdminListState = {\n    admins: [],\n    error: null,\n    loading: false\n};\n\nexport const adminListReducer = (state = initialState, action: AdminActions): AdminListState => {\n    switch (action.type) {\n        case AdminListActionTypes.SET_LIST:\n            return { ...state, admins: action.payload.admins };\n        case AdminListActionTypes.SET_LOADING:\n            return { ...state, loading: action.payload.loading };\n        case AdminListActionTypes.ERROR:\n            return { ...state, error: action.payload.error };\n        case AdminListActionTypes.CLEAR_ERROR:\n            return { ...state, error: null };\n        default:\n            return state;\n    }\n};\n","import { ProposalAction, ProposalActionTypes, ProposalState } from \"../../types/proposal\";\n\nconst initialState: ProposalState = {\n    proposals: null,\n    // proposalDetail: null,\n    isFetchingProposals: false,\n    isFetchingItem: false,\n    error: null\n};\n\nexport const proposalReducer = (state = initialState, action: ProposalAction): ProposalState => {\n    switch (action.type) {\n        case ProposalActionTypes.PROPOSAL_CALL:\n            return { ...state, isFetchingProposals: true, error: null };\n        case ProposalActionTypes.PROPOSAL_SUCCESS:\n            return { ...state, isFetchingProposals: false, proposals: action.payload };\n        case ProposalActionTypes.PROPOSAL_ERROR:\n            return { ...state, isFetchingProposals: false, error: action.payload };\n\n        // case ProposalActionTypes.PROPOSAL_DETAIL_CALL:\n        //     return { ...state, isFetchingItem: true, error: null };\n        // case ProposalActionTypes.PROPOSAL_DETAIL_SUCCESS:\n        //     return { ...state, isFetchingItem: false, proposalDetail: action.payload };\n        // case ProposalActionTypes.PROPOSAL_DETAIL_ERROR:\n        //     return { ...state, isFetchingItem: false, error: action.payload };\n        // case ProposalActionTypes.PROPOSAL_DETAIL_RESET:\n        //     return { ...state, proposalDetail: null };\n        default:\n            return state;\n    }\n};\n","import { WalletAction, WalletActionTypes, WalletState } from \"../../types/wallet\";\n\nconst initialState: WalletState = {\n    keplr: null,\n    stargateClient: null,\n    isConnected: false,\n    error: null\n};\n\nexport const walletReducer = (state = initialState, action: WalletAction): WalletState => {\n    switch (action.type) {\n        case WalletActionTypes.WALLET_CONNECT:\n            return { ...state, error: null };\n        case WalletActionTypes.WALLET_DISCONNECT:\n            return { ...state, keplr: null, stargateClient: null, isConnected: false, error: null };\n        case WalletActionTypes.WALLET_SUCCESS:\n            return { ...state, isConnected: true, ...action.payload };\n        case WalletActionTypes.WALLET_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                isConnected: false,\n                keplr: null,\n                stargateClient: null\n            };\n        default:\n            return state;\n    }\n};\n","import { StakingParams } from \"@keplr-wallet/stores/build/query/cosmos/staking/types\";\nimport {\n    ReviewChangesActions,\n    ReviewChangesActionTypes,\n    ReviewChangesState\n} from \"../../types/reviewChanges\";\n\nconst initialState: ReviewChangesState = {\n    error: null,\n    loading: false,\n    modules: {\n        bank: null!,\n        distribution: null!,\n        gov: null!,\n        slashing: null!,\n        staking: null!\n    }\n};\n\nexport const reviewChangesReducer = (\n    state = initialState,\n    action: ReviewChangesActions\n): ReviewChangesState => {\n    switch (action.type) {\n        case ReviewChangesActionTypes.SET_PARAMS:\n            return { ...state, modules: { ...action.payload } };\n        case ReviewChangesActionTypes.SET_LOADING:\n            return { ...state, loading: action.payload.loading };\n        case ReviewChangesActionTypes.ERROR:\n            return { ...state, error: action.payload.error };\n        case ReviewChangesActionTypes.CLEAR_ERROR:\n            return { ...state, error: null };\n        default:\n            return state;\n    }\n};\n","import {\n    SubmitProposalAction,\n    SubmitProposalState,\n    SubmitProposalTypes\n} from \"../../types/submitProposal\";\n\nconst initialState: SubmitProposalState = {\n    error: null,\n    broadcastResponse: null,\n    fetching: false\n};\n\nexport const submitProposalReducer = (\n    state = initialState,\n    action: SubmitProposalAction\n): SubmitProposalState => {\n    switch (action.type) {\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_CALL:\n            return { ...state, error: null, broadcastResponse: null, fetching: true };\n\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_SUCCESS:\n            return { ...state, fetching: false, broadcastResponse: action.payload };\n\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_ERROR:\n            return { ...state, fetching: false, error: action.payload };\n\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_RESET:\n            return { ...state, error: null, broadcastResponse: null, fetching: false };\n\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { adminListReducer } from \"./adminList\";\nimport { proposalReducer } from \"./proposal\";\nimport { walletReducer } from \"./wallet\";\nimport { reviewChangesReducer } from \"./reviewChanges\";\nimport { submitProposalReducer } from \"./submitProposal\";\n\nexport const rootReducer = combineReducers({\n    proposal: proposalReducer,\n    wallet: walletReducer,\n    admin: adminListReducer,\n    reviewChanges: reviewChangesReducer,\n    submitProposal: submitProposalReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers\";\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.adminmodule.adminmodule\";\nconst baseMsgDeleteAdmin = { creator: \"\", admin: \"\" };\nexport const MsgDeleteAdmin = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAdmin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = String(object.admin);\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.admin !== undefined && (obj.admin = message.admin);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = object.admin;\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteAdminResponse = {};\nexport const MsgDeleteAdminResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAdminResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteAdminResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteAdminResponse };\n        return message;\n    }\n};\nconst baseMsgAddAdmin = { creator: \"\", admin: \"\" };\nexport const MsgAddAdmin = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddAdmin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = String(object.admin);\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.admin !== undefined && (obj.admin = message.admin);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = object.admin;\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    }\n};\nconst baseMsgAddAdminResponse = {};\nexport const MsgAddAdminResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddAdminResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgAddAdminResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgAddAdminResponse };\n        return message;\n    }\n};\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(18).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        } else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        } else {\n            message.proposer = \"\";\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        } else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        } else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    DeleteAdmin(request) {\n        const data = MsgDeleteAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.adminmodule.adminmodule.Msg\", \"DeleteAdmin\", data);\n        return promise.then((data) => MsgDeleteAdminResponse.decode(new Reader(data)));\n    }\n    AddAdmin(request) {\n        const data = MsgAddAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.adminmodule.adminmodule.Msg\", \"AddAdmin\", data);\n        return promise.then((data) => MsgAddAdminResponse.decode(new Reader(data)));\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\n            \"cosmos.adminmodule.adminmodule.Msg\",\n            \"SubmitProposal\",\n            data\n        );\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        } else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        } else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.adminmodule.adminmodule\";\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        } else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        } else {\n            message.submitTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        } else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        } else {\n            message.submitTime = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    } else if (typeof o === \"string\") {\n        return new Date(o);\n    } else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        } else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(\n                message.value !== undefined ? message.value : new Uint8Array()\n            ));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        } else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        } else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}