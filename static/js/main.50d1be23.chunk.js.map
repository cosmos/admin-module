{"version":3,"sources":["types/settings.ts","utills/localStorage.ts","config.ts","types/proposal.ts","redux/action-creator/settings.ts","redux/useTypedSelector.ts","utills/helper.ts","cosmos/codec/cosmos/params/v1beta1/params.ts","hooks/useAdminConnection.ts","hooks/useAuthzEnabled.ts","types/wallet.ts","router/index.js","utills/toPrettyCoin.ts","cosmos/keplr/index.ts","cosmos/index.ts","cosmos/codec/cosmos/gov/v1beta1/tx.ts","redux/action-creator/wallet.ts","hooks/useAccountConnection.ts","types/reviewChanges.ts","components/Loader/Spinner.tsx","components/SideBar/SidebarBottom/SidebarBottom.tsx","components/SideBar/SideBar.tsx","components/SideBar/RouteWrapper.tsx","utills/initSettings.ts","components/Home/index.tsx","redux/action-creator/reviewChanges.ts","components/ReviewState/ModuleSection.tsx","components/ReviewState/ReviewState.tsx","utills/toPrettyDate.ts","components/Proposals/ProposalItem.tsx","redux/action-creator/proposal.ts","components/ModuleSwitch/ModuleSwitch.tsx","components/Proposals/index.tsx","components/NotFound/index.tsx","components/ScrollToTopOnMount/index.tsx","components/Proposals/ProposalDetail.tsx","types/adminList.ts","components/Settings/index.tsx","redux/action-creator/adminList.ts","types/submitProposal.ts","components/AdminModule/AdminList/AdminDetail.tsx","components/AdminModule/AdminList/AdminForm.tsx","components/AdminModule/AdminList/AdminList.tsx","components/AdminModule/SubmitProposal/Coins/CoinsForm.tsx","components/AdminModule/SubmitProposal/Coins/CoinItem.tsx","redux/action-creator/submitProposal.ts","types/authz.ts","components/AdminModule/SubmitProposal/TextProposal.tsx","components/AdminModule/SubmitProposal/ParameterChangeProposal/ParamChange/ChangeForm.tsx","components/AdminModule/SubmitProposal/ParameterChangeProposal/ParamChange/ChangeItem.tsx","components/AdminModule/SubmitProposal/ParameterChangeProposal/ParameterChangeProposal.tsx","components/AdminModule/SubmitProposal/CommunityPoolSpendProposal.tsx","components/AdminModule/SubmitProposal/SoftwareUpgradeProposal.tsx","components/AdminModule/SubmitProposal/index.tsx","redux/action-creator/authz.ts","components/Authz/index.tsx","App.tsx","reportWebVitals.ts","redux/reducers/adminList.ts","redux/reducers/proposal.ts","redux/reducers/wallet.ts","redux/reducers/reviewChanges.ts","redux/reducers/submitProposal.ts","redux/reducers/settings.ts","redux/reducers/authz.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx","cosmos/codec/cosmos/gov/v1beta1/gov.ts","cosmos/codec/cosmos/upgrade/upgrade.ts","cosmos/codec/cosmos/adminmodule/adminmodule/tx.js","cosmos/codec/cosmos/adminmodule/google/protobuf/any.js","cosmos/codec/cosmos/base/v1beta1/coin.ts","cosmos/codec/cosmos/authz/tx.ts","cosmos/codec/cosmos/adminmodule/adminmodule/adminmodule.js","cosmos/codec/cosmos/adminmodule/google/protobuf/timestamp.js","cosmos/codec/google/protobuf/any.ts","cosmos/codec/google/protobuf/duration.ts","cosmos/codec/google/protobuf/timestamp.ts","cosmos/codec/cosmos/authz/authz.ts"],"names":["ModuleNames","ProposalUrls","SettingsActionTypes","remoteSettings","rpc","rest","chainId","chainName","SettingsLS","chainInfo","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","bip44","coinType","bech32Config","Bech32Address","defaultBech32Config","currencies","feeCurrencies","features","ProposalTypes","ProposalActionTypes","getLocalSettings","unparsedSettings","window","localStorage","getItem","localSettings","newSettings","moduleName","gov","setItem","JSON","stringify","parse","setLocalSettings","settings","oldSettings","setLocalModule","updateSettings","dispatch","a","lcdClient","LcdClient","withExtensions","apiUrl","setupAuthExtension","setupBankExtension","setupDistributionExtension","setupGovExtension","setupMintExtension","setupSlashingExtension","setupStakingExtension","setupSupplyExtension","type","SET_SETTINGS","payload","error","console","log","setModule","SET_MODULE","useTypedSelector","useSelector","isAParameterChangeProposalContent","proposal","isACommunityPoolSpendProposalContent","SdkVersions","baseParameterChangeProposal","title","description","ParameterChangeProposal","message","writer","_m0","Writer","create","uint32","string","changes","v","ParamChange","encode","fork","ldelim","input","length","reader","Reader","end","undefined","len","pos","tag","push","decode","skipType","baseParamChange","subspace","key","value","fromJSON","object","String","toJSON","obj","fromPartial","util","Long","configure","getModulesList","rpcEndpoint","axios","get","resp","Object","keys","data","result","genesis","app_state","adminModuleConnected","moduleList","includes","getProposalsHistory","registry","txs","parsedTxs","forEach","tx","i","parseTx","height","parsedData","decoded","decodeTxRaw","b64","bin","atob","arr","Uint8Array","charCodeAt","bytesFromBase64","body","messages","typeUrl","admin","decodedMsg","content","text","TextProposal","upgrade","SoftwareUpgradeProposal","poolSpend","CommunityPoolSpendProposal","paramChange","isAuthzEnabled","useAdminConnection","useState","admConnected","setAdmConnected","useDispatch","state","updateConnection","conn","useEffect","useMemo","WalletActionTypes","useAuthzConnected","connected","setConnected","con","checkCon","routes","toPrettyCoin","amount","CoinPretty","Dec","toString","getKeplr","getKeplrFromWindow","getAccountName","keplr","getKey","name","getWalletAddress","bech32Address","getBalance","walletAddress","bank","balances","then","coins","res","find","c","denom","trim","baseMsgSubmitProposal","proposer","MsgSubmitProposal","Any","initialDeposit","Coin","e","map","UZERO","connectWallet","WALLET_CONNECT","updatedChainInfo","Error","experimentalSuggestChain","enable","Registry","register","MsgSubmitProposalGov","MsgAddAdmin","MsgDeleteAdmin","MsgGrant","MsgRevoke","defaultRegistryTypes","offlineSigner","getOfflineSigner","SigningStargateClient","connectWithSigner","stargateClient","WALLET_SUCCESS","WALLET_ERROR","disconnectWallet","WALLET_DISCONNECT","KeyAccountAutoConnect","ReviewChangesActionTypes","Spinner","size","SidebarBottom","isConnected","wallet","shouldAutoConnectAccount","disconnectAccount","useCallback","removeItem","connectAccount","useAccountConnection","coin","setCoin","setName","setData","className","onClick","active","fontWeight","boxShadow","borderLeft","color","Sidebar","withRouter","authzConnected","to","activeStyle","RouteWrapper","children","initSettings","Home","sendErrorNotification","errMessage","ERROR","setTimeout","CLEAR_ERROR","fetchParamsList","getState","SET_LOADING","loading","distribution","govVoting","govDeposit","govTally","slashing","staking","SET_PARAMS","params","voting_params","deposit_params","tally_params","ModuleSection","ReviewState","reviewChanges","modules","default_send_enabled","send_enabled","base_proposer_reward","bonus_proposer_reward","community_tax","withdraw_addr_enabled","min_deposit","d","max_deposit_period","voting_period","quorum","threshold","veto_threshold","downtime_jail_duration","min_signed_per_window","signed_blocks_window","slash_fraction_double_sign","slash_fraction_downtime","bond_denom","historical_entries","max_entries","max_validators","unbonding_time","toPrettyDate","date","dateString","Date","toUTCString","indexDayOfWeek","indexOf","substr","ProposalItem","proposal_id","submit_time","chainIdAndType","split","typeShort","fetchProposals","PROPOSAL_CALL","proposals","mappedProposals","p","PROPOSAL_SUCCESS","reverse","archivedProposals","PROPOSAL_ERROR","ModuleSwitch","checked","setChecked","offColor","onColor","uncheckedIcon","style","display","justifyContent","alignItems","fontSize","paddingRight","checkedIcon","paddingLeft","onChange","ProposalsPage","isFetchingProposals","NotFoundPage","ScrollToTopOnMount","scrollTo","AdminListActionTypes","ChangesTable","change","ProposalDetail","history","useHistory","id","useRouteMatch","isFetchingItem","markdown","recipient","am","SettingsPage","setRest","setRpc","setChainId","setChainName","saveSettings","htmlFor","target","width","s","options","label","SubmitProposalTypes","AdminDetail","accountAddress","orderNum","deleteAdmin","address","confirm","adminAddress","kepler","sender","msgAny","creator","fee","gas","signAndBroadcast","broadcastRes","isBroadcastTxSuccess","adminsResp","SET_LIST","admins","deleteAdminAction","disabled","AdminForm","setAddress","addAdmin","Bech32","msgAddAdminRequest","saveAdminAction","placeholder","AdminList","adm","CoinsForm","addCoin","setAmount","setDenom","CoinItem","deposit","deleteDeposit","AuthzTypes","submitProposal","SUBMIT_PROPOSAL_CALL","setSubmitProposalError","msg","SUBMIT_PROPOSAL_SUCCESS","rawLog","SUBMIT_PROPOSAL_ERROR","TextProposalProc","finish","subspaceKeys","auth","crisis","mint","evidence","ChangeForm","addChange","setSubspace","setKey","setValue","subOptions","keyOptions","menuPlacement","defaultValue","elm","ChangeItem","deleteChange","btnDeleteShow","setBtnDeleteShow","onMouseEnter","onMouseLeave","setChanges","slice","ParameterChangeProposalProc","setRecipient","CPSProposalProc","plan","setPlan","time","flexDirection","gap","info","cols","rows","val","SoftwareUpgradeProposalProc","SubmitProposal","broadcastResponse","fetching","setTitle","setDescription","setDeposit","SUBMIT_PROPOSAL_RESET","forceRender","setAuthzError","AUTH_ERROR","AuthzPage","granterG","setGranterG","granteeG","setGranteeG","msgTypeUrlG","setMsgTypeUrlG","granterR","setGranterR","granteeR","setGranteeR","msgTypeUrlR","setMsgTypeUrlR","granterS","setGranterS","granteeS","setGranteeS","authz","grants","granter","grantee","msgTypeUrl","AUTH_CALL","dateNow","grant","authorization","GenericAuthorization","expiration","getFullYear","getMonth","getDate","AUTH_SUCCESS","SET_GRANTS","g","toLocaleDateString","App","exact","path","Settings","Authz","Proposals","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","AUTH_RESET","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","UNRECOGNIZED","voteOptionToJSON","baseTextProposal","globalThis","self","global","btoa","basePlan","Plan","Timestamp","toTimestamp","int64","upgradedClientState","fromTimestamp","longToNumber","o","Number","toISOString","baseSoftwareUpgradeProposal","seconds","getTime","nanos","t","millis","long","gt","MAX_SAFE_INTEGER","toNumber","baseMsgDeleteAdmin","baseMsgAddAdmin","baseAny","bytes","byteLength","fromCharCode","join","base64FromBytes","Buffer","from","baseCoin","baseMsgGrant","Grant","baseMsgRevoke","baseTimestamp","int32","baseDuration","ZERO","Duration","isZero","fromString","baseGenericAuthorization","baseGrant"],"mappings":"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","file":"static/js/main.50d1be23.chunk.js","sourcesContent":["import {\n    AuthExtension,\n    BankExtension,\n    DistributionExtension,\n    GovExtension,\n    LcdClient,\n    MintExtension,\n    SlashingExtension,\n    StakingExtension,\n    SupplyExtension\n} from \"@cosmjs/launchpad\";\n\nexport const remoteSettings: RemoteNode[] = [\n    {\n        rpc: \"https://rpc-cosmoshub.keplr.app\",\n        rest: \"https://lcd-cosmoshub.keplr.app\",\n        chainId: \"cosmoshub-4\",\n        chainName: \"Cosmos\"\n    },\n    {\n        rpc: \"https://rpc-osmosis.keplr.app\",\n        rest: \"https://lcd-osmosis.keplr.app\",\n        chainId: \"osmosis-1\",\n        chainName: \"Osmosis\"\n    },\n    {\n        rpc: \"https://rpc-secret.keplr.app\",\n        rest: \"https://lcd-secret.keplr.app\",\n        chainId: \"secret-3\",\n        chainName: \"Secret Network\"\n    },\n    {\n        rpc: \"https://rpc-akash.keplr.app\",\n        rest: \"https://lcd-akash.keplr.app\",\n        chainId: \"akashnet-2\",\n        chainName: \"Akash\"\n    },\n    {\n        rpc: \"https://rpc-crypto-org.keplr.app\",\n        rest: \"https://lcd-crypto-org.keplr.app\",\n        chainId: \"crypto-org-chain-mainnet-1\",\n        chainName: \"Crypto.org\"\n    },\n    {\n        rpc: \"https://rpc-iov.keplr.app\",\n        rest: \"https://lcd-iov.keplr.app\",\n        chainId: \"iov-mainnet-ibc\",\n        chainName: \"Starname\"\n    },\n    {\n        rpc: \"https://rpc-sifchain.keplr.app\",\n        rest: \"https://lcd-sifchain.keplr.app/\",\n        chainId: \"sifchain-1\",\n        chainName: \"Sifchain\"\n    },\n    {\n        rpc: \"https://rpc-certik.keplr.app\",\n        rest: \"https://lcd-certik.keplr.app\",\n        chainId: \"shentu-2.2\",\n        chainName: \"Certik\"\n    },\n    {\n        rpc: \"https://rpc-iris.keplr.app\",\n        rest: \"https://lcd-iris.keplr.app\",\n        chainId: \"irishub-1\",\n        chainName: \"IRISnet\"\n    },\n    {\n        rpc: \"https://rpc-regen.keplr.app\",\n        rest: \"https://lcd-regen.keplr.app\",\n        chainId: \"regen-1\",\n        chainName: \"Regen\"\n    },\n    {\n        rpc: \"https://rpc-persistence.keplr.app\",\n        rest: \"https://lcd-persistence.keplr.app\",\n        chainId: \"core-1\",\n        chainName: \"Persistence\"\n    },\n    {\n        rpc: \"https://rpc-sentinel.keplr.app\",\n        rest: \"https://lcd-sentinel.keplr.app\",\n        chainId: \"sentinelhub-2\",\n        chainName: \"Sentinel\"\n    },\n    {\n        rpc: \"https://rpc-impacthub.keplr.app\",\n        rest: \"https://lcd-impacthub.keplr.app\",\n        chainId: \"impacthub-3\",\n        chainName: \"ixo\"\n    },\n    {\n        rpc: \"https://rpc-emoney.keplr.app\",\n        rest: \"https://lcd-emoney.keplr.app\",\n        chainId: \"emoney-3\",\n        chainName: \"e-Money\"\n    }\n];\n\nexport enum ModuleNames {\n    gov = \"gov\",\n    admin = \"admin\"\n}\n\nexport enum ProposalUrls {\n    admin = \"/cosmos.adminmodule.adminmodule.MsgSubmitProposal\",\n    gov = \"/cosmos.gov.v1beta1.MsgSubmitProposal\"\n}\n\nexport interface RemoteNode {\n    chainId: string;\n    chainName: string;\n    rpc: string;\n    rest: string;\n}\n\nexport interface FetchAction {\n    type: SettingsActionTypes.SET_SETTINGS;\n    payload: Omit<SettingsState, \"moduleName\">;\n}\n\nexport interface ModuleNameAction {\n    type: SettingsActionTypes.SET_MODULE;\n    payload: {\n        moduleName: ModuleNames;\n    };\n}\n\n// export interface SetLoadingAction {\n//     type: SettingsActionTypes.SET_LOADING;\n//     payload: { loading: boolean };\n// }\n\n// export interface ErrorAction {\n//     type: SettingsActionTypes.ERROR;\n//     payload: { error: string };\n// }\n\n// export interface ClearErrorAction {\n//     type: SettingsActionTypes.CLEAR_ERROR;\n// }\n\nexport type SettingsActions = FetchAction | ModuleNameAction;\n\nexport enum SettingsActionTypes {\n    SET_SETTINGS = \"SET_SETTINGS\",\n    SET_MODULE = \"SET_MODULE\"\n    // SET_LOADING = \"SET_LOADING\",\n    // ERROR = \"ERROR\",\n    // CLEAR_ERROR = \"CLEAR_ERROR\"\n}\n\nexport interface SettingsState {\n    rpc: string;\n    rest: string;\n    chainId: string;\n    chainName: string;\n    lcdClient: LcdClient &\n        AuthExtension &\n        BankExtension &\n        DistributionExtension &\n        GovExtension &\n        MintExtension &\n        SlashingExtension &\n        StakingExtension &\n        SupplyExtension;\n    moduleName: ModuleNames;\n}\n","import { chainInfo } from \"../config\";\nimport { ModuleNames, SettingsState } from \"../types/settings\";\n\nexport enum SettingsLS {\n    localSettings = \"local-settings\"\n}\n\nexport type LocalSettings = Omit<SettingsState, \"lcdClient\">;\n\nexport const getLocalSettings = (): LocalSettings => {\n    const unparsedSettings = window?.localStorage.getItem(SettingsLS.localSettings);\n    if (!unparsedSettings) {\n        const newSettings: LocalSettings = {\n            rest: chainInfo.rest,\n            rpc: chainInfo.rpc,\n            chainId: chainInfo.chainId,\n            chainName: chainInfo.chainName,\n            moduleName: ModuleNames.gov\n        };\n\n        window?.localStorage.setItem(SettingsLS.localSettings, JSON.stringify(newSettings));\n\n        return newSettings;\n    }\n\n    return JSON.parse(unparsedSettings);\n};\n\nexport const setLocalSettings = (settings: Omit<LocalSettings, \"moduleName\">): void => {\n    const oldSettings = getLocalSettings();\n    const newSettings = { ...oldSettings, ...settings };\n    window?.localStorage.setItem(SettingsLS.localSettings, JSON.stringify(newSettings));\n};\n\nexport const setLocalModule = (moduleName: ModuleNames): void => {\n    const settings = getLocalSettings();\n    settings.moduleName = moduleName;\n    setLocalSettings(settings);\n};\n","import { ChainInfo } from \"@keplr-wallet/types\";\nimport { Bech32Address } from \"@keplr-wallet/cosmos\";\n\n//testnet\nconst chainInfo: ChainInfo = {\n    rpc: \"http://localhost:26657\",\n    rest: \"http://localhost:1317\",\n    chainId: \"adminmodule\",\n    chainName: \"TESTNET\",\n    stakeCurrency: {\n        coinDenom: \"STAKE\",\n        coinMinimalDenom: \"stake\",\n        coinDecimals: 6\n    },\n    bip44: {\n        coinType: 118\n    },\n    bech32Config: Bech32Address.defaultBech32Config(\"cosmos\"),\n    currencies: [\n        {\n            coinDenom: \"STAKE\",\n            coinMinimalDenom: \"stake\",\n            coinDecimals: 6\n        }\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: \"STAKE\",\n            coinMinimalDenom: \"stake\",\n            coinDecimals: 6\n        }\n    ],\n    features: [\"stargate\", \"ibc-transfer\"]\n};\n\n// mainnet\n// const chainInfo: ChainInfo = {\n//     rpc: \"https://rpc-cosmoshub.keplr.app\",\n//     rest: \"https://lcd-cosmoshub.keplr.app\",\n//     chainId: \"cosmoshub-4\",\n//     chainName: \"Cosmos Hub\",\n//     stakeCurrency: {\n//         coinDenom: \"ATOM\",\n//         coinMinimalDenom: \"uatom\",\n//         coinDecimals: 6,\n//         coinGeckoId: \"cosmos\",\n//         coinImageUrl: window.location.origin + \"/public/assets/tokens/cosmos.svg\"\n//     },\n//     bip44: {\n//         coinType: 118\n//     },\n//     bech32Config: Bech32Address.defaultBech32Config(\"cosmos\"),\n//     currencies: [\n//         {\n//             coinDenom: \"ATOM\",\n//             coinMinimalDenom: \"uatom\",\n//             coinDecimals: 6,\n//             coinGeckoId: \"cosmos\",\n//             coinImageUrl: window.location.origin + \"/public/assets/tokens/cosmos.svg\"\n//         }\n//     ],\n//     feeCurrencies: [\n//         {\n//             coinDenom: \"ATOM\",\n//             coinMinimalDenom: \"uatom\",\n//             coinDecimals: 6,\n//             coinGeckoId: \"cosmos\",\n//             coinImageUrl: window.location.origin + \"/public/assets/tokens/cosmos.svg\"\n//         }\n//     ],\n//     coinType: 118,\n//     features: [\"stargate\", \"ibc-transfer\"]\n// };\n\nexport { chainInfo };\n","import { Deposit, Proposal as ProposalCosmJS } from \"@cosmjs/launchpad/build/lcdapi/gov\";\nimport { Coin } from \"@cosmjs/stargate\";\nimport { ParamChange } from \"../cosmos/codec/cosmos/params/v1beta1/params\";\n\nexport interface ArchivedProposal {\n    proposal_id: string;\n    content: AContent;\n    submit_time: string;\n    height?: string;\n}\n\ninterface AContent {\n    \"@type\": string;\n    title: string;\n    description: string;\n    changes?: { key: string; subspace: string; value: string }[];\n}\n\nexport enum ProposalTypes {\n    upgrade = \"/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal\",\n    text = \"/cosmos.gov.v1beta1.TextProposal\",\n    poolSpend = \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal\",\n    paramChange = \"/cosmos.params.v1beta1.ParameterChangeProposal\"\n}\n\nexport interface ATextProposalContent extends AContent {\n    \"@type\": \"/cosmos.adminmodule.adminmodule.TextProposal\";\n}\nexport interface AParameterChangeProposalContent extends AContent {\n    \"@type\": \"/cosmos.adminmodule.adminmodule.ParameterChangeProposal\";\n    changes: ParamChange[];\n}\nexport interface ACommunityPoolSpendProposalContent extends AContent {\n    \"@type\": \"/cosmos.adminmodule.adminmodule.CommunityPoolSpendProposal\";\n    recipient: string;\n    amount: Coin[];\n}\n\nexport function isATextProposalContent(proposal: AContent): proposal is ATextProposalContent {\n    return proposal[\"@type\"] === \"/cosmos.gov.v1beta1.TextProposal\";\n}\nexport function isAParameterChangeProposalContent(\n    proposal: AContent\n): proposal is AParameterChangeProposalContent {\n    return proposal[\"@type\"] === \"/cosmos.params.v1beta1.ParameterChangeProposal\";\n}\nexport function isACommunityPoolSpendProposalContent(\n    proposal: AContent\n): proposal is ACommunityPoolSpendProposalContent {\n    return proposal[\"@type\"] === \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal\";\n}\n\n// export interface Proposal extends ProposalCosmJS {\n//     readonly status: string;\n//     readonly content: {\n//         readonly type: string;\n//         readonly value: {\n//             readonly title: string;\n//             readonly description: string;\n//\n//             //only ParameterChangeProposal\n//             readonly changes?: ParamChange[];\n//\n//             //only CommunityPoolSpendProposal\n//             readonly recipient?: string;\n//             readonly amount?: Coin[];\n//         };\n//     };\n// }\n//\n// interface IProposalDetail {\n//     proposer: string | null;\n//     deposits: readonly Deposit[] | null;\n// }\n\nexport interface ProposalState {\n    proposals: ArchivedProposal[] | null;\n    // proposalDetail: IProposalDetail | null;\n    isFetchingProposals: boolean;\n    isFetchingItem: boolean;\n    error: null | string;\n}\n\nexport enum ProposalActionTypes {\n    PROPOSAL_CALL = \"PROPOSAL_CALL\",\n    PROPOSAL_SUCCESS = \"PROPOSAL_SUCCESS\",\n    PROPOSAL_ERROR = \"PROPOSAL_ERROR\"\n\n    // PROPOSAL_DETAIL_CALL = \"PROPOSAL_DETAIL_CALL\",\n    // PROPOSAL_DETAIL_SUCCESS = \"PROPOSAL_DETAIL_SUCCESS\",\n    // PROPOSAL_DETAIL_ERROR = \"PROPOSAL_DETAIL_ERROR\",\n    // PROPOSAL_DETAIL_RESET = \"PROPOSAL_DETAIL_RESET\"\n}\n\ninterface ProposalCallAction {\n    type: ProposalActionTypes.PROPOSAL_CALL;\n}\n\ninterface ProposalSuccessAction {\n    type: ProposalActionTypes.PROPOSAL_SUCCESS;\n    payload: ArchivedProposal[];\n}\n\ninterface ProposalErrorAction {\n    type: ProposalActionTypes.PROPOSAL_ERROR;\n    payload: string;\n}\n\n// interface ProposalDetailCallAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_CALL;\n// }\n//\n// interface ProposalDetailSuccessAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_SUCCESS;\n//     payload: IProposalDetail;\n// }\n//\n// interface ProposalDetailErrorAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_ERROR;\n//     payload: string;\n// }\n//\n// interface ProposalDetailResetAction {\n//     type: ProposalActionTypes.PROPOSAL_DETAIL_RESET;\n// }\n\nexport type ProposalAction = ProposalCallAction | ProposalSuccessAction | ProposalErrorAction;\n// | ProposalDetailCallAction\n// | ProposalDetailSuccessAction\n// | ProposalDetailErrorAction\n// | ProposalDetailResetAction;\n","import {\n    LcdClient,\n    setupAuthExtension,\n    setupBankExtension,\n    setupDistributionExtension,\n    setupGovExtension,\n    setupMintExtension,\n    setupSlashingExtension,\n    setupStakingExtension,\n    setupSupplyExtension\n} from \"@cosmjs/launchpad\";\nimport { Dispatch } from \"redux\";\nimport { ModuleNames, SettingsActions, SettingsActionTypes } from \"../../types/settings\";\nimport { setLocalModule } from \"../../utills/localStorage\";\n\nexport interface IUpdateSettings {\n    rpc: string;\n    rest: string;\n    chainId: string;\n    chainName: string;\n}\n\nexport const updateSettings = ({ rpc, rest, chainId, chainName }: IUpdateSettings) => {\n    return async (dispatch: Dispatch<SettingsActions>): Promise<void> => {\n        try {\n            const lcdClient = LcdClient.withExtensions(\n                { apiUrl: rest },\n                setupAuthExtension,\n                setupBankExtension,\n                setupDistributionExtension,\n                setupGovExtension,\n                setupMintExtension,\n                setupSlashingExtension,\n                setupStakingExtension,\n                setupSupplyExtension\n            );\n\n            dispatch({\n                type: SettingsActionTypes.SET_SETTINGS,\n                payload: {\n                    rpc,\n                    rest,\n                    chainId,\n                    chainName,\n                    lcdClient\n                }\n            });\n        } catch (error) {\n            console.log(\"[Update Settings error]\", error);\n        }\n    };\n};\n\nexport const setModule = (moduleName: ModuleNames) => {\n    return async (dispatch: Dispatch<SettingsActions>): Promise<void> => {\n        try {\n            setLocalModule(moduleName);\n\n            dispatch({\n                type: SettingsActionTypes.SET_MODULE,\n                payload: {\n                    moduleName\n                }\n            });\n        } catch (error) {\n            console.log(\"[Update Settings error]\", error);\n        }\n    };\n};\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"./reducers\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import axios from \"axios\";\n\nimport { decodeTxRaw, Registry } from \"@cosmjs/proto-signing\";\nimport { ProposalUrls } from \"../types/settings\";\nimport { TextProposal } from \"../cosmos/codec/cosmos/gov/v1beta1/gov\";\nimport { ProposalTypes } from \"../types/proposal\";\nimport { CommunityPoolSpendProposal } from \"@cosmjs/stargate/build/codec/cosmos/distribution/v1beta1/distribution\";\nimport { SoftwareUpgradeProposal } from \"../cosmos/codec/cosmos/upgrade/upgrade\";\nimport { ParameterChangeProposal } from \"../cosmos/codec/cosmos/params/v1beta1/params\";\n\nexport enum SdkVersions {\n    v42 = \"v0.42\",\n    v44 = \"v0.44\"\n}\n\nexport const getModulesList = async (rpcEndpoint: string): Promise<string[]> => {\n    const resp = await axios.get(`${rpcEndpoint}/genesis`);\n    return Object.keys(resp.data.result.genesis?.app_state);\n};\n\nexport const adminModuleConnected = async (rpcEndpoint: string): Promise<boolean> => {\n    try {\n        const moduleList = await getModulesList(rpcEndpoint);\n        return moduleList.includes(\"adminmodule\");\n    } catch (error) {\n        console.error(\"Error fetching genesis\");\n        return false;\n    }\n};\n\nexport const getProposalsHistory = async (\n    rpcEndpoint: string,\n    registry: Registry\n): Promise<any[]> => {\n    let txs = await axios.get(\n        `${rpcEndpoint}/tx_search?query=\"message.action='/cosmos.gov.v1beta1.MsgSubmitProposal'\"`\n    );\n\n    if (txs.data.result.txs.length === 0) {\n        txs = await axios.get(`${rpcEndpoint}/tx_search?query=\"message.action='submit_proposal'\"`);\n    }\n    const parsedTxs: any[] = [];\n    txs.data.result.txs.forEach((tx: any, i: number) => {\n        parsedTxs.push(parseTx(tx.tx, registry));\n        parsedTxs[i].height = tx.height;\n    });\n\n    return parsedTxs;\n};\n\nexport const parseTx = (tx: any, registry: Registry) => {\n    const decoded = decodeTxRaw(bytesFromBase64(tx));\n    let parsedData;\n\n    for (const message of decoded.body.messages) {\n        if (message.typeUrl === ProposalUrls.gov || ProposalUrls.admin) {\n            const decodedMsg = registry.decode(message);\n            switch (decodedMsg.content.typeUrl) {\n                case ProposalTypes.text:\n                    decodedMsg.content.value = TextProposal.decode(decodedMsg.content.value);\n                    break;\n                case ProposalTypes.upgrade:\n                    decodedMsg.content.value = SoftwareUpgradeProposal.decode(\n                        decodedMsg.content.value\n                    );\n                    break;\n                case ProposalTypes.poolSpend:\n                    decodedMsg.content.value = CommunityPoolSpendProposal.decode(\n                        decodedMsg.content.value\n                    );\n                    break;\n                case ProposalTypes.paramChange:\n                    decodedMsg.content.value = ParameterChangeProposal.decode(\n                        decodedMsg.content.value\n                    );\n                    break;\n                default:\n                    decodedMsg.content.value.title = \"ERROR: Failed to decode\";\n                    decodedMsg.content.value.description = \"ERROR: Failed to decode\";\n                    break;\n            }\n            parsedData = decodedMsg;\n        }\n    }\n\n    return parsedData;\n};\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\n\nexport const isAuthzEnabled = async (rpc: string): Promise<boolean> => {\n    try {\n        const moduleList = await getModulesList(rpc);\n        return moduleList.includes(\"authz\");\n    } catch (error) {\n        console.error(\"Error fetching genesis\");\n        return false;\n    }\n};\n\nexport const getVersion = async (rpc: string): Promise<SdkVersions> => {\n    const { data } = await axios.get(`${rpc}/abci_query?path=\"app/version\"`);\n    console.log(\"v resp\", data);\n    return data;\n};\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"cosmos.params.v1beta1\";\n\n/** ParameterChangeProposal defines a proposal to change one or more parameters. */\nexport interface ParameterChangeProposal {\n    title: string;\n    description: string;\n    changes: ParamChange[];\n}\n\n/**\n * ParamChange defines an individual parameter change, for use in\n * ParameterChangeProposal.\n */\nexport interface ParamChange {\n    subspace: string;\n    key: string;\n    value: string;\n}\n\nconst baseParameterChangeProposal: object = { title: \"\", description: \"\" };\n\nexport const ParameterChangeProposal = {\n    encode(message: ParameterChangeProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        for (const v of message.changes) {\n            ParamChange.encode(v!, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): ParameterChangeProposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseParameterChangeProposal\n        } as ParameterChangeProposal;\n        message.changes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.changes.push(ParamChange.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): ParameterChangeProposal {\n        const message = {\n            ...baseParameterChangeProposal\n        } as ParameterChangeProposal;\n        message.changes = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        if (object.changes !== undefined && object.changes !== null) {\n            for (const e of object.changes) {\n                message.changes.push(ParamChange.fromJSON(e));\n            }\n        }\n        return message;\n    },\n\n    toJSON(message: ParameterChangeProposal): unknown {\n        const obj: any = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        if (message.changes) {\n            obj.changes = message.changes.map((e) => (e ? ParamChange.toJSON(e) : undefined));\n        } else {\n            obj.changes = [];\n        }\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<ParameterChangeProposal>): ParameterChangeProposal {\n        const message = {\n            ...baseParameterChangeProposal\n        } as ParameterChangeProposal;\n        message.changes = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        if (object.changes !== undefined && object.changes !== null) {\n            for (const e of object.changes) {\n                message.changes.push(ParamChange.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n\nconst baseParamChange: object = { subspace: \"\", key: \"\", value: \"\" };\n\nexport const ParamChange = {\n    encode(message: ParamChange, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.subspace !== \"\") {\n            writer.uint32(10).string(message.subspace);\n        }\n        if (message.key !== \"\") {\n            writer.uint32(18).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(26).string(message.value);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): ParamChange {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParamChange } as ParamChange;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subspace = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.string();\n                    break;\n                case 3:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): ParamChange {\n        const message = { ...baseParamChange } as ParamChange;\n        if (object.subspace !== undefined && object.subspace !== null) {\n            message.subspace = String(object.subspace);\n        } else {\n            message.subspace = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        } else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        } else {\n            message.value = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: ParamChange): unknown {\n        const obj: any = {};\n        message.subspace !== undefined && (obj.subspace = message.subspace);\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<ParamChange>): ParamChange {\n        const message = { ...baseParamChange } as ParamChange;\n        if (object.subspace !== undefined && object.subspace !== null) {\n            message.subspace = object.subspace;\n        } else {\n            message.subspace = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        } else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        } else {\n            message.value = \"\";\n        }\n        return message;\n    }\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setModule } from \"../redux/action-creator/settings\";\nimport { useTypedSelector } from \"../redux/useTypedSelector\";\nimport { ModuleNames } from \"../types/settings\";\nimport { adminModuleConnected } from \"../utills/helper\";\n\nexport function useAdminConnection(): boolean {\n    const [admConnected, setAdmConnected] = useState(false);\n    const dispatch = useDispatch();\n    const { rpc } = useTypedSelector((state) => state.settings);\n\n    const updateConnection = async () => {\n        const conn = await adminModuleConnected(rpc);\n        setAdmConnected(conn);\n\n        if (!conn) {\n            dispatch(setModule(ModuleNames.gov));\n        }\n    };\n\n    useEffect(() => {\n        updateConnection();\n    }, [rpc]);\n\n    return useMemo(() => admConnected, [admConnected]);\n}\n","import { useEffect, useState } from \"react\";\nimport { useTypedSelector } from \"../redux/useTypedSelector\";\nimport { isAuthzEnabled } from \"../utills/helper\";\n\nexport const useAuthzConnected = () => {\n    const { rpc } = useTypedSelector((state) => state.settings);\n    const [connected, setConnected] = useState(false);\n\n    async function checkCon() {\n        const con = await isAuthzEnabled(rpc);\n        setConnected(con);\n    }\n\n    useEffect(() => {\n        checkCon();\n    }, [rpc]);\n\n    return connected;\n};\n","import { Keplr } from \"@keplr-wallet/types\";\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\n\nexport interface WalletState {\n    keplr: Keplr | null;\n    isConnected: boolean;\n    stargateClient: SigningStargateClient | null;\n    error: string | null;\n}\n\nexport enum WalletActionTypes {\n    WALLET_CONNECT = \"WALLET_CONNECT\",\n    WALLET_DISCONNECT = \"WALLET_DISCONNECT\",\n    WALLET_SUCCESS = \"WALLET_SUCCESS\",\n    WALLET_ERROR = \"WALLET_ERROR\"\n}\n\ninterface WalletConnectAction {\n    type: WalletActionTypes.WALLET_CONNECT;\n}\n\ninterface WalletDisconnectAction {\n    type: WalletActionTypes.WALLET_DISCONNECT;\n}\n\ninterface WalletSuccessAction {\n    type: WalletActionTypes.WALLET_SUCCESS;\n    payload: { keplr: Keplr; stargateClient: SigningStargateClient };\n}\n\ninterface WalletErrorAction {\n    type: WalletActionTypes.WALLET_ERROR;\n    payload: string;\n}\n\nexport type WalletAction =\n    | WalletConnectAction\n    | WalletDisconnectAction\n    | WalletSuccessAction\n    | WalletErrorAction;\n","const routes = {\n    home: \"/admin-module/\",\n    reviewState: \"/admin-module/reviewState\",\n    proposals: \"/admin-module/proposals\",\n    proposalItem: \"/admin-module/proposals/:id\",\n    adminModule: \"/admin-module/adminModule\",\n    submitProposal: \"/admin-module/submit-proposal\",\n    adminList: \"/admin-module/admin-list\",\n    authz: \"/admin-module/authz\",\n    settings: \"/admin-module/settings\"\n};\n\nexport { routes };\n","import { CoinPretty, Dec } from \"@keplr-wallet/unit\";\nimport { chainInfo } from \"../config\";\n\nexport const toPrettyCoin = (\n    amount: string | Dec,\n    denom: string = chainInfo.currencies[0].coinMinimalDenom\n): CoinPretty => {\n    return new CoinPretty(chainInfo.currencies[0], new Dec(amount.toString()));\n};\n","import { BankExtension, LcdClient } from \"@cosmjs/launchpad\";\nimport { getKeplrFromWindow } from \"@keplr-wallet/stores\";\nimport { Keplr } from \"@keplr-wallet/types\";\nimport { chainInfo } from \"../../config\";\n// import { lcdClient } from \"../index\";\nimport { toPrettyCoin } from \"../../utills/toPrettyCoin\";\n\nexport const getKeplr = getKeplrFromWindow;\n\nexport const getAccountName = async (keplr: Keplr, chainId: string): Promise<string> => {\n    const key = await keplr.getKey(chainId);\n    return key.name;\n};\n\nexport const getWalletAddress = async (keplr: Keplr, chainId: string): Promise<string> => {\n    const key = await keplr.getKey(chainId);\n    return key.bech32Address;\n};\n\nexport const getBalance = async (\n    keplr: Keplr,\n    walletAddress: string,\n    lcdClient: LcdClient & BankExtension\n): Promise<string> => {\n    const coins = await lcdClient.bank.balances(walletAddress).then((data) => data.result);\n    const res = coins.find((c) => c.denom === chainInfo.stakeCurrency.coinMinimalDenom);\n    return toPrettyCoin(res?.amount || \"0\")\n        .trim(true)\n        .toString();\n};\n","import { getKeplr } from \"./keplr\";\nimport { chainInfo } from \"../config\";\nimport {\n    LcdClient,\n    setupAuthExtension,\n    setupBankExtension,\n    setupDistributionExtension,\n    setupGovExtension,\n    setupMintExtension,\n    setupSlashingExtension,\n    setupStakingExtension,\n    setupSupplyExtension\n} from \"@cosmjs/launchpad\";\n\nconst lcdClient = LcdClient.withExtensions(\n    { apiUrl: chainInfo.rest },\n    setupAuthExtension,\n    setupBankExtension,\n    setupDistributionExtension,\n    setupGovExtension,\n    setupMintExtension,\n    setupSlashingExtension,\n    setupStakingExtension,\n    setupSupplyExtension\n);\n\nexport { lcdClient, getKeplr };\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { VoteOption, voteOptionFromJSON, voteOptionToJSON } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\n\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n\n/**\n * MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary\n * proposal Content.\n */\nexport interface MsgSubmitProposal {\n    content?: Any;\n    initialDeposit: Coin[];\n    proposer: string;\n}\n\n/** MsgSubmitProposalResponse defines the Msg/SubmitProposal response type. */\nexport interface MsgSubmitProposalResponse {\n    proposalId: Long;\n}\n\n/** MsgVote defines a message to cast a vote. */\nexport interface MsgVote {\n    proposalId: Long;\n    voter: string;\n    option: VoteOption;\n}\n\n/** MsgVoteResponse defines the Msg/Vote response type. */\nexport interface MsgVoteResponse {}\n\n/** MsgDeposit defines a message to submit a deposit to an existing proposal. */\nexport interface MsgDeposit {\n    proposalId: Long;\n    depositor: string;\n    amount: Coin[];\n}\n\n/** MsgDepositResponse defines the Msg/Deposit response type. */\nexport interface MsgDepositResponse {}\n\nconst baseMsgSubmitProposal: object = { proposer: \"\" };\n\nexport const MsgSubmitProposal = {\n    encode(message: MsgSubmitProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSubmitProposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal } as MsgSubmitProposal;\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgSubmitProposal {\n        const message = { ...baseMsgSubmitProposal } as MsgSubmitProposal;\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        } else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: MsgSubmitProposal): unknown {\n        const obj: any = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) =>\n                e ? Coin.toJSON(e) : undefined\n            );\n        } else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgSubmitProposal>): MsgSubmitProposal {\n        const message = { ...baseMsgSubmitProposal } as MsgSubmitProposal;\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        } else {\n            message.proposer = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseMsgSubmitProposalResponse: object = { proposalId: Long.UZERO };\n\nexport const MsgSubmitProposalResponse = {\n    encode(\n        message: MsgSubmitProposalResponse,\n        writer: _m0.Writer = _m0.Writer.create()\n    ): _m0.Writer {\n        if (!message.proposalId.isZero()) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSubmitProposalResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        } as MsgSubmitProposalResponse;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64() as Long;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgSubmitProposalResponse {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        } as MsgSubmitProposalResponse;\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Long.fromString(object.proposalId);\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        return message;\n    },\n\n    toJSON(message: MsgSubmitProposalResponse): unknown {\n        const obj: any = {};\n        message.proposalId !== undefined &&\n            (obj.proposalId = (message.proposalId || Long.UZERO).toString());\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgSubmitProposalResponse>): MsgSubmitProposalResponse {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        } as MsgSubmitProposalResponse;\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId as Long;\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        return message;\n    }\n};\n\nconst baseMsgVote: object = { proposalId: Long.UZERO, voter: \"\", option: 0 };\n\nexport const MsgVote = {\n    encode(message: MsgVote, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.proposalId.isZero()) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgVote {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote } as MsgVote;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64() as Long;\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgVote {\n        const message = { ...baseMsgVote } as MsgVote;\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Long.fromString(object.proposalId);\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        } else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        } else {\n            message.option = 0;\n        }\n        return message;\n    },\n\n    toJSON(message: MsgVote): unknown {\n        const obj: any = {};\n        message.proposalId !== undefined &&\n            (obj.proposalId = (message.proposalId || Long.UZERO).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgVote>): MsgVote {\n        const message = { ...baseMsgVote } as MsgVote;\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId as Long;\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        } else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        } else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\n\nconst baseMsgVoteResponse: object = {};\n\nexport const MsgVoteResponse = {\n    encode(_: MsgVoteResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgVoteResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse } as MsgVoteResponse;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(_: any): MsgVoteResponse {\n        const message = { ...baseMsgVoteResponse } as MsgVoteResponse;\n        return message;\n    },\n\n    toJSON(_: MsgVoteResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n\n    fromPartial(_: DeepPartial<MsgVoteResponse>): MsgVoteResponse {\n        const message = { ...baseMsgVoteResponse } as MsgVoteResponse;\n        return message;\n    }\n};\n\nconst baseMsgDeposit: object = { proposalId: Long.UZERO, depositor: \"\" };\n\nexport const MsgDeposit = {\n    encode(message: MsgDeposit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.proposalId.isZero()) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v!, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeposit {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit } as MsgDeposit;\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64() as Long;\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgDeposit {\n        const message = { ...baseMsgDeposit } as MsgDeposit;\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Long.fromString(object.proposalId);\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        } else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n\n    toJSON(message: MsgDeposit): unknown {\n        const obj: any = {};\n        message.proposalId !== undefined &&\n            (obj.proposalId = (message.proposalId || Long.UZERO).toString());\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        } else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgDeposit>): MsgDeposit {\n        const message = { ...baseMsgDeposit } as MsgDeposit;\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId as Long;\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        } else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n\nconst baseMsgDepositResponse: object = {};\n\nexport const MsgDepositResponse = {\n    encode(_: MsgDepositResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDepositResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse } as MsgDepositResponse;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(_: any): MsgDepositResponse {\n        const message = { ...baseMsgDepositResponse } as MsgDepositResponse;\n        return message;\n    },\n\n    toJSON(_: MsgDepositResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n\n    fromPartial(_: DeepPartial<MsgDepositResponse>): MsgDepositResponse {\n        const message = { ...baseMsgDepositResponse } as MsgDepositResponse;\n        return message;\n    }\n};\n\n/** Msg defines the bank Msg service. */\nexport interface Msg {\n    /** SubmitProposal defines a method to create new proposal given a content. */\n    SubmitProposal(request: MsgSubmitProposal): Promise<MsgSubmitProposalResponse>;\n    /** Vote defines a method to add a vote on a specific proposal. */\n    Vote(request: MsgVote): Promise<MsgVoteResponse>;\n    /** Deposit defines a method to add deposit on a specific proposal. */\n    Deposit(request: MsgDeposit): Promise<MsgDepositResponse>;\n}\n\nexport class MsgClientImpl implements Msg {\n    private readonly rpc: Rpc;\n    constructor(rpc: Rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request: MsgSubmitProposal): Promise<MsgSubmitProposalResponse> {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new _m0.Reader(data)));\n    }\n\n    Vote(request: MsgVote): Promise<MsgVoteResponse> {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new _m0.Reader(data)));\n    }\n\n    Deposit(request: MsgDeposit): Promise<MsgDepositResponse> {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new _m0.Reader(data)));\n    }\n}\n\ninterface Rpc {\n    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","import { Dispatch } from \"redux\";\nimport { WalletAction, WalletActionTypes } from \"../../types/wallet\";\nimport { getKeplr } from \"../../cosmos\";\nimport { defaultRegistryTypes, SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport {\n    MsgAddAdmin,\n    MsgDeleteAdmin,\n    MsgSubmitProposal\n} from \"../../cosmos/codec/cosmos/adminmodule/adminmodule/tx\";\n\nimport { MsgSubmitProposal as MsgSubmitProposalGov } from \"../../cosmos/codec/cosmos/gov/v1beta1/tx\";\n\nimport { ChainInfo } from \"@keplr-wallet/types\";\nimport { chainInfo } from \"../../config\";\nimport { MsgGrant, MsgRevoke } from \"../../cosmos/codec/cosmos/authz/tx\";\n\nexport const connectWallet = (rpc: string, rest: string, chainId: string, chainName: string) => {\n    return async (dispatch: Dispatch<WalletAction>) => {\n        try {\n            dispatch({ type: WalletActionTypes.WALLET_CONNECT });\n\n            const updatedChainInfo: ChainInfo = {\n                ...chainInfo,\n                rpc,\n                rest,\n                chainId,\n                chainName\n            };\n\n            const keplr = await getKeplr();\n            if (!keplr) {\n                throw new Error(\"Keplr extension not found\");\n            }\n\n            await keplr.experimentalSuggestChain(updatedChainInfo);\n            await keplr.enable(updatedChainInfo.chainId);\n\n            const registry = new Registry();\n\n            registry.register(\n                \"/cosmos.adminmodule.adminmodule.MsgSubmitProposal\",\n                MsgSubmitProposal\n            );\n            registry.register(\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposalGov);\n            registry.register(\"/cosmos.adminmodule.adminmodule.MsgAddAdmin\", MsgAddAdmin);\n            registry.register(\"/cosmos.adminmodule.adminmodule.MsgDeleteAdmin\", MsgDeleteAdmin);\n\n            registry.register(\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant);\n            registry.register(\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke);\n\n            defaultRegistryTypes.forEach((v) => {\n                registry.register(v[0], v[1]);\n            });\n\n            const offlineSigner = keplr.getOfflineSigner(updatedChainInfo.chainId);\n\n            const stargateClient = await SigningStargateClient.connectWithSigner(\n                updatedChainInfo.rpc,\n                offlineSigner,\n                {\n                    registry: registry\n                }\n            );\n\n            dispatch({\n                type: WalletActionTypes.WALLET_SUCCESS,\n                payload: { keplr, stargateClient }\n            });\n        } catch (e) {\n            dispatch({ type: WalletActionTypes.WALLET_ERROR, payload: e.message || \"error\" });\n        }\n    };\n};\n\nexport const disconnectWallet = () => {\n    return { type: WalletActionTypes.WALLET_DISCONNECT };\n};\n","import { useCallback, useEffect, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../redux/useTypedSelector\";\nimport { connectWallet, disconnectWallet } from \"../redux/action-creator/wallet\";\n\nexport const KeyAccountAutoConnect = \"account_auto_connect\";\n\nexport function useAccountConnection() {\n    const dispatch = useDispatch();\n    const { isConnected } = useTypedSelector((state) => state.wallet);\n    const { settings } = useTypedSelector((state) => state);\n\n    const shouldAutoConnectAccount = localStorage?.getItem(KeyAccountAutoConnect) != null;\n\n    const disconnectAccount = useCallback(() => {\n        localStorage?.removeItem(KeyAccountAutoConnect);\n        dispatch(disconnectWallet());\n    }, [dispatch]);\n\n    const connectAccount = useCallback(() => {\n        localStorage?.setItem(KeyAccountAutoConnect, \"true\");\n        dispatch(connectWallet(settings.rpc, settings.rest, settings.chainId, settings.chainName));\n    }, [dispatch]);\n\n    useEffect(() => {\n        // Log in automatically if you have not logged out after logging in earlier.\n        if (shouldAutoConnectAccount && !isConnected) {\n            dispatch(\n                connectWallet(settings.rpc, settings.rest, settings.chainId, settings.chainName)\n            );\n        }\n    }, [dispatch, isConnected]);\n\n    return useMemo(() => {\n        return {\n            isConnected,\n            disconnectAccount,\n            connectAccount\n        };\n    }, [connectAccount, disconnectAccount, isConnected]);\n}\n","export interface ReviewChangesState {\n    loading: boolean;\n    error: string | null;\n    modules: IModules;\n}\n\nexport enum ReviewChangesActionTypes {\n    SET_PARAMS = \"SET_PARAMS\",\n    SET_LOADING = \"SET_LOADING\",\n    ERROR = \"ERROR\",\n    CLEAR_ERROR = \"CLEAR_ERROR\"\n}\n\nexport type ReviewChangesActions = FetchAction | SetLoadingAction | ErrorAction | ClearErrorAction;\n\nexport interface FetchAction {\n    type: ReviewChangesActionTypes.SET_PARAMS;\n    payload: {\n        bank: BankParams;\n        distribution: DistributionParams;\n        gov: GovParams;\n        slashing: SlashingParams;\n        staking: StakingParams;\n    };\n}\n\nexport interface SetLoadingAction {\n    type: ReviewChangesActionTypes.SET_LOADING;\n    payload: { loading: boolean };\n}\n\nexport interface ErrorAction {\n    type: ReviewChangesActionTypes.ERROR;\n    payload: { error: string };\n}\n\nexport interface ClearErrorAction {\n    type: ReviewChangesActionTypes.CLEAR_ERROR;\n}\n\nexport interface IModules {\n    bank: BankParams;\n    distribution: DistributionParams;\n    gov: GovParams;\n    slashing: SlashingParams;\n    staking: StakingParams;\n}\n\nexport interface BankParams {\n    send_enabled: {\n        denom: string;\n        enabled: boolean;\n    }[];\n    default_send_enabled: boolean;\n}\n\nexport interface DistributionParams {\n    community_tax: string;\n    base_proposer_reward: string;\n    bonus_proposer_reward: string;\n    withdraw_addr_enabled: boolean;\n}\n\nexport interface GovParams {\n    voting_params: {\n        voting_period: string;\n    };\n    deposit_params: {\n        min_deposit: {\n            denom: string;\n            amount: string;\n        }[];\n        max_deposit_period: string;\n    };\n    tally_params: {\n        quorum: string;\n        threshold: string;\n        veto_threshold: string;\n    };\n}\n\nexport interface SlashingParams {\n    signed_blocks_window: string;\n    min_signed_per_window: string;\n    downtime_jail_duration: string;\n    slash_fraction_double_sign: string;\n    slash_fraction_downtime: string;\n}\n\nexport interface StakingParams {\n    unbonding_time: string;\n    max_validators: number;\n    max_entries: number;\n    historical_entries: number;\n    bond_denom: string;\n}\n","import React from \"react\";\nimport { PulseLoader } from \"react-spinners\";\n\nconst Spinner = () => {\n    return <PulseLoader size={7} />;\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from \"react\";\nimport { useAccountConnection } from \"../../../hooks/useAccountConnection\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\nimport { getAccountName, getBalance, getWalletAddress } from \"../../../cosmos/keplr\";\nimport Spinner from \"../../Loader/Spinner\";\n\nconst SidebarBottom = () => {\n    const { isConnected, connectAccount, disconnectAccount } = useAccountConnection();\n    const { keplr, error } = useTypedSelector((state) => state.wallet);\n    const { settings } = useTypedSelector((state) => state);\n\n    const [coin, setCoin] = useState<string | null>(null);\n    const [name, setName] = useState<string | null>(null);\n    useEffect(() => {\n        async function setData() {\n            if (isConnected && keplr) {\n                setName(await getAccountName(keplr, settings.chainId));\n                setCoin(\n                    await getBalance(\n                        keplr,\n                        await getWalletAddress(keplr, settings.chainId),\n                        settings.lcdClient\n                    )\n                );\n            }\n        }\n\n        setData();\n\n        return () => {\n            setCoin(null);\n            setName(null);\n        };\n    }, [keplr, isConnected]);\n\n    return (\n        <div className=\"sidebar-bottom\">\n            <div className=\"container\">\n                {isConnected ? (\n                    <div>\n                        <div className=\"account-data\">\n                            <p className=\"account-name\">{name || <Spinner />}</p>\n                            <p className=\"amount\">{coin || <Spinner />}</p>\n                        </div>\n\n                        <button className=\"btn-disconnect\" onClick={disconnectAccount}>\n                            <p>Sign Out</p>\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <p className=\"connect-error\">{error}</p>\n                        <button className=\"btn-connect\" onClick={connectAccount}>\n                            <p>Connect Wallet</p>\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SidebarBottom;\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { useAdminConnection } from \"../../hooks/useAdminConnection\";\nimport { useAuthzConnected } from \"../../hooks/useAuthzEnabled\";\nimport { routes } from \"../../router\";\nimport SidebarBottom from \"./SidebarBottom/SidebarBottom\";\n\nconst active = {\n    // color: '#ff0000',\n    fontWeight: 700,\n    boxShadow: \"0 0 20px rgba(29, 29, 29, 0.13)\",\n    borderLeft: \"3px solid #56CCF2\",\n    color: \"black\"\n};\n\nconst SideBar: React.FC = () => {\n    const admConnected = useAdminConnection();\n    const authzConnected = useAuthzConnected();\n\n    return (\n        <div className=\"sidebar\">\n            <ul className=\"sidebar-list\">\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.reviewState} activeStyle={active}>\n                        Review state\n                    </NavLink>\n                </li>\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.proposals} activeStyle={active}>\n                        Proposals\n                    </NavLink>\n                </li>\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.submitProposal} activeStyle={active}>\n                        Submit proposal\n                    </NavLink>\n                </li>\n                {admConnected && (\n                    <li className=\"sidebar-item\">\n                        <NavLink to={routes.adminList} activeStyle={active}>\n                            Admin list\n                        </NavLink>\n                    </li>\n                )}\n\n                {/* <li className=\"sidebar-item\">\n                    <NavLink to={routes.adminModule} activeStyle={active}>\n                        Admin Module\n                    </NavLink>\n\n                </li> */}\n\n                {authzConnected && (\n                    <li className=\"sidebar-item\">\n                        <NavLink to={routes.authz} activeStyle={active}>\n                            Authz\n                        </NavLink>\n                    </li>\n                )}\n\n                <li className=\"sidebar-item\">\n                    <NavLink to={routes.settings} activeStyle={active}>\n                        Settings\n                    </NavLink>\n                </li>\n            </ul>\n            <SidebarBottom />\n        </div>\n    );\n};\n\nexport const Sidebar = withRouter(SideBar);\n","import React, { FunctionComponent } from \"react\";\nimport { Sidebar } from \"./SideBar\";\n\nconst RouteWrapper: FunctionComponent = ({ children }) => {\n    return (\n        <div className=\"router-wrapper\">\n            <Sidebar />\n            {children}\n        </div>\n    );\n};\n\nexport default RouteWrapper;\n","import { Dispatch } from \"redux\";\nimport { updateSettings } from \"../redux/action-creator/settings\";\nimport { connectWallet, disconnectWallet } from \"../redux/action-creator/wallet\";\nimport { getLocalSettings } from \"./localStorage\";\n\nexport const initSettings = (dispatch: Dispatch<any>) => {\n    const settings = getLocalSettings();\n    dispatch(\n        updateSettings({\n            rpc: settings.rpc,\n            rest: settings.rest,\n            chainId: settings.chainId,\n            chainName: settings.chainName\n        })\n    );\n\n    disconnectWallet();\n    dispatch(connectWallet(settings.rpc, settings.rest, settings.chainId, settings.chainName));\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { initSettings } from \"../../utills/initSettings\";\n\nconst Home = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        initSettings(dispatch);\n    }, []);\n\n    return (\n        <div>\n            <h1>Home Page</h1>\n        </div>\n    );\n};\n\nexport default Home;\n","import { Dispatch } from \"redux\";\nimport {\n    ReviewChangesActions,\n    ReviewChangesActionTypes,\n    ClearErrorAction,\n    ErrorAction\n} from \"../../types/reviewChanges\";\nimport { RootState } from \"../reducers\";\n// import { Registry } from \"@cosmjs/proto-signing\";\n\nexport const sendErrorNotification = (\n    errMessage: string,\n    dispatch: Dispatch<ErrorAction | ClearErrorAction>\n): void => {\n    dispatch({\n        type: ReviewChangesActionTypes.ERROR,\n        payload: { error: errMessage }\n    });\n    setTimeout(() => {\n        dispatch({\n            type: ReviewChangesActionTypes.CLEAR_ERROR\n        });\n    }, 5000);\n};\n\nexport const fetchParamsList = () => {\n    return async (\n        dispatch: Dispatch<ReviewChangesActions>,\n        getState: () => RootState\n    ): Promise<void> => {\n        const { settings } = getState();\n        try {\n            dispatch({ type: ReviewChangesActionTypes.SET_LOADING, payload: { loading: true } });\n\n            const bank = await settings.lcdClient.get(\"/cosmos/bank/v1beta1/params\");\n\n            const distribution = await settings.lcdClient.get(\n                \"/cosmos/distribution/v1beta1/params\"\n            );\n\n            const govVoting = await settings.lcdClient.get(\"/cosmos/gov/v1beta1/params/voting\");\n            const govDeposit = await settings.lcdClient.get(\"/cosmos/gov/v1beta1/params/deposit\");\n            const govTally = await settings.lcdClient.get(\"/cosmos/gov/v1beta1/params/tallying\");\n\n            const slashing = await settings.lcdClient.get(\"/cosmos/slashing/v1beta1/params\");\n\n            const staking = await settings.lcdClient.get(\"/cosmos/staking/v1beta1/params\");\n\n            dispatch({\n                type: ReviewChangesActionTypes.SET_PARAMS,\n                payload: {\n                    bank: bank.params,\n                    distribution: distribution.params,\n                    gov: {\n                        voting_params: govVoting.voting_params,\n                        deposit_params: govDeposit.deposit_params,\n                        tally_params: govTally.tally_params\n                    },\n                    slashing: slashing.params,\n                    staking: staking.params\n                }\n            });\n\n            dispatch({ type: ReviewChangesActionTypes.SET_LOADING, payload: { loading: false } });\n        } catch (error) {\n            console.log(\"[Admin fetching error]\", error);\n            sendErrorNotification(\"Error fetching admins: \" + error.message, dispatch);\n        }\n    };\n};\n","import React from \"react\";\n\ninterface ModuleSectionProps {\n    title: string;\n    children: JSX.Element[] | JSX.Element;\n}\n\nconst ModuleSection = ({ title, children }: ModuleSectionProps): JSX.Element => {\n    return (\n        <div className=\"review-changes__module-container\">\n            <div className=\"review-changes__module-container__title\">{title}</div>\n            {children}\n        </div>\n    );\n};\n\nexport default ModuleSection;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchParamsList } from \"../../redux/action-creator/reviewChanges\";\nimport { updateSettings } from \"../../redux/action-creator/settings\";\nimport { connectWallet, disconnectWallet } from \"../../redux/action-creator/wallet\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { initSettings } from \"../../utills/initSettings\";\nimport { getLocalSettings } from \"../../utills/localStorage\";\nimport Spinner from \"../Loader/Spinner\";\nimport ModuleSection from \"./ModuleSection\";\n\nconst ReviewState = () => {\n    const dispatch = useDispatch();\n    const { bank, distribution, gov, slashing, staking } = useTypedSelector(\n        (state) => state.reviewChanges.modules\n    );\n    const { error, loading } = useTypedSelector((state) => state.reviewChanges);\n\n    useEffect(() => {\n        initSettings(dispatch);\n\n        dispatch(fetchParamsList());\n    }, []);\n    return (\n        <div className=\"review-changes\">\n            <h4 className=\"review-changes__title\">Review State Changes {loading && <Spinner />}</h4>\n            {error}\n            <div className=\"review-changes__list\">\n                <ModuleSection title=\"Bank\">\n                    <ul>\n                        <li>Default Send Enabled: {bank?.default_send_enabled.toString()}</li>\n                        <li>Send Enabled(array): {bank?.send_enabled?.toString()}</li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Distribution\">\n                    <ul>\n                        <li>Base Proposer Reward: {distribution?.base_proposer_reward}</li>\n                        <li>Bonus Proposer Reward: {distribution?.bonus_proposer_reward}</li>\n                        <li>Community Tax: {distribution?.community_tax}</li>\n                        <li>\n                            Withdraw Addr Enabled: {distribution?.withdraw_addr_enabled?.toString()}\n                        </li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Governance\">\n                    <ul>\n                        <li>\n                            Deposit Params:\n                            <ul>\n                                <li>\n                                    Min Deposit:{\" \"}\n                                    <ul>\n                                        {gov?.deposit_params?.min_deposit?.map((d, i) => (\n                                            <div key={\"gov-param\" + i}>\n                                                <li>Amount: {d.amount}</li>\n                                                <li>Denom: {d.denom}</li>\n                                            </div>\n                                        ))}\n                                    </ul>{\" \"}\n                                </li>\n                                <li>\n                                    Max Deposit Period: {gov?.deposit_params?.max_deposit_period}\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            Voting Params:\n                            <ul>\n                                <li>Voting Period: {gov?.voting_params?.voting_period}</li>\n                            </ul>\n                        </li>\n                        <li>\n                            Tallying Params:\n                            <ul>\n                                <li>Quorum: {gov?.tally_params?.quorum}</li>\n                                <li>Threshold: {gov?.tally_params?.threshold}</li>\n                                <li>Veto Theshold: {gov?.tally_params?.veto_threshold}</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Slashing\">\n                    <ul>\n                        <li>Downtime Jail Duration: {slashing?.downtime_jail_duration}</li>\n                        <li>Min Signed Per Window: {slashing?.min_signed_per_window}</li>\n                        <li>Signed Blocks Window: {slashing?.signed_blocks_window}</li>\n                        <li>Slash Fraction Double Sign: {slashing?.slash_fraction_double_sign}</li>\n                        <li>Slash Fraction Downtime: {slashing?.slash_fraction_downtime}</li>\n                    </ul>\n                </ModuleSection>\n\n                <ModuleSection title=\"Staking\">\n                    <ul>\n                        <li>Bond Denom: {staking?.bond_denom}</li>\n                        <li>Historical Entries: {staking?.historical_entries}</li>\n                        <li>Max Entries: {staking?.max_entries}</li>\n                        <li>Max Validators: {staking?.max_validators}</li>\n                        <li>Unbonding Time: {staking?.unbonding_time}</li>\n                    </ul>\n                </ModuleSection>\n            </div>\n        </div>\n    );\n};\n\nexport default ReviewState;\n","export const toPrettyDate = (date: string): string => {\n    const dateString = new Date(date).toUTCString();\n    const indexDayOfWeek = dateString.indexOf(\", \");\n    return dateString.substr(indexDayOfWeek + 2);\n};\n","import React from \"react\";\nimport { Proposal } from \"@cosmjs/launchpad/build/lcdapi/gov\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../router\";\nimport { toPrettyDate } from \"../../utills/toPrettyDate\";\nimport { ArchivedProposal } from \"../../types/proposal\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { ModuleNames } from \"../../types/settings\";\n\ninterface ProposalItemProps {\n    proposal: ArchivedProposal;\n}\n\nconst ProposalItem: React.FC<ProposalItemProps> = ({\n    proposal: { proposal_id, submit_time, content, height }\n}) => {\n    const settings = useTypedSelector((state) => state.settings);\n\n    const typeShort = (type: string): string => {\n        const chainIdAndType = type.split(\".\");\n        return chainIdAndType[chainIdAndType.length - 1] || type;\n    };\n    const titleShort = (title: string): string => {\n        return title.length > 70 ? `${title.substr(0, 70)}...` : title;\n    };\n\n    return (\n        <tr>\n            <td>{proposal_id}</td>\n            <td>\n                <NavLink to={`${routes.proposals}/${proposal_id}`}>\n                    {titleShort(content.title)}\n                </NavLink>\n            </td>\n            <td>{typeShort(content[\"@type\"])}</td>\n            <td>\n                {settings.moduleName === ModuleNames.admin ? toPrettyDate(submit_time) : height}\n            </td>\n        </tr>\n    );\n};\n\nexport default ProposalItem;\n","import { Dispatch } from \"redux\";\nimport { ProposalAction, ProposalActionTypes, ArchivedProposal } from \"../../types/proposal\";\nimport { ModuleNames } from \"../../types/settings\";\nimport { getProposalsHistory } from \"../../utills/helper\";\nimport { RootState } from \"../reducers\";\n// import { lcdClient } from \"../../cosmos\";\n\nexport const fetchProposals = () => {\n    return async (dispatch: Dispatch<ProposalAction>, getState: () => RootState) => {\n        const { settings, wallet } = getState();\n        try {\n            if (settings.moduleName === ModuleNames.gov) {\n                if (!wallet.stargateClient) return;\n                dispatch({ type: ProposalActionTypes.PROPOSAL_CALL });\n\n                const proposals = await getProposalsHistory(\n                    settings.rpc,\n                    wallet.stargateClient?.registry\n                );\n                console.log(\"proposals\", proposals);\n\n                const mappedProposals: ArchivedProposal[] = proposals.map((p, i) => ({\n                    proposal_id: (i + 1).toString(),\n                    content: { \"@type\": p.content.typeUrl, ...p.content.value },\n                    submit_time: \"0\",\n                    height: p.height\n                }));\n                dispatch({\n                    type: ProposalActionTypes.PROPOSAL_SUCCESS,\n                    payload: mappedProposals.reverse()\n                });\n            } else {\n                dispatch({ type: ProposalActionTypes.PROPOSAL_CALL });\n                const archivedProposals: { proposals: ArchivedProposal[] } =\n                    await settings.lcdClient.get(\n                        \"/cosmos/adminmodule/adminmodule/archivedproposals\"\n                    );\n                dispatch({\n                    type: ProposalActionTypes.PROPOSAL_SUCCESS,\n                    payload: archivedProposals.proposals.reverse()\n                });\n            }\n        } catch (e) {\n            dispatch({ type: ProposalActionTypes.PROPOSAL_ERROR, payload: e.message || \"error\" });\n        }\n    };\n};\n\n// export const fetchProposalDetail = (id: string) => {\n//     return async (dispatch: Dispatch<ProposalAction>) => {\n//         try {\n//             dispatch({ type: ProposalActionTypes.PROPOSAL_DETAIL_CALL });\n//\n//             const proposer = await lcdClient.gov\n//                 .proposer(id)\n//                 .then((data) => data.result.proposer)\n//                 .catch((e) => null);\n//\n//             const deposits = await lcdClient.gov\n//                 .deposits(id)\n//                 .then((data) => data.result)\n//                 .catch((e) => null);\n//\n//             dispatch({\n//                 type: ProposalActionTypes.PROPOSAL_DETAIL_SUCCESS,\n//                 payload: { proposer, deposits }\n//             });\n//         } catch (e) {\n//             dispatch({\n//                 type: ProposalActionTypes.PROPOSAL_DETAIL_ERROR,\n//                 payload: e.message || \"error\"\n//             });\n//         }\n//     };\n// };\n//\n// export const proposalDetailReset = () => {\n//     return { type: ProposalActionTypes.PROPOSAL_DETAIL_RESET };\n// };\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Switch from \"react-switch\";\nimport { useAdminConnection } from \"../../hooks/useAdminConnection\";\nimport { setModule } from \"../../redux/action-creator/settings\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { ModuleNames } from \"../../types/settings\";\n\nconst ModuleSwitch = () => {\n    const { moduleName } = useTypedSelector((state) => state.settings);\n    const dispatch = useDispatch();\n\n    const [checked, setChecked] = useState(isChecked());\n    const admConnected = useAdminConnection();\n\n    function isChecked(): boolean {\n        return moduleName === ModuleNames.gov;\n    }\n\n    function switchModule(checked: boolean) {\n        setChecked(checked);\n        dispatch(setModule(checked ? ModuleNames.gov : ModuleNames.admin));\n        if (checked) {\n            console.log(\"set to gov module\");\n            return;\n        }\n\n        console.log(\"set to admin module\");\n        return;\n    }\n\n    if (!admConnected) {\n        return null;\n    }\n\n    return (\n        <div className=\"module-switch\">\n            Admin{\" \"}\n            <Switch\n                offColor=\"#FF1919\"\n                onColor=\"#FFA500\"\n                uncheckedIcon={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            height: \"100%\",\n                            fontSize: 15,\n                            color: \"white\",\n                            paddingRight: 2,\n                            fontWeight: \"bold\"\n                        }}>\n                        A\n                    </div>\n                }\n                checkedIcon={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            height: \"100%\",\n                            fontSize: 15,\n                            color: \"white\",\n                            paddingLeft: 2,\n                            fontWeight: \"bold\"\n                        }}>\n                        G\n                    </div>\n                }\n                onChange={switchModule}\n                checked={checked}\n            />{\" \"}\n            Gov\n        </div>\n    );\n};\n\nexport default ModuleSwitch;\n","import React, { useEffect } from \"react\";\nimport ProposalItem from \"./ProposalItem\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchProposals } from \"../../redux/action-creator/proposal\";\nimport Spinner from \"../Loader/Spinner\";\nimport { initSettings } from \"../../utills/initSettings\";\nimport ModuleSwitch from \"../ModuleSwitch/ModuleSwitch\";\nimport { ModuleNames } from \"../../types/settings\";\n\nconst ProposalsPage: React.FC = () => {\n    const { isFetchingProposals, proposals, error } = useTypedSelector((state) => state.proposal);\n    const { stargateClient } = useTypedSelector((state) => state.wallet);\n    const { settings } = useTypedSelector((state) => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        initSettings(dispatch);\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (!stargateClient) {\n            // console.log(\"no client\");\n            return;\n        }\n        // console.log(\"got client\");\n        dispatch(fetchProposals());\n    }, [stargateClient, settings.moduleName]);\n\n    return (\n        <div className=\"proposals\">\n            <div className=\"header\">\n                <h4 className=\"title\">\n                    Proposals\n                    {isFetchingProposals && <Spinner />}\n                </h4>\n\n                <ModuleSwitch />\n            </div>\n\n            <div className=\"container\">\n                {error ? error : null}\n                {proposals && (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Proposal ID</th>\n                                <th>Title</th>\n                                <th>Proposal Type</th>\n                                <th>\n                                    {settings.moduleName === ModuleNames.admin\n                                        ? \"Submit Time\"\n                                        : \"Height\"}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {proposals.map((p) => (\n                                <ProposalItem proposal={p} key={p.proposal_id} />\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ProposalsPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { routes } from \"../../router\";\n\nconst NotFoundPage: React.FC = () => {\n    return (\n        <ul>\n            <h1>Not Found</h1>\n            <NavLink to={routes.home}>Home</NavLink>\n        </ul>\n    );\n};\n\nexport default NotFoundPage;\n","import { useEffect } from \"react\";\n\nexport function ScrollToTopOnMount() {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n\n    return null;\n}\n","import React, { useEffect } from \"react\";\nimport { Markdown } from \"react-showdown\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    // fetchProposalDetail,\n    fetchProposals\n    // proposalDetailReset\n} from \"../../redux/action-creator/proposal\";\nimport { routes } from \"../../router\";\nimport Spinner from \"../Loader/Spinner\";\nimport { Deposit, Tally } from \"@cosmjs/launchpad/build/lcdapi/gov\";\nimport { CoinPretty, Dec } from \"@keplr-wallet/unit\";\nimport { toPrettyDate } from \"../../utills/toPrettyDate\";\nimport { chainInfo } from \"../../config\";\nimport { ScrollToTopOnMount } from \"../ScrollToTopOnMount\";\nimport { toPrettyCoin } from \"../../utills/toPrettyCoin\";\nimport { toProposalStatus } from \"../../utills/toProposalStatus\";\nimport { ParamChange } from \"../../cosmos/codec/cosmos/params/v1beta1/params\";\nimport {\n    isACommunityPoolSpendProposalContent,\n    isAParameterChangeProposalContent\n} from \"../../types/proposal\";\nimport { ModuleNames } from \"../../types/settings\";\n\nconst ProposalDetail: React.FC = () => {\n    const history = useHistory();\n    const {\n        params: { id }\n    } = useRouteMatch<{ id: string }>();\n\n    const { proposals, isFetchingProposals, isFetchingItem, error } = useTypedSelector(\n        (state) => state.proposal\n    );\n    const settings = useTypedSelector((state) => state.settings);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!proposals) {\n            dispatch(fetchProposals());\n        }\n        // dispatch(fetchProposalDetail(id));\n        // return () => {\n        //     dispatch(proposalDetailReset());\n        // };\n    }, [dispatch, id, proposals]);\n\n    const proposal = proposals?.find((p) => p.proposal_id === id);\n    if (!proposal && !isFetchingProposals && proposals) {\n        history.push(routes.proposals);\n    }\n\n    return (\n        <div className={\"item-content\"}>\n            <ScrollToTopOnMount />\n            {isFetchingProposals && <Spinner />}\n            {error}\n            {proposal && (\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <span> Proposal ID</span>\n                            </td>\n                            <td>{proposal.proposal_id}</td>\n                        </tr>\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Proposer</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>*/}\n                        {/*        {isFetchingItem ? (*/}\n                        {/*            <Spinner />*/}\n                        {/*        ) : (*/}\n                        {/*            proposalDetail?.proposer || \"no data\"*/}\n                        {/*        )}*/}\n                        {/*    </td>*/}\n                        {/*</tr>*/}\n\n                        <tr>\n                            <td>\n                                <span>Title</span>\n                            </td>\n                            <td>{proposal.content.title}</td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                <span>Description</span>\n                            </td>\n                            <td>\n                                <Markdown markdown={proposal.content.description} />\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td>\n                                <span>Proposal Type</span>\n                            </td>\n                            <td>{proposal.content[\"@type\"]}</td>\n                        </tr>\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Proposal Status</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toProposalStatus(proposal.proposal_status || proposal.status)}</td>*/}\n                        {/*</tr>*/}\n\n                        {isACommunityPoolSpendProposalContent(proposal.content) && (\n                            <>\n                                <tr>\n                                    <td>\n                                        <span>Recipient</span>\n                                    </td>\n                                    <td>{proposal.content.recipient}</td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <span>Amount</span>\n                                    </td>\n                                    <td>\n                                        {proposal.content.amount.map((am, i) => (\n                                            <li key={i}>\n                                                {toPrettyCoin(am.amount, am.denom).toString()}\n                                            </li>\n                                        ))}\n                                    </td>\n                                </tr>\n                            </>\n                        )}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Deposit</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>*/}\n                        {/*        {isFetchingItem ? (*/}\n                        {/*            <Spinner />*/}\n                        {/*        ) : (*/}\n                        {/*            <Deposits deposits={proposalDetail?.deposits} />*/}\n                        {/*        )}*/}\n                        {/*    </td>*/}\n                        {/*</tr>*/}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Tally Result</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{<TallyResultTable results={proposal.final_tally_result} />}</td>*/}\n                        {/*</tr>*/}\n\n                        {isAParameterChangeProposalContent(proposal.content) && (\n                            <tr>\n                                <td>\n                                    <span>Changes</span>\n                                </td>\n                                <td>\n                                    <ChangesTable changes={proposal.content.changes} />\n                                </td>\n                            </tr>\n                        )}\n\n                        <tr>\n                            <td>\n                                <span>\n                                    {settings.moduleName === ModuleNames.admin\n                                        ? \"Submit Time\"\n                                        : \"Height\"}\n                                </span>\n                            </td>\n                            <td>\n                                {settings.moduleName === ModuleNames.admin\n                                    ? toPrettyDate(proposal.submit_time)\n                                    : proposal.height}\n                            </td>\n                        </tr>\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Deposit End Time</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toPrettyDate(proposal.deposit_end_time)}</td>*/}\n                        {/*</tr>*/}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>Voting Start Time</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toPrettyDate(proposal.voting_start_time)}</td>*/}\n                        {/*</tr>*/}\n\n                        {/*<tr>*/}\n                        {/*    <td>*/}\n                        {/*        <span>End Voting Time</span>*/}\n                        {/*    </td>*/}\n                        {/*    <td>{toPrettyDate(proposal.deposit_end_time)}</td>*/}\n                        {/*</tr>*/}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n};\nconst TallyResultTable: React.FC<{ results: Tally }> = ({ results }) => {\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>Yes</td>\n                    <td>{results.yes}</td>\n                </tr>\n                <tr>\n                    <td>No</td>\n                    <td>{results.no}</td>\n                </tr>\n                <tr>\n                    <td>Abstain</td>\n                    <td>{results.abstain}</td>\n                </tr>\n                <tr>\n                    <td>No with veto</td>\n                    <td>{results.no_with_veto}</td>\n                </tr>\n            </tbody>\n        </table>\n    );\n};\nconst ChangesTable: React.FC<{ changes: ParamChange[] }> = ({ changes }) => {\n    return (\n        <div className=\"change-table\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Subspace</th>\n                        <th>Key</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {changes.map((change, i) => (\n                        <tr key={i}>\n                            <td>{change.subspace}</td>\n                            <td>{change.key}</td>\n                            <td>{change.value}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nconst Deposits: React.FC<{ deposits: readonly Deposit[] | null | undefined }> = ({ deposits }) => {\n    if (!deposits) {\n        return <>no data</>;\n    }\n    const decToCoin = (amount: Dec): string => {\n        return new CoinPretty(chainInfo.currencies[0], amount).trim(true).toString();\n    };\n    let sum: Dec = new Dec(0);\n    deposits.map((d) => d.amount.map((a) => (sum = sum.add(new Dec(a.amount)))));\n\n    return (\n        <div>\n            {decToCoin(sum)}\n            <ol>\n                {deposits.map((d, i) => {\n                    return (\n                        <li key={i}>\n                            <div>{d.depositor}</div>\n                            {d.amount.map((amount, j) => {\n                                return <div key={j}>{decToCoin(new Dec(amount.amount))}</div>;\n                            })}\n                        </li>\n                    );\n                })}\n            </ol>\n        </div>\n    );\n};\n\nexport default ProposalDetail;\n","export interface FetchAction {\n    type: AdminListActionTypes.SET_LIST;\n    payload: { admins: string[] };\n}\n\nexport interface SetLoadingAction {\n    type: AdminListActionTypes.SET_LOADING;\n    payload: { loading: boolean };\n}\n\nexport interface ErrorAction {\n    type: AdminListActionTypes.ERROR;\n    payload: { error: string };\n}\n\nexport interface ClearErrorAction {\n    type: AdminListActionTypes.CLEAR_ERROR;\n}\n\nexport type AdminActions = FetchAction | SetLoadingAction | ErrorAction | ClearErrorAction;\n\nexport enum AdminListActionTypes {\n    SET_LIST = \"SET_LIST\",\n    SET_LOADING = \"SET_LOADING\",\n    ERROR = \"ERROR\",\n    CLEAR_ERROR = \"CLEAR_ERROR\"\n}\n\nexport interface AdminListState {\n    admins: string[];\n    loading: boolean;\n    error: string | null;\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Select from \"react-select\";\nimport { updateSettings } from \"../../redux/action-creator/settings\";\nimport { connectWallet, disconnectWallet } from \"../../redux/action-creator/wallet\";\nimport { remoteSettings } from \"../../types/settings\";\nimport { initSettings } from \"../../utills/initSettings\";\nimport { getLocalSettings, setLocalSettings } from \"../../utills/localStorage\";\n\nconst SettingsPage = () => {\n    const [rest, setRest] = useState(\"\");\n    const [rpc, setRpc] = useState(\"\");\n    const [chainId, setChainId] = useState(\"\");\n    const [chainName, setChainName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    function saveSettings(rest: string, rpc: string, chainId: string, chainName: string) {\n        setLocalSettings({ rest, rpc, chainId, chainName });\n        dispatch(updateSettings({ rpc, rest, chainId, chainName }));\n\n        dispatch(disconnectWallet());\n        dispatch(connectWallet(rpc, rest, chainId, chainName));\n    }\n\n    useEffect(() => {\n        const settings = getLocalSettings();\n        setRest(settings.rest);\n        setRpc(settings.rpc);\n        setChainId(settings.chainId);\n        setChainName(settings.chainName);\n\n        initSettings(dispatch);\n    }, []);\n\n    return (\n        <div className=\"settings-page\">\n            <div className=\"settings-page__header\">Settings</div>\n            <div className=\"settings-page__form\">\n                <label className=\"settings-page__label\" htmlFor=\"rest\">\n                    REST endpoint:\n                    <input\n                        type=\"text\"\n                        name=\"rest\"\n                        id=\"rest\"\n                        className=\"settings-page__input\"\n                        value={rest}\n                        onChange={({ target }) => setRest(target.value)}\n                    />\n                </label>\n\n                <label className=\"settings-page__label\" htmlFor=\"rpc\">\n                    RPC endpoint:\n                    <input\n                        type=\"text\"\n                        name=\"rpc\"\n                        id=\"rpc\"\n                        className=\"settings-page__input\"\n                        value={rpc}\n                        onChange={({ target }) => setRpc(target.value)}\n                    />\n                </label>\n\n                <label className=\"settings-page__label\" htmlFor=\"chainId\">\n                    Chain ID:\n                    <input\n                        type=\"text\"\n                        name=\"chainId\"\n                        id=\"chainId\"\n                        className=\"settings-page__input\"\n                        value={chainId}\n                        onChange={({ target }) => setChainId(target.value)}\n                    />\n                </label>\n\n                <label className=\"settings-page__label\" htmlFor=\"chainName\">\n                    Chain Name:\n                    <input\n                        type=\"text\"\n                        name=\"chainName\"\n                        id=\"chainName\"\n                        className=\"settings-page__input\"\n                        value={chainName}\n                        onChange={({ target }) => setChainName(target.value)}\n                    />\n                </label>\n                <div className=\"settings-page__label\" style={{ width: 350 }}>\n                    Select chain preset:\n                    <Select\n                        onChange={(s) => {\n                            if (s) {\n                                setRest(s.value.rest);\n                                setRpc(s.value.rpc);\n                                setChainId(s.value.chainId);\n                                setChainName(s.value.chainName);\n                                saveSettings(\n                                    s.value.rest,\n                                    s.value.rpc,\n                                    s.value.chainId,\n                                    s.value.chainName\n                                );\n                            }\n                        }}\n                        options={remoteSettings.map((s) => ({ value: s, label: s.chainName }))}\n                    />\n                </div>\n\n                <button\n                    className=\"settings-page__btn\"\n                    onClick={() => saveSettings(rest, rpc, chainId, chainName)}>\n                    Save\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default SettingsPage;\n","import { Dispatch } from \"redux\";\n// import { lcdClient, getKeplr } from \"../../cosmos\";\nimport { Bech32 } from \"@cosmjs/encoding\";\nimport { getWalletAddress } from \"../../cosmos/keplr\";\nimport {\n    AdminActions,\n    AdminListActionTypes,\n    ClearErrorAction,\n    ErrorAction\n} from \"../../types/adminList\";\nimport { isBroadcastTxSuccess, SigningStargateClient } from \"@cosmjs/stargate\";\nimport { chainInfo } from \"../../config\";\nimport { coins } from \"@cosmjs/launchpad\";\nimport { Keplr } from \"@keplr-wallet/types\";\nimport { RootState } from \"../reducers\";\n\nexport const sendErrorNotification = (\n    errMessage: string,\n    dispatch: Dispatch<ErrorAction | ClearErrorAction>\n): void => {\n    dispatch({\n        type: AdminListActionTypes.ERROR,\n        payload: { error: errMessage }\n    });\n    setTimeout(() => {\n        dispatch({\n            type: AdminListActionTypes.CLEAR_ERROR\n        });\n    }, 5000);\n};\n\nexport const fetchAdminList = () => {\n    return async (dispatch: Dispatch<AdminActions>, getState: () => RootState): Promise<void> => {\n        const { settings } = getState();\n        try {\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: true } });\n\n            const adminsResp: { admins: string[] } = await settings.lcdClient.get(\n                \"/cosmos/adminmodule/adminmodule/admins\"\n            );\n\n            dispatch({\n                type: AdminListActionTypes.SET_LIST,\n                payload: { admins: adminsResp.admins }\n            });\n\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n        } catch (error) {\n            console.log(\"[Admin fetching error]\", error);\n            sendErrorNotification(\"Error fetching admins: \" + error.message, dispatch);\n        }\n    };\n};\n\nexport const deleteAdminAction = (\n    adminAddress: string,\n    stargateClient: SigningStargateClient,\n    kepler: Keplr\n) => {\n    return async (dispatch: Dispatch<AdminActions>, getState: () => RootState): Promise<void> => {\n        const { settings } = getState();\n        try {\n            const sender = await getWalletAddress(kepler, settings.chainId);\n\n            const msgDeleteAdminRequest = {\n                admin: adminAddress,\n                creator: sender\n            };\n            const msgAny = {\n                typeUrl: \"/cosmos.adminmodule.adminmodule.MsgDeleteAdmin\",\n                value: msgDeleteAdminRequest\n            };\n\n            const fee = {\n                amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                gas: \"2000000\"\n            };\n\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: true } });\n            const broadcastRes = await stargateClient.signAndBroadcast(sender, [msgAny], fee);\n\n            if (isBroadcastTxSuccess(broadcastRes)) {\n                const adminsResp: { admins: string[] } = await settings.lcdClient.get(\n                    \"/cosmos/adminmodule/adminmodule/admins\"\n                );\n                dispatch({\n                    type: AdminListActionTypes.SET_LIST,\n                    payload: { admins: adminsResp.admins }\n                });\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            } else {\n                sendErrorNotification(\"Error during transaction broadcast\", dispatch);\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            }\n        } catch (error) {\n            console.log(\"[Admin deletion error]\", error);\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            sendErrorNotification(\"Error saving new admin: \" + error.message, dispatch);\n        }\n    };\n};\n\nexport const saveAdminAction = (\n    adminAddress: string,\n    stargateClient: SigningStargateClient,\n    kepler: Keplr\n) => {\n    return async (dispatch: Dispatch<AdminActions>, getState: () => RootState): Promise<void> => {\n        const { settings } = getState();\n        try {\n            // Address validation\n            const resp = Bech32.decode(adminAddress);\n\n            if (kepler) {\n                const sender = await getWalletAddress(kepler, settings.chainId);\n\n                const msgAddAdminRequest = {\n                    admin: adminAddress,\n                    creator: sender\n                };\n                const msgAny = {\n                    typeUrl: \"/cosmos.adminmodule.adminmodule.MsgAddAdmin\",\n                    value: msgAddAdminRequest\n                };\n\n                const fee = {\n                    amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                    gas: \"2000000\"\n                };\n\n                console.log(\"sending\", msgAddAdminRequest);\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: true } });\n                const broadcastRes = await stargateClient.signAndBroadcast(sender, [msgAny], fee);\n\n                if (isBroadcastTxSuccess(broadcastRes)) {\n                    const adminsResp: { admins: string[] } = await settings.lcdClient.get(\n                        \"/cosmos/adminmodule/adminmodule/admins\"\n                    );\n                    dispatch({\n                        type: AdminListActionTypes.SET_LIST,\n                        payload: { admins: adminsResp.admins }\n                    });\n                } else {\n                    sendErrorNotification(\"Error during transaction broadcast\", dispatch);\n                    dispatch({\n                        type: AdminListActionTypes.SET_LOADING,\n                        payload: { loading: false }\n                    });\n                }\n                dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            } else {\n                sendErrorNotification(\"No Keplr wallet logged in\", dispatch);\n            }\n        } catch (error) {\n            console.log(\"[Admin saving error]\", error);\n            dispatch({ type: AdminListActionTypes.SET_LOADING, payload: { loading: false } });\n            sendErrorNotification(\"Error saving new admin: \" + error.message, dispatch);\n        }\n    };\n};\n","import { BroadcastTxSuccess } from \"@cosmjs/stargate/build/stargateclient\";\nimport { Coin } from \"@cosmjs/stargate\";\n\nexport type TBaseSPMsg = { title: string; description: string; deposit: Coin[] };\n\nexport interface SubmitProposalState {\n    broadcastResponse: BroadcastTxSuccess | null;\n    error: string | null;\n    fetching: boolean;\n}\n\nexport enum SubmitProposalTypes {\n    SUBMIT_PROPOSAL_CALL = \"SUBMIT_PROPOSAL_CALL\",\n    SUBMIT_PROPOSAL_SUCCESS = \"SUBMIT_PROPOSAL_SUCCESS\",\n    SUBMIT_PROPOSAL_ERROR = \"SUBMIT_PROPOSAL_ERROR\",\n    SUBMIT_PROPOSAL_RESET = \"SUBMIT_PROPOSAL_RESET\"\n}\n\ninterface SubmitProposalCallAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_CALL;\n}\ninterface SubmitProposalSuccessAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_SUCCESS;\n    payload: BroadcastTxSuccess;\n}\ninterface SubmitProposalErrorAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_ERROR;\n    payload: string;\n}\ninterface SubmitProposalResetAction {\n    type: SubmitProposalTypes.SUBMIT_PROPOSAL_RESET;\n}\n\nexport type SubmitProposalAction =\n    | SubmitProposalCallAction\n    | SubmitProposalSuccessAction\n    | SubmitProposalErrorAction\n    | SubmitProposalResetAction;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteAdminAction } from \"../../../redux/action-creator/adminList\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\n\ninterface AdminDetailProps {\n    accountAddress: string;\n    orderNum: number;\n}\n\nconst AdminDetail = ({ accountAddress, orderNum }: AdminDetailProps) => {\n    const { isConnected, keplr } = useTypedSelector((state) => state.wallet);\n    const dispatch = useDispatch();\n    const { stargateClient } = useTypedSelector((state) => state.wallet);\n\n    function deleteAdmin(address: string) {\n        const res = window.confirm(`Delete \"${address}\"?`);\n        if (res && stargateClient && keplr) {\n            dispatch(deleteAdminAction(address, stargateClient, keplr));\n        }\n    }\n\n    return (\n        <div className=\"admin-card\">\n            {orderNum}. {accountAddress}\n            <div className=\"admin-card__buttons\">\n                <button\n                    disabled={!isConnected}\n                    className=\"admin-card__delete-btn\"\n                    onClick={() => deleteAdmin(accountAddress)}>\n                    Delete\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminDetail;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { saveAdminAction } from \"../../../redux/action-creator/adminList\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\n\nconst AdminForm = () => {\n    const [address, setAddress] = useState(\"\");\n    const dispatch = useDispatch();\n    const { isConnected, keplr } = useTypedSelector((state) => state.wallet);\n    const { stargateClient } = useTypedSelector((state) => state.wallet);\n\n    function addAdmin(adminAddress: string) {\n        if (stargateClient && isConnected && keplr) {\n            dispatch(saveAdminAction(adminAddress, stargateClient, keplr));\n            setAddress(\"\");\n        }\n    }\n\n    return (\n        <div className=\"admin-page__form\">\n            <label className=\"admin-page__form__label\" htmlFor=\"new-admin\">\n                Add new admin{\" \"}\n                <input\n                    value={address}\n                    onChange={({ target }) => setAddress(target.value)}\n                    className=\"admin-page__form__address-input\"\n                    disabled={!isConnected}\n                    placeholder=\"Address\"\n                    type=\"text\"\n                    name=\"new-admin\"\n                    id=\"new-admin\"\n                />\n            </label>{\" \"}\n            <button\n                onClick={() => addAdmin(address)}\n                className=\"admin-page__form__save-btn\"\n                disabled={!isConnected}>\n                Save\n            </button>\n        </div>\n    );\n};\n\nexport default AdminForm;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAdminList } from \"../../../redux/action-creator/adminList\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\nimport { initSettings } from \"../../../utills/initSettings\";\nimport Spinner from \"../../Loader/Spinner\";\nimport AdminDetail from \"./AdminDetail\";\nimport AdminForm from \"./AdminForm\";\n\nconst AdminList = () => {\n    const dispatch = useDispatch();\n    const { admins, error, loading } = useTypedSelector((state) => state.admin);\n\n    useEffect(() => {\n        initSettings(dispatch);\n\n        dispatch(fetchAdminList());\n    }, []);\n\n    return (\n        <div className=\"admin-page\">\n            <h4 className=\"title\">Admin List {loading && <Spinner />}</h4>\n            <AdminForm />\n            {error}\n            <div className=\"admin-page__list\">\n                {admins?.map((adm, i) => (\n                    <AdminDetail key={i} accountAddress={adm} orderNum={i + 1} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default AdminList;\n","import React, { useState } from \"react\";\nimport { coin, Coin } from \"@cosmjs/stargate\";\n\ninterface ICoinsFormProps {\n    addCoin: (coin: Coin) => void;\n}\n\nconst CoinsForm: React.FC<ICoinsFormProps> = ({ addCoin }) => {\n    const [amount, setAmount] = useState(\"\");\n    const [denom, setDenom] = useState(\"\");\n\n    return (\n        <div className=\"coins-form\">\n            <input\n                value={amount}\n                onChange={({ target }) => setAmount(target.value)}\n                placeholder=\"Amount\"\n                type=\"number\"\n            />\n            <input\n                value={denom}\n                onChange={({ target }) => setDenom(target.value)}\n                placeholder=\"Denom\"\n                type=\"text\"\n            />\n            <button className={\"btn-add-coin\"} onClick={() => addCoin(coin(+amount, denom))}>\n                Add\n            </button>\n        </div>\n    );\n};\n\nexport default CoinsForm;\n","import React from \"react\";\nimport { Coin } from \"@cosmjs/stargate\";\n\ninterface IDepositItemProps {\n    deposit: Coin;\n    deleteDeposit: () => void;\n}\n\nconst CoinItem: React.FC<IDepositItemProps> = ({ deposit, deleteDeposit }) => {\n    return (\n        <div className=\"coin-item\">\n            {`${deposit.amount}${deposit.denom}`}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n            <div className=\"btn-delete\" onClick={deleteDeposit}>\n                x\n            </div>\n        </div>\n    );\n};\n\nexport default CoinItem;\n","import { Dispatch } from \"redux\";\nimport { RootState } from \"../reducers\";\nimport { chainInfo } from \"../../config\";\nimport { Coin, coins, isBroadcastTxSuccess } from \"@cosmjs/stargate\";\nimport { getWalletAddress } from \"../../cosmos/keplr\";\nimport { SubmitProposalAction, SubmitProposalTypes } from \"../../types/submitProposal\";\nimport { EncodeObject } from \"@cosmjs/proto-signing\";\nimport { ModuleNames, ProposalUrls } from \"../../types/settings\";\n\nexport const submitProposal = (content: EncodeObject, deposit: Coin[]) => {\n    return async (dispatch: Dispatch<SubmitProposalAction>, getState: () => RootState) => {\n        try {\n            dispatch({ type: SubmitProposalTypes.SUBMIT_PROPOSAL_CALL });\n            const {\n                settings,\n                wallet: { stargateClient, isConnected, keplr }\n            } = getState();\n\n            if (!isConnected || !stargateClient || !keplr) {\n                return dispatch(setSubmitProposalError(\"Wallet is not connected\"));\n            }\n            const address = await getWalletAddress(keplr, settings.chainId);\n            const msg = {\n                content,\n                proposer: address,\n                initialDeposit: settings.moduleName === ModuleNames.gov ? deposit : undefined\n            };\n            const msgAny = {\n                typeUrl:\n                    settings.moduleName === ModuleNames.admin\n                        ? ProposalUrls.admin\n                        : ProposalUrls.gov,\n                value:\n                    settings.moduleName === ModuleNames.gov ? msg : { content, proposer: address }\n            };\n            console.log(\"sending to\", msgAny);\n            const fee = {\n                amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                gas: \"2000000\"\n            };\n\n            const broadcastRes = await stargateClient.signAndBroadcast(address, [msgAny], fee);\n            if (isBroadcastTxSuccess(broadcastRes)) {\n                dispatch({\n                    type: SubmitProposalTypes.SUBMIT_PROPOSAL_SUCCESS,\n                    payload: broadcastRes\n                });\n            } else {\n                console.log(\"logs error\", broadcastRes);\n                dispatch(setSubmitProposalError(broadcastRes.rawLog || \"error\"));\n            }\n        } catch (e) {\n            console.log(\"error\", e);\n            dispatch(setSubmitProposalError(e.message || \"error\"));\n        }\n    };\n};\n\nconst setSubmitProposalError = (error: string): SubmitProposalAction => {\n    return {\n        type: SubmitProposalTypes.SUBMIT_PROPOSAL_ERROR,\n        payload: error\n    };\n};\n\nexport const submitProposalReset = (): SubmitProposalAction => {\n    return {\n        type: SubmitProposalTypes.SUBMIT_PROPOSAL_RESET\n    };\n};\n","import { BroadcastTxSuccess } from \"@cosmjs/stargate/build/stargateclient\";\n\nexport type TBaseSPMsg = { title: string; description: string };\n\nexport interface AuthzState {\n    broadcastResponse: BroadcastTxSuccess | null;\n    error: string | null;\n    fetching: boolean;\n    grants: AuthzGrant[];\n}\n\nexport interface AuthzGrant {\n    authorization: {\n        \"@type\": string;\n        msg: string;\n    };\n    expiration: string;\n}\n\nexport enum AuthzTypes {\n    AUTH_CALL = \"AUTH_CALL\",\n    AUTH_SUCCESS = \"AUTH_SUCCESS\",\n    AUTH_ERROR = \"AUTH_ERROR\",\n    AUTH_RESET = \"AUTH_RESET\",\n    SET_GRANTS = \"SET_GRANTS\"\n}\n\ninterface AuthzCallAction {\n    type: AuthzTypes.AUTH_CALL;\n}\ninterface AuthzSuccessAction {\n    type: AuthzTypes.AUTH_SUCCESS;\n    payload: BroadcastTxSuccess;\n}\ninterface AuthzErrorAction {\n    type: AuthzTypes.AUTH_ERROR;\n    payload: string;\n}\ninterface AuthzResetAction {\n    type: AuthzTypes.AUTH_RESET;\n}\n\ninterface AuthzSetGrantsAction {\n    type: AuthzTypes.SET_GRANTS;\n    payload: AuthzGrant[];\n}\n\nexport type AuthzAction =\n    | AuthzCallAction\n    | AuthzSuccessAction\n    | AuthzErrorAction\n    | AuthzResetAction\n    | AuthzSetGrantsAction;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { submitProposal } from \"../../../redux/action-creator/submitProposal\";\nimport { TextProposal as TextProposalProc } from \"../../../cosmos/codec/cosmos/adminmodule/adminmodule/adminmodule\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\n\nconst TextProposal: React.FC<TBaseSPMsg> = ({ title, description, deposit }) => {\n    const dispatch = useDispatch();\n    const submitTextProposal = () => {\n        dispatch(\n            submitProposal(\n                {\n                    typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                    value: TextProposalProc.encode({\n                        title,\n                        description\n                    }).finish()\n                },\n                deposit\n            )\n        );\n    };\n    return (\n        <div>\n            <button className={\"btn-submit-proposal\"} onClick={submitTextProposal}>\n                Submit\n            </button>\n        </div>\n    );\n};\n\nexport default TextProposal;\n","import React, { useEffect, useState } from \"react\";\nimport { ParamChange } from \"../../../../../cosmos/codec/cosmos/params/v1beta1/params\";\nimport Select from \"react-select\";\nimport { useTypedSelector } from \"../../../../../redux/useTypedSelector\";\nimport { IModules } from \"../../../../../types/reviewChanges\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchParamsList } from \"../../../../../redux/action-creator/reviewChanges\";\n\ninterface IChangeFormProps {\n    addChange: (change: ParamChange) => void;\n}\n\ntype KeysOfModules = keyof IModules;\n\nconst ChangeForm: React.FC<IChangeFormProps> = ({ addChange }) => {\n    const [subspace, setSubspace] = useState<KeysOfModules>(\"\" as KeysOfModules);\n    const [key, setKey] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const modules = useTypedSelector((state) => state.reviewChanges.modules);\n\n    const subOptions = Object.keys(modules).map((key) => ({ value: key, label: key }));\n    const keyOptions = subspaceKeys[subspace]\n        ? subspaceKeys[subspace].map((key) => ({ value: key, label: key }))\n        : [];\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchParamsList());\n    }, []);\n    return (\n        <div className=\"parameter-change-form\">\n            <div className={\"input-params\"}>\n                <div className={\"input-param-elem\"}>\n                    <Select\n                        menuPlacement={\"top\"}\n                        options={subOptions}\n                        onChange={(e) => {\n                            const value: KeysOfModules = e?.value\n                                ? (e.value as KeysOfModules)\n                                : subspace;\n                            setSubspace(value);\n                            if (subspaceKeys[value]) setKey(subspaceKeys[value][0]);\n                        }}\n                        placeholder={\"Subspace\"}\n                    />\n                </div>\n\n                <div className={\"input-param-elem\"}>\n                    <Select\n                        menuPlacement={\"top\"}\n                        options={keyOptions}\n                        onChange={(e) => setKey(e?.value || key)}\n                        defaultValue={keyOptions[0]}\n                        value={keyOptions.find((elm) => elm.value === key) || null}\n                        placeholder={\"Key\"}\n                    />\n                </div>\n\n                <div className={\"input-param-elem\"}>\n                    <input\n                        value={value}\n                        onChange={({ target }) => setValue(target.value)}\n                        className=\"value-input\"\n                        placeholder=\"Value\"\n                        type=\"text\"\n                    />\n                </div>\n                <button\n                    className={\"btn-add-param\"}\n                    onClick={() => addChange({ key, value, subspace })}>\n                    Add\n                </button>\n            </div>\n        </div>\n    );\n};\n\ntype tParamOptions = {\n    [key: string]: string[];\n};\n\nconst subspaceKeys: tParamOptions = {\n    auth: [\n        \"MaxMemoCharacters\",\n        \"TxSigLimit\",\n        \"TxSizeCostPerByte\",\n        \"SigVerifyCostED25519\",\n        \"SigVerifyCostSecp256k1\"\n    ],\n    bank: [\"sendenabled\"],\n    gov: [\"depositparams\", \"votingparams\", \"tallyparams\"],\n    staking: [\"UnbondingTime\", \"MaxValidators\", \"KeyMaxEntries\", \"HistoricalEntries\", \"BondDenom\"],\n    slashing: [\n        \"SignedBlocksWindow\",\n        \"MinSignedPerWindow\",\n        \"DowntimeJailDuration\",\n        \"SlashFractionDoubleSign\",\n        \"SlashFractionDowntime\"\n    ],\n    distribution: [\n        \"communitytax\",\n        \"secretfoundationtax\",\n        \"secretfoundationaddress\",\n        \"baseproposerreward\",\n        \"bonusproposerreward\",\n        \"withdrawaddrenabled\"\n    ],\n    crisis: [\"ConstantFee\"],\n    mint: [\n        \"MintDenom\",\n        \"InflationRateChange\",\n        \"InflationMax\",\n        \"InflationMin\",\n        \"GoalBonded\",\n        \"BlocksPerYear\"\n    ],\n    evidence: [\"MaxEvidenceAge\"]\n};\n\nexport default ChangeForm;\n","import React, { useState } from \"react\";\nimport { ParamChange } from \"../../../../../cosmos/codec/cosmos/params/v1beta1/params\";\n\ninterface IChangeItem {\n    change: ParamChange;\n    deleteChange: () => void;\n}\n\nconst ChangeItem: React.FC<IChangeItem> = ({ change, deleteChange }) => {\n    const [btnDeleteShow, setBtnDeleteShow] = useState(false);\n    const onEnter = () => setBtnDeleteShow(true);\n    const onLeave = () => setBtnDeleteShow(false);\n\n    return (\n        <tr onMouseEnter={onEnter} onMouseLeave={onLeave}>\n            <td>{change.subspace}</td>\n            <td>{change.key}</td>\n            <td>{change.value}</td>\n            <td>\n                {btnDeleteShow && (\n                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n                    <div className=\"btn-delete\" onClick={deleteChange}>\n                        x\n                    </div>\n                )}\n            </td>\n        </tr>\n    );\n};\n\nexport default ChangeItem;\n","import React, { useRef, useState } from \"react\";\nimport {\n    ParamChange,\n    ParameterChangeProposal as ParameterChangeProposalProc\n} from \"../../../../cosmos/codec/cosmos/params/v1beta1/params\";\nimport ChangeForm from \"./ParamChange/ChangeForm\";\nimport ChangeItem from \"./ParamChange/ChangeItem\";\nimport { TBaseSPMsg } from \"../../../../types/submitProposal\";\nimport { useDispatch } from \"react-redux\";\nimport { submitProposal } from \"../../../../redux/action-creator/submitProposal\";\n\nconst ParameterChangeProposal: React.FC<TBaseSPMsg> = ({ title, description, deposit }) => {\n    const [changes, setChanges] = useState<ParamChange[]>([]);\n    const dispatch = useDispatch();\n    const submitParameterChangeProposal = () =>\n        dispatch(\n            submitProposal(\n                {\n                    typeUrl: \"/cosmos.params.v1beta1.ParameterChangeProposal\",\n                    value: ParameterChangeProposalProc.encode({\n                        title,\n                        description,\n                        changes\n                    }).finish()\n                },\n                deposit\n            )\n        );\n    return (\n        <div className={\"param-change-proposal\"}>\n            <div>\n                <label htmlFor=\"change-form\">Add ParamChange</label>\n                <div id={\"change-form\"}>\n                    <ChangeForm addChange={(c) => setChanges([...changes, c])} />\n                    <div className=\"change-table-list\">\n                        {!!changes.length && (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Subspace</th>\n                                        <th>Key</th>\n                                        <th>Value</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {changes.map((c, i) => (\n                                        <ChangeItem\n                                            key={i}\n                                            change={c}\n                                            deleteChange={() =>\n                                                setChanges([\n                                                    ...changes.slice(0, i),\n                                                    ...changes.slice(i + 1)\n                                                ])\n                                            }\n                                        />\n                                    ))}\n                                </tbody>\n                            </table>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div>\n                <button className={\"btn-submit-proposal\"} onClick={submitParameterChangeProposal}>\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ParameterChangeProposal;\n","import React, { useState } from \"react\";\nimport { Coin } from \"@cosmjs/stargate\";\nimport CoinsForm from \"./Coins/CoinsForm\";\nimport CoinItem from \"./Coins/CoinItem\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\nimport { submitProposal } from \"../../../redux/action-creator/submitProposal\";\nimport { useDispatch } from \"react-redux\";\nimport { CommunityPoolSpendProposal as CPSProposalProc } from \"@cosmjs/stargate/build/codec/cosmos/distribution/v1beta1/distribution\";\n\nconst CommunityPoolSpendProposal: React.FC<TBaseSPMsg> = ({ title, description, deposit }) => {\n    const [amount, setAmount] = useState<Coin[]>([]);\n    const [recipient, setRecipient] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const submitCPSProposal = () =>\n        dispatch(\n            submitProposal(\n                {\n                    typeUrl: \"/cosmos.distribution.v1beta1.CommunityPoolSpendProposal\",\n                    value: CPSProposalProc.encode({\n                        title,\n                        description,\n                        amount,\n                        recipient\n                    }).finish()\n                },\n                deposit\n            )\n        );\n    return (\n        <div className={\"cps-proposal\"}>\n            <div>\n                <div>\n                    <label htmlFor={\"recipient\"}>Recipient</label>\n                </div>\n\n                <input\n                    className={\"input-elem\"}\n                    id={\"recipient\"}\n                    value={recipient}\n                    onChange={(e) => setRecipient(e.target.value)}\n                    type={\"text\"}\n                    placeholder={\"cosmosxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}\n                />\n            </div>\n            <div>\n                <div>\n                    <label htmlFor={\"amount\"}>Amount</label>\n                </div>\n                <div id={\"amount\"}>\n                    <CoinsForm addCoin={(d) => setAmount([...amount, d])} />\n                    <div className={\"coin-items\"}>\n                        {amount.map((a, i) => (\n                            <CoinItem\n                                key={i}\n                                deposit={a}\n                                deleteDeposit={() =>\n                                    setAmount([...amount.slice(0, i), ...amount.slice(i + 1)])\n                                }\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <button className={\"btn-submit-proposal\"} onClick={submitCPSProposal}>\n                    Submit\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default CommunityPoolSpendProposal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// @ts-ignore\nimport DateTimePicker from \"react-datetime-picker\";\nimport { submitProposal } from \"../../../redux/action-creator/submitProposal\";\nimport {\n    Plan,\n    SoftwareUpgradeProposal as SoftwareUpgradeProposalProc\n} from \"../../../cosmos/codec/cosmos/upgrade/upgrade\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\n\nconst SoftwareUpgradeProposal: React.FC<TBaseSPMsg> = ({ title, description, deposit }) => {\n    const [plan, setPlan] = useState({} as Plan);\n    const dispatch = useDispatch();\n    const submitSoftwareUpgradeProposal = () => {\n        dispatch(\n            submitProposal(\n                {\n                    typeUrl: \"/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal\",\n                    value: SoftwareUpgradeProposalProc.encode({\n                        title,\n                        description,\n                        plan\n                    }).finish()\n                },\n                deposit\n            )\n        );\n    };\n\n    useEffect(() => {\n        if (plan.time === null) {\n            plan.time = undefined!;\n        }\n    }, [plan]);\n\n    return (\n        <div>\n            <div\n                style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}\n                className=\"plan-form\">\n                <div style={{ fontWeight: \"bold\", fontSize: 20 }}>Plan</div>\n                <label className=\"plan-form__label\" htmlFor=\"plan-name\">\n                    Name\n                    <input\n                        id=\"plan-name\"\n                        name=\"plan-name\"\n                        value={plan.name}\n                        onChange={({ target }) => setPlan({ ...plan, name: target.value })}\n                        type=\"text\"\n                        className=\"plan-form__input\"\n                    />\n                </label>\n                <label className=\"plan-form__label\" htmlFor=\"plan-height\">\n                    Height\n                    <input\n                        id=\"plan-height\"\n                        name=\"plan-height\"\n                        value={plan.height}\n                        onChange={({ target }) => setPlan({ ...plan, height: +target.value })}\n                        type=\"text\"\n                        className=\"plan-form__input\"\n                    />\n                </label>\n                <label className=\"plan-form__label\" htmlFor=\"plan-info\">\n                    Info\n                    <textarea\n                        id=\"plan-info\"\n                        name=\"plan-info\"\n                        value={plan.info}\n                        onChange={({ target }) => setPlan({ ...plan, info: target.value })}\n                        cols={40}\n                        rows={5}\n                        className=\"plan-form__input\"\n                    />\n                </label>\n                <label className=\"plan-form__label\" htmlFor=\"plan-time\">\n                    Time\n                    <DateTimePicker\n                        onChange={(val: Date) => setPlan({ ...plan, time: val })}\n                        value={plan.time}\n                    />\n                </label>\n            </div>\n            <button className={\"btn-submit-proposal\"} onClick={submitSoftwareUpgradeProposal}>\n                Submit\n            </button>\n        </div>\n    );\n};\n\nexport default SoftwareUpgradeProposal;\n","import React, { useEffect, useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { Coin } from \"@cosmjs/stargate\";\nimport CoinsForm from \"./Coins/CoinsForm\";\nimport CoinItem from \"./Coins/CoinItem\";\nimport TextProposal from \"./TextProposal\";\nimport ParameterChangeProposal from \"./ParameterChangeProposal/ParameterChangeProposal\";\nimport CommunityPoolSpendProposal from \"./CommunityPoolSpendProposal\";\nimport { useTypedSelector } from \"../../../redux/useTypedSelector\";\nimport { TBaseSPMsg } from \"../../../types/submitProposal\";\nimport Spinner from \"../../Loader/Spinner\";\nimport { useDispatch } from \"react-redux\";\nimport { submitProposalReset } from \"../../../redux/action-creator/submitProposal\";\nimport { initSettings } from \"../../../utills/initSettings\";\nimport ModuleSwitch from \"../../ModuleSwitch/ModuleSwitch\";\nimport { ModuleNames } from \"../../../types/settings\";\nimport SoftwareUpgradeProposal from \"./SoftwareUpgradeProposal\";\n\nconst SubmitProposal: React.FC = () => {\n    const { broadcastResponse, error, fetching } = useTypedSelector((s) => s.submitProposal);\n    const { moduleName } = useTypedSelector((s) => s.settings);\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [deposit, setDeposit] = useState<Coin[]>([]);\n\n    const params: TBaseSPMsg = { title, description, deposit };\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        initSettings(dispatch);\n\n        return () => {\n            dispatch(submitProposalReset());\n        };\n    }, []);\n    return (\n        <div className=\"submit-proposal\">\n            <div className=\"header\">\n                <h4 className=\"title\">\n                    Submit Proposal\n                    {fetching && <Spinner />}\n                </h4>\n\n                <ModuleSwitch />\n            </div>\n\n            {error && <div className={\"error-label\"}>Error: {error}</div>}\n            {broadcastResponse && <h1 className={\"success-label\"}>Success</h1>}\n\n            <div className=\"container\">\n                <div>\n                    <div>\n                        <label htmlFor={\"title\"}>Title</label>\n                    </div>\n                    <input\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        type={\"text\"}\n                        placeholder={\"My Cool Proposal\"}\n                        id={\"title\"}\n                        className=\"input-elem\"\n                    />\n                </div>\n\n                <div>\n                    <div>\n                        <label htmlFor={\"description\"}>Description</label>\n                    </div>\n                    <textarea\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        placeholder={\"A description with line breaks and `code formatting`\"}\n                        id={\"description\"}\n                        className=\"input-elem\"\n                    />\n                </div>\n\n                {moduleName === ModuleNames.gov ? (\n                    <div>\n                        <div>\n                            <label htmlFor={\"deposit\"}>Deposit</label>\n                        </div>\n                        <div id=\"deposit\">\n                            <CoinsForm addCoin={(d) => setDeposit([...deposit, d])} />\n                            <div className={\"coin-items\"}>\n                                {deposit.map((d, i) => (\n                                    <CoinItem\n                                        key={i}\n                                        deposit={d}\n                                        deleteDeposit={() =>\n                                            setDeposit([\n                                                ...deposit.slice(0, i),\n                                                ...deposit.slice(i + 1)\n                                            ])\n                                        }\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n\n                <div>\n                    <div>\n                        <label htmlFor={\"proposal-tabs\"}>Type Proposal</label>\n                    </div>\n\n                    <Tabs id={\"proposal-tabs\"}>\n                        <TabList>\n                            <Tab>TextProposal</Tab>\n                            <Tab>ParameterChangeProposal</Tab>\n                            <Tab>CommunityPoolSpendProposal</Tab>\n                            <Tab>SoftwareUpgradeProposal</Tab>\n                        </TabList>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <TextProposal {...params} />\n                            </div>\n                        </TabPanel>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <ParameterChangeProposal {...params} />\n                            </div>\n                        </TabPanel>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <CommunityPoolSpendProposal {...params} />\n                            </div>\n                        </TabPanel>\n\n                        <TabPanel forceRender>\n                            <div className={\"tab-panel-content\"}>\n                                <SoftwareUpgradeProposal {...params} />\n                            </div>\n                        </TabPanel>\n                    </Tabs>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SubmitProposal;\n","import { Dispatch } from \"redux\";\nimport { RootState } from \"../reducers\";\nimport { chainInfo } from \"../../config\";\nimport { coins, isBroadcastTxSuccess } from \"@cosmjs/stargate\";\nimport { toUtf8 } from \"@cosmjs/encoding\";\nimport { getWalletAddress } from \"../../cosmos/keplr\";\nimport { AuthzAction, AuthzTypes } from \"../../types/authz\";\nimport { MsgGrant, MsgRevoke } from \"../../cosmos/codec/cosmos/authz/tx\";\nimport { GenericAuthorization } from \"../../cosmos/codec/cosmos/authz/authz\";\nimport axios from \"axios\";\n\nexport const grantAuth = (granter: string, grantee: string, msgTypeUrl: string) => {\n    return async (dispatch: Dispatch<AuthzAction>, getState: () => RootState) => {\n        try {\n            dispatch({ type: AuthzTypes.AUTH_CALL });\n            const {\n                settings,\n                wallet: { stargateClient, isConnected, keplr }\n            } = getState();\n\n            if (!isConnected || !stargateClient || !keplr) {\n                return dispatch(setAuthzError(\"Wallet is not connected\"));\n            }\n            const address = await getWalletAddress(keplr, settings.chainId);\n            const dateNow = new Date();\n\n            const msg: MsgGrant = {\n                granter,\n                grantee,\n                grant: {\n                    authorization: {\n                        typeUrl: \"/cosmos.authz.v1beta1.GenericAuthorization\",\n                        value: GenericAuthorization.encode(\n                            GenericAuthorization.fromPartial({\n                                msg: msgTypeUrl\n                            })\n                        ).finish()\n                    },\n                    expiration: new Date(\n                        dateNow.getFullYear() + 1,\n                        dateNow.getMonth(),\n                        dateNow.getDate()\n                    )\n                }\n            };\n            // const encodedMsg = MsgGrant.encode(msg).finish();\n            const msgAny = {\n                typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\",\n                value: msg\n            };\n            const fee = {\n                amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                gas: \"2000000\"\n            };\n            const broadcastRes = await stargateClient.signAndBroadcast(address, [msgAny], fee);\n            if (isBroadcastTxSuccess(broadcastRes)) {\n                dispatch({\n                    type: AuthzTypes.AUTH_SUCCESS,\n                    payload: broadcastRes\n                });\n            } else {\n                console.log(\"error:::\", broadcastRes.rawLog);\n                dispatch(setAuthzError(broadcastRes.rawLog || \"error\"));\n            }\n        } catch (e) {\n            console.log(\"error:::\", e);\n            dispatch(setAuthzError(e.message || \"error\"));\n        }\n    };\n};\n\nexport const revokeAuth = (granter: string, grantee: string, msgTypeUrl: string) => {\n    return async (dispatch: Dispatch<AuthzAction>, getState: () => RootState) => {\n        try {\n            dispatch({ type: AuthzTypes.AUTH_CALL });\n            const {\n                settings,\n                wallet: { stargateClient, isConnected, keplr }\n            } = getState();\n\n            if (!isConnected || !stargateClient || !keplr) {\n                return dispatch(setAuthzError(\"Wallet is not connected\"));\n            }\n            const address = await getWalletAddress(keplr, settings.chainId);\n            const msg: MsgRevoke = {\n                granter,\n                grantee,\n                msgTypeUrl\n            };\n            const msgAny = {\n                typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\",\n                value: msg\n            };\n            const fee = {\n                amount: coins(0, chainInfo.stakeCurrency.coinMinimalDenom),\n                gas: \"2000000\"\n            };\n\n            const broadcastRes = await stargateClient.signAndBroadcast(address, [msgAny], fee);\n            if (isBroadcastTxSuccess(broadcastRes)) {\n                dispatch({\n                    type: AuthzTypes.AUTH_SUCCESS,\n                    payload: broadcastRes\n                });\n            } else {\n                dispatch(setAuthzError(broadcastRes.rawLog || \"error\"));\n            }\n        } catch (e) {\n            dispatch(setAuthzError(e.message || \"error\"));\n        }\n    };\n};\n\nexport const fetchGrants = (granter: string, grantee: string) => {\n    return async (dispatch: Dispatch<AuthzAction>, getState: () => RootState) => {\n        try {\n            // dispatch({ type: AuthzTypes.AUTH_CALL });\n            const {\n                settings,\n                wallet: { stargateClient, isConnected, keplr }\n            } = getState();\n\n            if (!isConnected || !stargateClient || !keplr) {\n                return dispatch(setAuthzError(\"Wallet is not connected\"));\n            }\n            const {\n                data: { grants }\n            } = await axios.get(\n                `${settings.rest}/cosmos/authz/v1beta1/grants?granter=${granter}&grantee=${grantee}`\n            );\n\n            console.log(\"got\", grants);\n            dispatch({\n                type: AuthzTypes.SET_GRANTS,\n                payload: grants\n            });\n        } catch (e) {\n            console.log(\"error:::\", e);\n            dispatch(setAuthzError(e.message || \"error\"));\n        }\n    };\n};\n\nconst setAuthzError = (error: string): AuthzAction => {\n    return {\n        type: AuthzTypes.AUTH_ERROR,\n        payload: error\n    };\n};\n\nexport const authReset = (): AuthzAction => {\n    return {\n        type: AuthzTypes.AUTH_RESET\n    };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { grantAuth, revokeAuth, fetchGrants } from \"../../redux/action-creator/authz\";\nimport { useTypedSelector } from \"../../redux/useTypedSelector\";\nimport { initSettings } from \"../../utills/initSettings\";\nimport Spinner from \"../Loader/Spinner\";\n\nconst AuthzPage = (): JSX.Element => {\n    const [granterG, setGranterG] = useState(\"\");\n    const [granteeG, setGranteeG] = useState(\"\");\n    const [msgTypeUrlG, setMsgTypeUrlG] = useState(\"\");\n\n    const [granterR, setGranterR] = useState(\"\");\n    const [granteeR, setGranteeR] = useState(\"\");\n    const [msgTypeUrlR, setMsgTypeUrlR] = useState(\"\");\n\n    const [granterS, setGranterS] = useState(\"\");\n    const [granteeS, setGranteeS] = useState(\"\");\n\n    const { broadcastResponse, error, fetching, grants } = useTypedSelector((s) => s.authz);\n    const { isConnected } = useTypedSelector((s) => s.wallet);\n    const dispatch = useDispatch();\n\n    function sendGrant() {\n        dispatch(grantAuth(granterG, granteeG, msgTypeUrlG));\n    }\n\n    function revokeGrant() {\n        dispatch(revokeAuth(granterR, granteeR, msgTypeUrlR));\n    }\n\n    function searchGrants() {\n        dispatch(fetchGrants(granterS, granteeS));\n    }\n\n    useEffect(() => {\n        initSettings(dispatch);\n    }, []);\n\n    return (\n        <div className=\"authz-page\">\n            <div className=\"authz-page__header\">Authz {fetching && <Spinner />}</div>\n\n            {error && <div className={\"error-label\"}>Error: {error}</div>}\n            {broadcastResponse && <h1 className={\"success-label\"}>Success</h1>}\n            <div className=\"authz-page__col-wrap\">\n                <div className=\"authz-page__col\">\n                    <div className=\"authz-page__form\">\n                        <div className=\"authz-page__subheader\">Grant authorization</div>\n                        <label className=\"authz-page__label\" htmlFor=\"granterg\">\n                            Granter:\n                            <input\n                                type=\"text\"\n                                name=\"granterg\"\n                                id=\"granterg\"\n                                className=\"authz-page__input\"\n                                value={granterG}\n                                onChange={({ target }) => setGranterG(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n                        <label className=\"authz-page__label\" htmlFor=\"granteeg\">\n                            Grantee:\n                            <input\n                                type=\"text\"\n                                name=\"granteeg\"\n                                id=\"granteeg\"\n                                className=\"authz-page__input\"\n                                value={granteeG}\n                                onChange={({ target }) => setGranteeG(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n                        <label className=\"authz-page__label\" htmlFor=\"msgTypeUrlg\">\n                            Msg Type URL:\n                            <input\n                                type=\"text\"\n                                name=\"msgTypeUrlg\"\n                                id=\"msgTypeUrlg\"\n                                className=\"authz-page__input\"\n                                value={msgTypeUrlG}\n                                onChange={({ target }) => setMsgTypeUrlG(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n\n                        <button\n                            disabled={!isConnected}\n                            onClick={sendGrant}\n                            className=\"authz-page__btn\">\n                            Grant\n                        </button>\n                    </div>\n\n                    <div className=\"authz-page__form\">\n                        <div className=\"authz-page__subheader\">Revoke authorization</div>\n                        <label className=\"authz-page__label\" htmlFor=\"granterr\">\n                            Granter:\n                            <input\n                                type=\"text\"\n                                name=\"granterr\"\n                                id=\"granterr\"\n                                className=\"authz-page__input\"\n                                value={granterR}\n                                onChange={({ target }) => setGranterR(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n                        <label className=\"authz-page__label\" htmlFor=\"granteer\">\n                            Grantee:\n                            <input\n                                type=\"text\"\n                                name=\"granteer\"\n                                id=\"granteer\"\n                                className=\"authz-page__input\"\n                                value={granteeR}\n                                onChange={({ target }) => setGranteeR(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n                        <label className=\"authz-page__label\" htmlFor=\"msgTypeUrlr\">\n                            Msg Type URL:\n                            <input\n                                type=\"text\"\n                                name=\"msgTypeUrlr\"\n                                id=\"msgTypeUrlr\"\n                                className=\"authz-page__input\"\n                                value={msgTypeUrlR}\n                                onChange={({ target }) => setMsgTypeUrlR(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n\n                        <button\n                            disabled={!isConnected}\n                            onClick={revokeGrant}\n                            className=\"authz-page__btn\">\n                            Revoke\n                        </button>\n                    </div>\n                </div>\n                <div className=\"authz-page__col\">\n                    <div className=\"authz-page__form\">\n                        <div className=\"authz-page__subheader\">Search grants</div>\n                        <label className=\"authz-page__label\" htmlFor=\"granters\">\n                            Granter:\n                            <input\n                                type=\"text\"\n                                name=\"granters\"\n                                id=\"granters\"\n                                className=\"authz-page__input\"\n                                value={granterS}\n                                onChange={({ target }) => setGranterS(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n                        <label className=\"authz-page__label\" htmlFor=\"grantees\">\n                            Grantee:\n                            <input\n                                type=\"text\"\n                                name=\"grantees\"\n                                id=\"grantees\"\n                                className=\"authz-page__input\"\n                                value={granteeS}\n                                onChange={({ target }) => setGranteeS(target.value)}\n                                disabled={!isConnected}\n                            />\n                        </label>\n\n                        <button\n                            disabled={!isConnected}\n                            onClick={searchGrants}\n                            className=\"authz-page__btn\">\n                            Search\n                        </button>\n                        {grants.map((g, i) => (\n                            <div className=\"authz-page__grant\" key={\"grant-\" + i}>\n                                <div>\n                                    <b>Grant № {i + 1}</b>\n                                </div>\n                                <div>Type: {g.authorization[\"@type\"]}</div>\n                                <div>MSG: {g.authorization.msg}</div>\n                                <div>Expiration: {new Date(g.expiration).toLocaleDateString()}</div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthzPage;\n","import React, { useEffect } from \"react\";\nimport RouteWrapper from \"./components/SideBar/RouteWrapper\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport { routes } from \"./router\";\nimport ReviewState from \"./components/ReviewState/ReviewState\";\nimport ProposalsPage from \"./components/Proposals\";\nimport AdminModule from \"./components/AdminModule/AdminModule\";\nimport NotFoundPage from \"./components/NotFound\";\nimport \"./assets/scss/main.scss\";\nimport ProposalDetail from \"./components/Proposals/ProposalDetail\";\nimport SettingsPage from \"./components/Settings\";\nimport AdminList from \"./components/AdminModule/AdminList/AdminList\";\nimport SubmitProposal from \"./components/AdminModule/SubmitProposal\";\nimport AuthzPage from \"./components/Authz\";\n\nconst App: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path={routes.home}>\n                    <RouteWrapper>\n                        <Home />\n                    </RouteWrapper>\n                </Route>\n\n                <Route exact path={routes.settings}>\n                    <RouteWrapper>\n                        <SettingsPage />\n                    </RouteWrapper>\n                </Route>\n\n                <Route exact path={routes.authz}>\n                    <RouteWrapper>\n                        <AuthzPage />\n                    </RouteWrapper>\n                </Route>\n\n                <Route exact path={routes.reviewState}>\n                    <RouteWrapper>\n                        <ReviewState />\n                    </RouteWrapper>\n                </Route>\n                <Route exact path={routes.proposals}>\n                    <RouteWrapper>\n                        <ProposalsPage />\n                    </RouteWrapper>\n                </Route>\n                <Route exact path={routes.proposalItem}>\n                    <RouteWrapper>\n                        <ProposalDetail />\n                    </RouteWrapper>\n                </Route>\n                {/* <Route exact path={routes.adminModule}>\n                    <RouteWrapper>\n                        <AdminModule />\n                    </RouteWrapper>\n                </Route> */}\n                <Route exact path={routes.adminList}>\n                    <RouteWrapper>\n                        <AdminList />\n                    </RouteWrapper>\n                </Route>\n                <Route exact path={routes.submitProposal}>\n                    <RouteWrapper>\n                        <SubmitProposal />\n                    </RouteWrapper>\n                </Route>\n                <Route>\n                    <RouteWrapper>\n                        <NotFoundPage />\n                    </RouteWrapper>\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { AdminActions, AdminListActionTypes, AdminListState } from \"../../types/adminList\";\n\nconst initialState: AdminListState = {\n    admins: [],\n    error: null,\n    loading: false\n};\n\nexport const adminListReducer = (state = initialState, action: AdminActions): AdminListState => {\n    switch (action.type) {\n        case AdminListActionTypes.SET_LIST:\n            return { ...state, admins: action.payload.admins };\n        case AdminListActionTypes.SET_LOADING:\n            return { ...state, loading: action.payload.loading };\n        case AdminListActionTypes.ERROR:\n            return { ...state, error: action.payload.error };\n        case AdminListActionTypes.CLEAR_ERROR:\n            return { ...state, error: null };\n        default:\n            return state;\n    }\n};\n","import { ProposalAction, ProposalActionTypes, ProposalState } from \"../../types/proposal\";\n\nconst initialState: ProposalState = {\n    proposals: null,\n    // proposalDetail: null,\n    isFetchingProposals: false,\n    isFetchingItem: false,\n    error: null\n};\n\nexport const proposalReducer = (state = initialState, action: ProposalAction): ProposalState => {\n    switch (action.type) {\n        case ProposalActionTypes.PROPOSAL_CALL:\n            return { ...state, isFetchingProposals: true, error: null };\n        case ProposalActionTypes.PROPOSAL_SUCCESS:\n            return { ...state, isFetchingProposals: false, proposals: action.payload };\n        case ProposalActionTypes.PROPOSAL_ERROR:\n            return { ...state, isFetchingProposals: false, error: action.payload };\n\n        // case ProposalActionTypes.PROPOSAL_DETAIL_CALL:\n        //     return { ...state, isFetchingItem: true, error: null };\n        // case ProposalActionTypes.PROPOSAL_DETAIL_SUCCESS:\n        //     return { ...state, isFetchingItem: false, proposalDetail: action.payload };\n        // case ProposalActionTypes.PROPOSAL_DETAIL_ERROR:\n        //     return { ...state, isFetchingItem: false, error: action.payload };\n        // case ProposalActionTypes.PROPOSAL_DETAIL_RESET:\n        //     return { ...state, proposalDetail: null };\n        default:\n            return state;\n    }\n};\n","import { WalletAction, WalletActionTypes, WalletState } from \"../../types/wallet\";\n\nconst initialState: WalletState = {\n    keplr: null,\n    stargateClient: null,\n    isConnected: false,\n    error: null\n};\n\nexport const walletReducer = (state = initialState, action: WalletAction): WalletState => {\n    switch (action.type) {\n        case WalletActionTypes.WALLET_CONNECT:\n            return { ...state, error: null };\n        case WalletActionTypes.WALLET_DISCONNECT:\n            return { ...state, keplr: null, stargateClient: null, isConnected: false, error: null };\n        case WalletActionTypes.WALLET_SUCCESS:\n            return { ...state, isConnected: true, ...action.payload };\n        case WalletActionTypes.WALLET_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                isConnected: false,\n                keplr: null,\n                stargateClient: null\n            };\n        default:\n            return state;\n    }\n};\n","import { StakingParams } from \"@keplr-wallet/stores/build/query/cosmos/staking/types\";\nimport {\n    ReviewChangesActions,\n    ReviewChangesActionTypes,\n    ReviewChangesState\n} from \"../../types/reviewChanges\";\n\nconst initialState: ReviewChangesState = {\n    error: null,\n    loading: false,\n    modules: {\n        bank: null!,\n        distribution: null!,\n        gov: null!,\n        slashing: null!,\n        staking: null!\n    }\n};\n\nexport const reviewChangesReducer = (\n    state = initialState,\n    action: ReviewChangesActions\n): ReviewChangesState => {\n    switch (action.type) {\n        case ReviewChangesActionTypes.SET_PARAMS:\n            return { ...state, modules: { ...action.payload } };\n        case ReviewChangesActionTypes.SET_LOADING:\n            return { ...state, loading: action.payload.loading };\n        case ReviewChangesActionTypes.ERROR:\n            return { ...state, error: action.payload.error };\n        case ReviewChangesActionTypes.CLEAR_ERROR:\n            return { ...state, error: null };\n        default:\n            return state;\n    }\n};\n","import {\n    SubmitProposalAction,\n    SubmitProposalState,\n    SubmitProposalTypes\n} from \"../../types/submitProposal\";\n\nconst initialState: SubmitProposalState = {\n    error: null,\n    broadcastResponse: null,\n    fetching: false\n};\n\nexport const submitProposalReducer = (\n    state = initialState,\n    action: SubmitProposalAction\n): SubmitProposalState => {\n    switch (action.type) {\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_CALL:\n            return { ...state, error: null, broadcastResponse: null, fetching: true };\n\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_SUCCESS:\n            return { ...state, fetching: false, broadcastResponse: action.payload };\n\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_ERROR:\n            return { ...state, fetching: false, error: action.payload };\n\n        case SubmitProposalTypes.SUBMIT_PROPOSAL_RESET:\n            return { ...state, error: null, broadcastResponse: null, fetching: false };\n\n        default:\n            return state;\n    }\n};\n","import { lcdClient } from \"../../cosmos\";\nimport { SettingsActions, SettingsState, SettingsActionTypes } from \"../../types/settings\";\nimport { getLocalSettings } from \"../../utills/localStorage\";\n\nconst initialState: SettingsState = {\n    rpc: getLocalSettings().rpc,\n    rest: getLocalSettings().rest,\n    chainId: getLocalSettings().chainId,\n    chainName: getLocalSettings().chainName,\n    lcdClient: lcdClient,\n    moduleName: getLocalSettings().moduleName\n};\n\nexport const settingsReducer = (state = initialState, action: SettingsActions): SettingsState => {\n    switch (action.type) {\n        case SettingsActionTypes.SET_SETTINGS:\n            return { ...state, ...action.payload };\n        case SettingsActionTypes.SET_MODULE:\n            return { ...state, moduleName: action.payload.moduleName };\n        default:\n            return state;\n    }\n};\n","import { AuthzAction, AuthzState, AuthzTypes } from \"../../types/authz\";\n\nconst initialState: AuthzState = {\n    error: null,\n    broadcastResponse: null,\n    fetching: false,\n    grants: []\n};\n\nexport const authzReducer = (state = initialState, action: AuthzAction): AuthzState => {\n    switch (action.type) {\n        case AuthzTypes.AUTH_CALL:\n            return { ...state, error: null, broadcastResponse: null, fetching: true };\n\n        case AuthzTypes.AUTH_SUCCESS:\n            return { ...state, fetching: false, broadcastResponse: action.payload };\n\n        case AuthzTypes.AUTH_ERROR:\n            return { ...state, fetching: false, error: action.payload };\n\n        case AuthzTypes.AUTH_RESET:\n            return { ...state, error: null, broadcastResponse: null, fetching: false };\n        case AuthzTypes.SET_GRANTS:\n            return { ...state, grants: action.payload };\n\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { adminListReducer } from \"./adminList\";\nimport { proposalReducer } from \"./proposal\";\nimport { walletReducer } from \"./wallet\";\nimport { reviewChangesReducer } from \"./reviewChanges\";\nimport { submitProposalReducer } from \"./submitProposal\";\nimport { settingsReducer } from \"./settings\";\nimport { authzReducer } from \"./authz\";\n\nexport const rootReducer = combineReducers({\n    proposal: proposalReducer,\n    wallet: walletReducer,\n    admin: adminListReducer,\n    reviewChanges: reviewChangesReducer,\n    submitProposal: submitProposalReducer,\n    authz: authzReducer,\n    settings: settingsReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers\";\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\n\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport enum VoteOption {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VOTE_OPTION_UNSPECIFIED = 0,\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VOTE_OPTION_YES = 1,\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VOTE_OPTION_ABSTAIN = 2,\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VOTE_OPTION_NO = 3,\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VOTE_OPTION_NO_WITH_VETO = 4,\n    UNRECOGNIZED = -1\n}\n\nexport function voteOptionFromJSON(object: any): VoteOption {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\n\nexport function voteOptionToJSON(object: VoteOption): string {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport enum ProposalStatus {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    PROPOSAL_STATUS_UNSPECIFIED = 0,\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    PROPOSAL_STATUS_DEPOSIT_PERIOD = 1,\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    PROPOSAL_STATUS_VOTING_PERIOD = 2,\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    PROPOSAL_STATUS_PASSED = 3,\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    PROPOSAL_STATUS_REJECTED = 4,\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    PROPOSAL_STATUS_FAILED = 5,\n    UNRECOGNIZED = -1\n}\n\nexport function proposalStatusFromJSON(object: any): ProposalStatus {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\n\nexport function proposalStatusToJSON(object: ProposalStatus): string {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n\n/**\n * TextProposal defines a standard text proposal whose changes need to be\n * manually updated in case of approval.\n */\nexport interface TextProposal {\n    title: string;\n    description: string;\n}\n\n/**\n * Deposit defines an amount deposited by an account address to an active\n * proposal.\n */\nexport interface Deposit {\n    proposalId: Long;\n    depositor: string;\n    amount: Coin[];\n}\n\n/** Proposal defines the core field members of a governance proposal. */\nexport interface Proposal {\n    proposalId: Long;\n    content?: Any;\n    status: ProposalStatus;\n    finalTallyResult?: TallyResult;\n    submitTime?: Date;\n    depositEndTime?: Date;\n    totalDeposit: Coin[];\n    votingStartTime?: Date;\n    votingEndTime?: Date;\n}\n\n/** TallyResult defines a standard tally for a governance proposal. */\nexport interface TallyResult {\n    yes: string;\n    abstain: string;\n    no: string;\n    noWithVeto: string;\n}\n\n/**\n * Vote defines a vote on a governance proposal.\n * A Vote consists of a proposal ID, the voter, and the vote option.\n */\nexport interface Vote {\n    proposalId: Long;\n    voter: string;\n    option: VoteOption;\n}\n\n/** DepositParams defines the params for deposits on governance proposals. */\nexport interface DepositParams {\n    /** Minimum deposit for a proposal to enter voting period. */\n    minDeposit: Coin[];\n    /**\n     * Maximum period for Atom holders to deposit on a proposal. Initial value: 2\n     *  months.\n     */\n    maxDepositPeriod?: Duration;\n}\n\n/** VotingParams defines the params for voting on governance proposals. */\nexport interface VotingParams {\n    /** Length of the voting period. */\n    votingPeriod?: Duration;\n}\n\n/** TallyParams defines the params for tallying votes on governance proposals. */\nexport interface TallyParams {\n    /**\n     * Minimum percentage of total stake needed to vote for a result to be\n     *  considered valid.\n     */\n    quorum: Uint8Array;\n    /** Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */\n    threshold: Uint8Array;\n    /**\n     * Minimum value of Veto votes to Total votes ratio for proposal to be\n     *  vetoed. Default value: 1/3.\n     */\n    vetoThreshold: Uint8Array;\n}\n\nconst baseTextProposal: object = { title: \"\", description: \"\" };\n\nexport const TextProposal = {\n    encode(message: TextProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): TextProposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal } as TextProposal;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): TextProposal {\n        const message = { ...baseTextProposal } as TextProposal;\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: TextProposal): unknown {\n        const obj: any = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<TextProposal>): TextProposal {\n        const message = { ...baseTextProposal } as TextProposal;\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseDeposit: object = { proposalId: Long.UZERO, depositor: \"\" };\n\nexport const Deposit = {\n    encode(message: Deposit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.proposalId.isZero()) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v!, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Deposit {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit } as Deposit;\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64() as Long;\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Deposit {\n        const message = { ...baseDeposit } as Deposit;\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Long.fromString(object.proposalId);\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        } else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n\n    toJSON(message: Deposit): unknown {\n        const obj: any = {};\n        message.proposalId !== undefined &&\n            (obj.proposalId = (message.proposalId || Long.UZERO).toString());\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        } else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Deposit>): Deposit {\n        const message = { ...baseDeposit } as Deposit;\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId as Long;\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        } else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n\nconst baseProposal: object = { proposalId: Long.UZERO, status: 0 };\n\nexport const Proposal = {\n    encode(message: Proposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.proposalId.isZero()) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(\n                toTimestamp(message.depositEndTime),\n                writer.uint32(50).fork()\n            ).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v!, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(\n                toTimestamp(message.votingStartTime),\n                writer.uint32(66).fork()\n            ).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Proposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal } as Proposal;\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64() as Long;\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32() as any;\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(\n                        Timestamp.decode(reader, reader.uint32())\n                    );\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(\n                        Timestamp.decode(reader, reader.uint32())\n                    );\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(\n                        Timestamp.decode(reader, reader.uint32())\n                    );\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Proposal {\n        const message = { ...baseProposal } as Proposal;\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Long.fromString(object.proposalId);\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        } else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        } else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        } else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        } else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        } else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        } else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: Proposal): unknown {\n        const obj: any = {};\n        message.proposalId !== undefined &&\n            (obj.proposalId = (message.proposalId || Long.UZERO).toString());\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime.toISOString());\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime = message.depositEndTime.toISOString());\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        } else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime = message.votingStartTime.toISOString());\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime = message.votingEndTime.toISOString());\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Proposal>): Proposal {\n        const message = { ...baseProposal } as Proposal;\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId as Long;\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        } else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        } else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        } else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        } else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        } else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        } else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\n\nconst baseTallyResult: object = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\"\n};\n\nexport const TallyResult = {\n    encode(message: TallyResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): TallyResult {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult } as TallyResult;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): TallyResult {\n        const message = { ...baseTallyResult } as TallyResult;\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        } else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        } else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        } else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        } else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: TallyResult): unknown {\n        const obj: any = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<TallyResult>): TallyResult {\n        const message = { ...baseTallyResult } as TallyResult;\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        } else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        } else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        } else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        } else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseVote: object = { proposalId: Long.UZERO, voter: \"\", option: 0 };\n\nexport const Vote = {\n    encode(message: Vote, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.proposalId.isZero()) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Vote {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote } as Vote;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = reader.uint64() as Long;\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32() as any;\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Vote {\n        const message = { ...baseVote } as Vote;\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Long.fromString(object.proposalId);\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        } else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        } else {\n            message.option = 0;\n        }\n        return message;\n    },\n\n    toJSON(message: Vote): unknown {\n        const obj: any = {};\n        message.proposalId !== undefined &&\n            (obj.proposalId = (message.proposalId || Long.UZERO).toString());\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Vote>): Vote {\n        const message = { ...baseVote } as Vote;\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId as Long;\n        } else {\n            message.proposalId = Long.UZERO;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        } else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        } else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\n\nconst baseDepositParams: object = {};\n\nexport const DepositParams = {\n    encode(message: DepositParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.minDeposit) {\n            Coin.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): DepositParams {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams } as DepositParams;\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): DepositParams {\n        const message = { ...baseDepositParams } as DepositParams;\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        } else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: DepositParams): unknown {\n        const obj: any = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        } else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<DepositParams>): DepositParams {\n        const message = { ...baseDepositParams } as DepositParams;\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        } else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\n\nconst baseVotingParams: object = {};\n\nexport const VotingParams = {\n    encode(message: VotingParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): VotingParams {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams } as VotingParams;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): VotingParams {\n        const message = { ...baseVotingParams } as VotingParams;\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        } else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: VotingParams): unknown {\n        const obj: any = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<VotingParams>): VotingParams {\n        const message = { ...baseVotingParams } as VotingParams;\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        } else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\n\nconst baseTallyParams: object = {};\n\nexport const TallyParams = {\n    encode(message: TallyParams, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): TallyParams {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams } as TallyParams;\n        message.quorum = new Uint8Array();\n        message.threshold = new Uint8Array();\n        message.vetoThreshold = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): TallyParams {\n        const message = { ...baseTallyParams } as TallyParams;\n        message.quorum = new Uint8Array();\n        message.threshold = new Uint8Array();\n        message.vetoThreshold = new Uint8Array();\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n\n    toJSON(message: TallyParams): unknown {\n        const obj: any = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(\n                message.quorum !== undefined ? message.quorum : new Uint8Array()\n            ));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(\n                message.threshold !== undefined ? message.threshold : new Uint8Array()\n            ));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(\n                message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()\n            ));\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<TallyParams>): TallyParams {\n        const message = { ...baseTallyParams } as TallyParams;\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        } else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        } else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        } else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n    globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\n\nconst btoa: (bin: string) => string =\n    globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n    const bin: string[] = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = numberToLong(date.getTime() / 1_000);\n    const nanos = (date.getTime() % 1_000) * 1_000_000;\n    return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds.toNumber() * 1_000;\n    millis += t.nanos / 1_000_000;\n    return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    } else if (typeof o === \"string\") {\n        return new Date(o);\n    } else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n\nfunction numberToLong(number: number) {\n    return Long.fromNumber(number);\n}\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../adminmodule/google/protobuf/timestamp\";\nimport { Any } from \"../adminmodule/google/protobuf/any\";\n\nexport const protobufPackage = \"cosmos.upgrade.v1beta1\";\n\n/** Plan specifies information about a planned upgrade and when it should occur. */\nexport interface Plan {\n    /**\n     * Sets the name for the upgrade. This name will be used by the upgraded\n     * version of the software to apply any special \"on-upgrade\" commands during\n     * the first BeginBlock method after the upgrade is applied. It is also used\n     * to detect whether a software version can handle a given upgrade. If no\n     * upgrade handler with this name has been set in the software, it will be\n     * assumed that the software is out-of-date when the upgrade Time or Height is\n     * reached and the software will exit.\n     */\n    name: string;\n    /**\n     * The time after which the upgrade must be performed.\n     * Leave set to its zero value to use a pre-defined Height instead.\n     */\n    time: Date | undefined;\n    /**\n     * The height at which the upgrade must be performed.\n     * Only used if Time is not set.\n     */\n    height: number;\n    /**\n     * Any application specific upgrade info to be included on-chain\n     * such as a git commit that validators could automatically upgrade to\n     */\n    info: string;\n    /**\n     * IBC-enabled chains can opt-in to including the upgraded client state in its upgrade plan\n     * This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs,\n     * so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the\n     * previous version of the chain.\n     * This will allow IBC connections to persist smoothly across planned chain upgrades\n     */\n    upgradedClientState: Any | undefined;\n}\n\n/**\n * SoftwareUpgradeProposal is a gov Content type for initiating a software\n * upgrade.\n */\nexport interface SoftwareUpgradeProposal {\n    title: string;\n    description: string;\n    plan: Plan | undefined;\n}\n\n/**\n * CancelSoftwareUpgradeProposal is a gov Content type for cancelling a software\n * upgrade.\n */\nexport interface CancelSoftwareUpgradeProposal {\n    title: string;\n    description: string;\n}\n\nconst basePlan: object = { name: \"\", height: 0, info: \"\" };\n\nexport const Plan = {\n    encode(message: Plan, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Plan {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan } as Plan;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64() as Long);\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Plan {\n        const message = { ...basePlan } as Plan;\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        } else {\n            message.name = \"\";\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        } else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        } else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        } else {\n            message.info = \"\";\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        } else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: Plan): unknown {\n        const obj: any = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time.toISOString());\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        message.upgradedClientState !== undefined &&\n            (obj.upgradedClientState = message.upgradedClientState\n                ? Any.toJSON(message.upgradedClientState)\n                : undefined);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Plan>): Plan {\n        const message = { ...basePlan } as Plan;\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        } else {\n            message.name = \"\";\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        } else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        } else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        } else {\n            message.info = \"\";\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        } else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\n\nconst baseSoftwareUpgradeProposal: object = { title: \"\", description: \"\" };\n\nexport const SoftwareUpgradeProposal = {\n    encode(message: SoftwareUpgradeProposal, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): SoftwareUpgradeProposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseSoftwareUpgradeProposal\n        } as SoftwareUpgradeProposal;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): SoftwareUpgradeProposal {\n        const message = {\n            ...baseSoftwareUpgradeProposal\n        } as SoftwareUpgradeProposal;\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        } else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: SoftwareUpgradeProposal): unknown {\n        const obj: any = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined &&\n            (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<SoftwareUpgradeProposal>): SoftwareUpgradeProposal {\n        const message = {\n            ...baseSoftwareUpgradeProposal\n        } as SoftwareUpgradeProposal;\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        } else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\n\nconst baseCancelSoftwareUpgradeProposal: object = {\n    title: \"\",\n    description: \"\"\n};\n\nexport const CancelSoftwareUpgradeProposal = {\n    encode(\n        message: CancelSoftwareUpgradeProposal,\n        writer: _m0.Writer = _m0.Writer.create()\n    ): _m0.Writer {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): CancelSoftwareUpgradeProposal {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCancelSoftwareUpgradeProposal\n        } as CancelSoftwareUpgradeProposal;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): CancelSoftwareUpgradeProposal {\n        const message = {\n            ...baseCancelSoftwareUpgradeProposal\n        } as CancelSoftwareUpgradeProposal;\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: CancelSoftwareUpgradeProposal): unknown {\n        const obj: any = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<CancelSoftwareUpgradeProposal>): CancelSoftwareUpgradeProposal {\n        const message = {\n            ...baseCancelSoftwareUpgradeProposal\n        } as CancelSoftwareUpgradeProposal;\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    }\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1_000;\n    const nanos = (date.getTime() % 1_000) * 1_000_000;\n    return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1_000;\n    millis += t.nanos / 1_000_000;\n    return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    } else if (typeof o === \"string\") {\n        return new Date(o);\n    } else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n\nfunction longToNumber(long: Long): number {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.adminmodule.adminmodule\";\nconst baseMsgDeleteAdmin = { creator: \"\", admin: \"\" };\nexport const MsgDeleteAdmin = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAdmin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = String(object.admin);\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.admin !== undefined && (obj.admin = message.admin);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = object.admin;\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteAdminResponse = {};\nexport const MsgDeleteAdminResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAdminResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteAdminResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteAdminResponse };\n        return message;\n    }\n};\nconst baseMsgAddAdmin = { creator: \"\", admin: \"\" };\nexport const MsgAddAdmin = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.admin !== \"\") {\n            writer.uint32(18).string(message.admin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddAdmin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.admin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = String(object.admin);\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.admin !== undefined && (obj.admin = message.admin);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddAdmin };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        } else {\n            message.creator = \"\";\n        }\n        if (object.admin !== undefined && object.admin !== null) {\n            message.admin = object.admin;\n        } else {\n            message.admin = \"\";\n        }\n        return message;\n    }\n};\nconst baseMsgAddAdminResponse = {};\nexport const MsgAddAdminResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddAdminResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgAddAdminResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgAddAdminResponse };\n        return message;\n    }\n};\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(18).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        } else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        } else {\n            message.proposer = \"\";\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        } else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        } else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    DeleteAdmin(request) {\n        const data = MsgDeleteAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.adminmodule.adminmodule.Msg\", \"DeleteAdmin\", data);\n        return promise.then((data) => MsgDeleteAdminResponse.decode(new Reader(data)));\n    }\n    AddAdmin(request) {\n        const data = MsgAddAdmin.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.adminmodule.adminmodule.Msg\", \"AddAdmin\", data);\n        return promise.then((data) => MsgAddAdminResponse.decode(new Reader(data)));\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\n            \"cosmos.adminmodule.adminmodule.Msg\",\n            \"SubmitProposal\",\n            data\n        );\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        } else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(\n                message.value !== undefined ? message.value : new Uint8Array()\n            ));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        } else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        } else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"cosmos.base.v1beta1\";\n\n/**\n * Coin defines a token with a denomination and an amount.\n *\n * NOTE: The amount field is an Int which implements the custom method\n * signatures required by gogoproto.\n */\nexport interface Coin {\n    denom: string;\n    amount: string;\n}\n\n/**\n * DecCoin defines a token with a denomination and a decimal amount.\n *\n * NOTE: The amount field is an Dec which implements the custom method\n * signatures required by gogoproto.\n */\nexport interface DecCoin {\n    denom: string;\n    amount: string;\n}\n\n/** IntProto defines a Protobuf wrapper around an Int object. */\nexport interface IntProto {\n    int: string;\n}\n\n/** DecProto defines a Protobuf wrapper around a Dec object. */\nexport interface DecProto {\n    dec: string;\n}\n\nconst baseCoin: object = { denom: \"\", amount: \"\" };\n\nexport const Coin = {\n    encode(message: Coin, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Coin {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin } as Coin;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Coin {\n        const message = { ...baseCoin } as Coin;\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        } else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        } else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: Coin): unknown {\n        const obj: any = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Coin>): Coin {\n        const message = { ...baseCoin } as Coin;\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        } else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        } else {\n            message.amount = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseDecCoin: object = { denom: \"\", amount: \"\" };\n\nexport const DecCoin = {\n    encode(message: DecCoin, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): DecCoin {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin } as DecCoin;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): DecCoin {\n        const message = { ...baseDecCoin } as DecCoin;\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        } else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        } else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: DecCoin): unknown {\n        const obj: any = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<DecCoin>): DecCoin {\n        const message = { ...baseDecCoin } as DecCoin;\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        } else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        } else {\n            message.amount = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseIntProto: object = { int: \"\" };\n\nexport const IntProto = {\n    encode(message: IntProto, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): IntProto {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto } as IntProto;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): IntProto {\n        const message = { ...baseIntProto } as IntProto;\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        } else {\n            message.int = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: IntProto): unknown {\n        const obj: any = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<IntProto>): IntProto {\n        const message = { ...baseIntProto } as IntProto;\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        } else {\n            message.int = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseDecProto: object = { dec: \"\" };\n\nexport const DecProto = {\n    encode(message: DecProto, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): DecProto {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto } as DecProto;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): DecProto {\n        const message = { ...baseDecProto } as DecProto;\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        } else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: DecProto): unknown {\n        const obj: any = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<DecProto>): DecProto {\n        const message = { ...baseDecProto } as DecProto;\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        } else {\n            message.dec = \"\";\n        }\n        return message;\n    }\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../adminmodule/google/protobuf/any\";\nimport { Grant } from \"./authz\";\n\nexport const protobufPackage = \"cosmos.authz.v1beta1\";\n\n/**\n * MsgGrant is a request type for Grant method. It declares authorization to the grantee\n * on behalf of the granter with the provided expiration time.\n */\nexport interface MsgGrant {\n    granter: string;\n    grantee: string;\n    grant: Grant | undefined;\n}\n\n/** MsgExecResponse defines the Msg/MsgExecResponse response type. */\nexport interface MsgExecResponse {\n    results: Uint8Array[];\n}\n\n/**\n * MsgExec attempts to execute the provided messages using\n * authorizations granted to the grantee. Each message should have only\n * one signer corresponding to the granter of the authorization.\n */\nexport interface MsgExec {\n    grantee: string;\n    /**\n     * Authorization Msg requests to execute. Each msg must implement Authorization interface\n     * The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg))\n     * triple and validate it.\n     */\n    msgs: Any[];\n}\n\n/** MsgGrantResponse defines the Msg/MsgGrant response type. */\nexport interface MsgGrantResponse {}\n\n/**\n * MsgRevoke revokes any authorization with the provided sdk.Msg type on the\n * granter's account with that has been granted to the grantee.\n */\nexport interface MsgRevoke {\n    granter: string;\n    grantee: string;\n    msgTypeUrl: string;\n}\n\n/** MsgRevokeResponse defines the Msg/MsgRevokeResponse response type. */\nexport interface MsgRevokeResponse {}\n\nconst baseMsgGrant: object = { granter: \"\", grantee: \"\" };\n\nexport const MsgGrant = {\n    encode(message: MsgGrant, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgGrant {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant } as MsgGrant;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgGrant {\n        const message = { ...baseMsgGrant } as MsgGrant;\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        } else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        } else {\n            message.grantee = \"\";\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        } else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: MsgGrant): unknown {\n        const obj: any = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined &&\n            (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgGrant>): MsgGrant {\n        const message = { ...baseMsgGrant } as MsgGrant;\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        } else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        } else {\n            message.grantee = \"\";\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        } else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\n\nconst baseMsgExecResponse: object = {};\n\nexport const MsgExecResponse = {\n    encode(message: MsgExecResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v!);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgExecResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse } as MsgExecResponse;\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgExecResponse {\n        const message = { ...baseMsgExecResponse } as MsgExecResponse;\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n\n    toJSON(message: MsgExecResponse): unknown {\n        const obj: any = {};\n        if (message.results) {\n            obj.results = message.results.map((e) =>\n                base64FromBytes(e !== undefined ? e : new Uint8Array())\n            );\n        } else {\n            obj.results = [];\n        }\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgExecResponse>): MsgExecResponse {\n        const message = { ...baseMsgExecResponse } as MsgExecResponse;\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\n\nconst baseMsgExec: object = { grantee: \"\" };\n\nexport const MsgExec = {\n    encode(message: MsgExec, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.grantee !== \"\") {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v!, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgExec {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec } as MsgExec;\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgExec {\n        const message = { ...baseMsgExec } as MsgExec;\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        } else {\n            message.grantee = \"\";\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n\n    toJSON(message: MsgExec): unknown {\n        const obj: any = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        } else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgExec>): MsgExec {\n        const message = { ...baseMsgExec } as MsgExec;\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        } else {\n            message.grantee = \"\";\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n\nconst baseMsgGrantResponse: object = {};\n\nexport const MsgGrantResponse = {\n    encode(_: MsgGrantResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgGrantResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse } as MsgGrantResponse;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(_: any): MsgGrantResponse {\n        const message = { ...baseMsgGrantResponse } as MsgGrantResponse;\n        return message;\n    },\n\n    toJSON(_: MsgGrantResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n\n    fromPartial(_: DeepPartial<MsgGrantResponse>): MsgGrantResponse {\n        const message = { ...baseMsgGrantResponse } as MsgGrantResponse;\n        return message;\n    }\n};\n\nconst baseMsgRevoke: object = { granter: \"\", grantee: \"\", msgTypeUrl: \"\" };\n\nexport const MsgRevoke = {\n    encode(message: MsgRevoke, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.granter !== \"\") {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== \"\") {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== \"\") {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevoke {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke } as MsgRevoke;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): MsgRevoke {\n        const message = { ...baseMsgRevoke } as MsgRevoke;\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        } else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        } else {\n            message.grantee = \"\";\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        } else {\n            message.msgTypeUrl = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: MsgRevoke): unknown {\n        const obj: any = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<MsgRevoke>): MsgRevoke {\n        const message = { ...baseMsgRevoke } as MsgRevoke;\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        } else {\n            message.granter = \"\";\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        } else {\n            message.grantee = \"\";\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        } else {\n            message.msgTypeUrl = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseMsgRevokeResponse: object = {};\n\nexport const MsgRevokeResponse = {\n    encode(_: MsgRevokeResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRevokeResponse {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse } as MsgRevokeResponse;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(_: any): MsgRevokeResponse {\n        const message = { ...baseMsgRevokeResponse } as MsgRevokeResponse;\n        return message;\n    },\n\n    toJSON(_: MsgRevokeResponse): unknown {\n        const obj: any = {};\n        return obj;\n    },\n\n    fromPartial(_: DeepPartial<MsgRevokeResponse>): MsgRevokeResponse {\n        const message = { ...baseMsgRevokeResponse } as MsgRevokeResponse;\n        return message;\n    }\n};\n\n/** Msg defines the authz Msg service. */\nexport interface Msg {\n    /**\n     * Grant grants the provided authorization to the grantee on the granter's\n     * account with the provided expiration time. If there is already a grant\n     * for the given (granter, grantee, Authorization) triple, then the grant\n     * will be overwritten.\n     */\n    Grant(request: MsgGrant): Promise<MsgGrantResponse>;\n    /**\n     * Exec attempts to execute the provided messages using\n     * authorizations granted to the grantee. Each message should have only\n     * one signer corresponding to the granter of the authorization.\n     */\n    Exec(request: MsgExec): Promise<MsgExecResponse>;\n    /**\n     * Revoke revokes any authorization corresponding to the provided method name on the\n     * granter's account that has been granted to the grantee.\n     */\n    Revoke(request: MsgRevoke): Promise<MsgRevokeResponse>;\n}\n\nexport class MsgClientImpl implements Msg {\n    private readonly rpc: Rpc;\n    constructor(rpc: Rpc) {\n        this.rpc = rpc;\n        this.Grant = this.Grant.bind(this);\n        this.Exec = this.Exec.bind(this);\n        this.Revoke = this.Revoke.bind(this);\n    }\n    Grant(request: MsgGrant): Promise<MsgGrantResponse> {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Grant\", data);\n        return promise.then((data) => MsgGrantResponse.decode(new _m0.Reader(data)));\n    }\n\n    Exec(request: MsgExec): Promise<MsgExecResponse> {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Exec\", data);\n        return promise.then((data) => MsgExecResponse.decode(new _m0.Reader(data)));\n    }\n\n    Revoke(request: MsgRevoke): Promise<MsgRevokeResponse> {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.authz.v1beta1.Msg\", \"Revoke\", data);\n        return promise.then((data) => MsgRevokeResponse.decode(new _m0.Reader(data)));\n    }\n}\n\ninterface Rpc {\n    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;\n}\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n    globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\n\nconst btoa: (bin: string) => string =\n    globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n    const bin: string[] = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.adminmodule.adminmodule\";\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        } else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        } else {\n            message.description = \"\";\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        } else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        } else {\n            message.submitTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        } else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        } else {\n            message.content = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        } else {\n            message.submitTime = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    } else if (typeof o === \"string\") {\n        return new Date(o);\n    } else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        } else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        } else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := ptypes.MarshalAny(foo)\n *      ...\n *      foo := &pb.Foo{}\n *      if err := ptypes.UnmarshalAny(any, foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n */\nexport interface Any {\n    /**\n     * A URL/resource name that uniquely identifies the type of the serialized\n     * protocol buffer message. This string must contain at least\n     * one \"/\" character. The last segment of the URL's path must represent\n     * the fully qualified name of the type (as in\n     * `path/google.protobuf.Duration`). The name should be in a canonical form\n     * (e.g., leading \".\" is not accepted).\n     *\n     * In practice, teams usually precompile into the binary all types that they\n     * expect it to use in the context of Any. However, for URLs which use the\n     * scheme `http`, `https`, or no scheme, one can optionally set up a type\n     * server that maps type URLs to message definitions as follows:\n     *\n     * * If no scheme is provided, `https` is assumed.\n     * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n     *   value in binary format, or produce an error.\n     * * Applications are allowed to cache lookup results based on the\n     *   URL, or have them precompiled into a binary to avoid any\n     *   lookup. Therefore, binary compatibility needs to be preserved\n     *   on changes to types. (Use versioned type names to manage\n     *   breaking changes.)\n     *\n     * Note: this functionality is not currently available in the official\n     * protobuf release, and it is not used for type URLs beginning with\n     * type.googleapis.com.\n     *\n     * Schemes other than `http`, `https` (or the empty scheme) might be\n     * used with implementation specific semantics.\n     */\n    typeUrl: string;\n    /** Must be a valid serialized protocol buffer of the above specified type. */\n    value: Uint8Array;\n}\n\nconst baseAny: object = { typeUrl: \"\" };\n\nexport const Any = {\n    encode(message: Any, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Any {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny } as Any;\n        message.value = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Any {\n        const message = { ...baseAny } as Any;\n        message.value = new Uint8Array();\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        } else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n\n    toJSON(message: Any): unknown {\n        const obj: any = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(\n                message.value !== undefined ? message.value : new Uint8Array()\n            ));\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Any>): Any {\n        const message = { ...baseAny } as Any;\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        } else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        } else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\nvar globalThis: any = (() => {\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (typeof window !== \"undefined\") return window;\n    if (typeof global !== \"undefined\") return global;\n    throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n    globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\n\nconst btoa: (bin: string) => string =\n    globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n    const bin: string[] = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * A Duration represents a signed, fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like \"day\"\n * or \"month\". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10,000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (duration.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3, minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format, the Duration type is encoded as a string rather than an\n * object, where the string ends in the suffix \"s\" (indicating seconds) and\n * is preceded by the number of seconds, with nanoseconds expressed as\n * fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n * microsecond should be expressed in JSON format as \"3.000001s\".\n */\nexport interface Duration {\n    /**\n     * Signed seconds of the span of time. Must be from -315,576,000,000\n     * to +315,576,000,000 inclusive. Note: these bounds are computed from:\n     * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n     */\n    seconds: Long;\n    /**\n     * Signed fractions of a second at nanosecond resolution of the span\n     * of time. Durations less than one second are represented with a 0\n     * `seconds` field and a positive or negative `nanos` field. For durations\n     * of one second or more, a non-zero value for the `nanos` field must be\n     * of the same sign as the `seconds` field. Must be from -999,999,999\n     * to +999,999,999 inclusive.\n     */\n    nanos: number;\n}\n\nconst baseDuration: object = { seconds: Long.ZERO, nanos: 0 };\n\nexport const Duration = {\n    encode(message: Duration, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.seconds.isZero()) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Duration {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration } as Duration;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = reader.int64() as Long;\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Duration {\n        const message = { ...baseDuration } as Duration;\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Long.fromString(object.seconds);\n        } else {\n            message.seconds = Long.ZERO;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n\n    toJSON(message: Duration): unknown {\n        const obj: any = {};\n        message.seconds !== undefined && (obj.seconds = (message.seconds || Long.ZERO).toString());\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Duration>): Duration {\n        const message = { ...baseDuration } as Duration;\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds as Long;\n        } else {\n            message.seconds = Long.ZERO;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n * ) to obtain a formatter capable of generating timestamps in this format.\n */\nexport interface Timestamp {\n    /**\n     * Represents seconds of UTC time since Unix epoch\n     * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     * 9999-12-31T23:59:59Z inclusive.\n     */\n    seconds: Long;\n    /**\n     * Non-negative fractions of a second at nanosecond resolution. Negative\n     * second values with fractions must still have non-negative nanos values\n     * that count forward in time. Must be from 0 to 999,999,999\n     * inclusive.\n     */\n    nanos: number;\n}\n\nconst baseTimestamp: object = { seconds: Long.ZERO, nanos: 0 };\n\nexport const Timestamp = {\n    encode(message: Timestamp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (!message.seconds.isZero()) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Timestamp {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp } as Timestamp;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = reader.int64() as Long;\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Timestamp {\n        const message = { ...baseTimestamp } as Timestamp;\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Long.fromString(object.seconds);\n        } else {\n            message.seconds = Long.ZERO;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n\n    toJSON(message: Timestamp): unknown {\n        const obj: any = {};\n        message.seconds !== undefined && (obj.seconds = (message.seconds || Long.ZERO).toString());\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Timestamp>): Timestamp {\n        const message = { ...baseTimestamp } as Timestamp;\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds as Long;\n        } else {\n            message.seconds = Long.ZERO;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        } else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined | Long;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../adminmodule/google/protobuf/any\";\nimport { Timestamp } from \"../adminmodule/google/protobuf/timestamp\";\n\nexport const protobufPackage = \"cosmos.authz.v1beta1\";\n\n/**\n * GenericAuthorization gives the grantee unrestricted permissions to execute\n * the provided method on behalf of the granter's account.\n */\nexport interface GenericAuthorization {\n    /** Msg, identified by it's type URL, to grant unrestricted permissions to execute */\n    msg: string;\n}\n\n/**\n * Grant gives permissions to execute\n * the provide method with expiration time.\n */\nexport interface Grant {\n    authorization: Any | undefined;\n    expiration: Date | undefined;\n}\n\nconst baseGenericAuthorization: object = { msg: \"\" };\n\nexport const GenericAuthorization = {\n    encode(message: GenericAuthorization, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.msg !== \"\") {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): GenericAuthorization {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization } as GenericAuthorization;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): GenericAuthorization {\n        const message = { ...baseGenericAuthorization } as GenericAuthorization;\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        } else {\n            message.msg = \"\";\n        }\n        return message;\n    },\n\n    toJSON(message: GenericAuthorization): unknown {\n        const obj: any = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<GenericAuthorization>): GenericAuthorization {\n        const message = { ...baseGenericAuthorization } as GenericAuthorization;\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        } else {\n            message.msg = \"\";\n        }\n        return message;\n    }\n};\n\nconst baseGrant: object = {};\n\nexport const Grant = {\n    encode(message: Grant, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n\n    decode(input: _m0.Reader | Uint8Array, length?: number): Grant {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant } as Grant;\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n\n    fromJSON(object: any): Grant {\n        const message = { ...baseGrant } as Grant;\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        } else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        } else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n\n    toJSON(message: Grant): unknown {\n        const obj: any = {};\n        message.authorization !== undefined &&\n            (obj.authorization = message.authorization\n                ? Any.toJSON(message.authorization)\n                : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration.toISOString());\n        return obj;\n    },\n\n    fromPartial(object: DeepPartial<Grant>): Grant {\n        const message = { ...baseGrant } as Grant;\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        } else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        } else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin\n    ? T\n    : T extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : T extends {}\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Partial<T>;\n\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = date.getTime() / 1_000;\n    const nanos = (date.getTime() % 1_000) * 1_000_000;\n    return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = t.seconds * 1_000;\n    millis += t.nanos / 1_000_000;\n    return new Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n    if (o instanceof Date) {\n        return o;\n    } else if (typeof o === \"string\") {\n        return new Date(o);\n    } else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n"],"sourceRoot":""}